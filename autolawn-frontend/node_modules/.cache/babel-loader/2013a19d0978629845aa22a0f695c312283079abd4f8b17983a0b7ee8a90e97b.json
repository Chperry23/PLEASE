{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\RouteAssignments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport { ChevronDownIcon, ChevronUpIcon, UserIcon, UsersIcon, BriefcaseIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteAssignments = () => {\n  _s();\n  const [routes, setRoutes] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedRoutes, setExpandedRoutes] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [routesResponse, jobsResponse, employeesResponse, crewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/jobs'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n        const fetchedRoutes = routesResponse.routes || {};\n        const fetchedJobs = jobsResponse || [];\n        const fetchedEmployees = employeesResponse || [];\n        const fetchedCrews = crewsResponse || [];\n\n        // Log the fetched data\n        console.log('Fetched Routes:', fetchedRoutes);\n        console.log('Fetched Jobs:', fetchedJobs);\n        console.log('Fetched Employees:', fetchedEmployees);\n        console.log('Fetched Crews:', fetchedCrews);\n\n        // Process the data to include job details and assignments\n        processRoutesData(fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to fetch data. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const processRoutesData = (fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews) => {\n    // Create lookup maps\n    const jobMap = {};\n    fetchedJobs.forEach(job => {\n      jobMap[job._id] = job;\n    });\n    const employeeMap = {};\n    fetchedEmployees.forEach(employee => {\n      employeeMap[employee._id] = employee;\n    });\n    const crewMap = {};\n    fetchedCrews.forEach(crew => {\n      crewMap[crew._id] = crew;\n    });\n\n    // Process routes\n    const processedRoutes = {};\n    for (const [day, dayRoutes] of Object.entries(fetchedRoutes)) {\n      processedRoutes[day] = dayRoutes.map(route => {\n        // Flatten jobs if they are grouped\n        let fullJobs = [];\n        if (Array.isArray(route.jobs)) {\n          fullJobs = route.jobs.map(job => typeof job === 'string' ? jobMap[job] : job).filter(job => job);\n        } else if (typeof route.jobs === 'object' && route.jobs !== null) {\n          const jobGroups = Object.values(route.jobs).flat();\n          fullJobs = jobGroups.map(job => typeof job === 'string' ? jobMap[job] : job).filter(job => job);\n        }\n\n        // Get assigned employee or crew\n        let assignedEmployee = null;\n        let assignedCrew = null;\n        if (route.employee) {\n          if (typeof route.employee === 'string') {\n            assignedEmployee = employeeMap[route.employee];\n          } else if (typeof route.employee === 'object' && route.employee._id) {\n            assignedEmployee = employeeMap[route.employee._id] || route.employee;\n          }\n        }\n        if (route.crew) {\n          if (typeof route.crew === 'string') {\n            assignedCrew = crewMap[route.crew];\n          } else if (typeof route.crew === 'object' && route.crew._id) {\n            assignedCrew = crewMap[route.crew._id] || route.crew;\n          }\n        }\n        return {\n          ...route,\n          jobs: fullJobs,\n          employee: assignedEmployee,\n          crew: assignedCrew\n        };\n      });\n    }\n    setRoutes(processedRoutes);\n\n    // Log the processed routes\n    console.log('Processed Routes:', processedRoutes);\n  };\n  const toggleRouteExpansion = (day, index) => {\n    setExpandedRoutes(prev => {\n      var _prev$day;\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          [index]: !((_prev$day = prev[day]) !== null && _prev$day !== void 0 && _prev$day[index])\n        }\n      };\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-2xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-2xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-8 text-white\",\n        children: \"Route Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), Object.entries(routes).map(([day, dayRoutes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-6 text-white border-b border-gray-700 pb-2\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), dayRoutes && dayRoutes.length > 0 ? dayRoutes.map((route, index) => {\n          var _expandedRoutes$day, _expandedRoutes$day2, _expandedRoutes$day3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 shadow rounded-lg mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-5 sm:px-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(BriefcaseIcon, {\n                    className: \"h-6 w-6 text-blue-400 mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xl font-bold text-blue-400\",\n                    children: route.name || `Route ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: route.employee ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-green-400\",\n                    children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n                      className: \"h-5 w-5 mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 29\n                    }, this), route.employee.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 27\n                  }, this) : route.crew ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-green-400\",\n                    children: [/*#__PURE__*/_jsxDEV(UsersIcon, {\n                      className: \"h-5 w-5 mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 29\n                    }, this), route.crew.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-red-400\",\n                    children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n                      className: \"h-5 w-5 mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 29\n                    }, this), \"Unassigned\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-300\",\n                  children: [route.jobs.length, \" Job\", route.jobs.length !== 1 ? 's' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleRouteExpansion(day, index),\n                  className: \"flex items-center text-sm text-blue-400 hover:text-blue-300\",\n                  children: [(_expandedRoutes$day = expandedRoutes[day]) !== null && _expandedRoutes$day !== void 0 && _expandedRoutes$day[index] ? 'Hide Details' : 'Show Details', (_expandedRoutes$day2 = expandedRoutes[day]) !== null && _expandedRoutes$day2 !== void 0 && _expandedRoutes$day2[index] ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                    className: \"ml-1 h-5 w-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                    className: \"ml-1 h-5 w-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), ((_expandedRoutes$day3 = expandedRoutes[day]) === null || _expandedRoutes$day3 === void 0 ? void 0 : _expandedRoutes$day3[index]) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-t border-gray-700 px-4 py-5 sm:px-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-medium text-white mb-4\",\n                children: \"Jobs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: route.jobs.map((job, jobIndex) => {\n                  var _job$customer, _job$location;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"bg-gray-700 rounded-md p-4 mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-lg font-semibold text-blue-300\",\n                        children: job.title || 'Untitled Job'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-400\",\n                        children: ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-1 text-sm text-gray-300\",\n                      children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2 grid grid-cols-2 gap-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-semibold\",\n                          children: \"Cost:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 33\n                        }, this), \" $\", job.cost || 'N/A']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-semibold\",\n                          children: \"Status:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 33\n                        }, this), \" \", job.status || 'Unknown']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-semibold\",\n                          children: \"Last Service Date:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 33\n                        }, this), ' ', job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'N/A']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-semibold\",\n                          children: \"Recurrence:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 33\n                        }, this), ' ', job.isRecurring ? job.recurrencePattern : 'One-time']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 29\n                    }, this)]\n                  }, jobIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"No routes available for \", day, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteAssignments, \"XXZ779dT1qMziFJLYyeguqSikB4=\");\n_c = RouteAssignments;\nexport default RouteAssignments;\nvar _c;\n$RefreshReg$(_c, \"RouteAssignments\");","map":{"version":3,"names":["React","useState","useEffect","fetchWithAuth","Header","ChevronDownIcon","ChevronUpIcon","UserIcon","UsersIcon","BriefcaseIcon","jsxDEV","_jsxDEV","RouteAssignments","_s","routes","setRoutes","loading","setLoading","error","setError","expandedRoutes","setExpandedRoutes","fetchData","routesResponse","jobsResponse","employeesResponse","crewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","console","log","processRoutesData","err","jobMap","forEach","job","_id","employeeMap","employee","crewMap","crew","processedRoutes","day","dayRoutes","Object","entries","map","route","fullJobs","Array","isArray","jobs","filter","jobGroups","values","flat","assignedEmployee","assignedCrew","toggleRouteExpansion","index","prev","_prev$day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_expandedRoutes$day","_expandedRoutes$day2","_expandedRoutes$day3","name","onClick","jobIndex","_job$customer","_job$location","title","customer","location","address","cost","status","lastServiceDate","Date","toLocaleDateString","isRecurring","recurrencePattern","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/RouteAssignments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWithAuth } from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  UserIcon,\r\n  UsersIcon,\r\n  BriefcaseIcon,\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst RouteAssignments = () => {\r\n  const [routes, setRoutes] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedRoutes, setExpandedRoutes] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [routesResponse, jobsResponse, employeesResponse, crewsResponse] = await Promise.all([\r\n          fetchWithAuth('/routes'),\r\n          fetchWithAuth('/jobs'),\r\n          fetchWithAuth('/employees'),\r\n          fetchWithAuth('/crews'),\r\n        ]);\r\n\r\n        const fetchedRoutes = routesResponse.routes || {};\r\n        const fetchedJobs = jobsResponse || [];\r\n        const fetchedEmployees = employeesResponse || [];\r\n        const fetchedCrews = crewsResponse || [];\r\n\r\n        // Log the fetched data\r\n        console.log('Fetched Routes:', fetchedRoutes);\r\n        console.log('Fetched Jobs:', fetchedJobs);\r\n        console.log('Fetched Employees:', fetchedEmployees);\r\n        console.log('Fetched Crews:', fetchedCrews);\r\n\r\n        // Process the data to include job details and assignments\r\n        processRoutesData(fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError('Failed to fetch data. Please try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const processRoutesData = (fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews) => {\r\n    // Create lookup maps\r\n    const jobMap = {};\r\n    fetchedJobs.forEach(job => {\r\n      jobMap[job._id] = job;\r\n    });\r\n  \r\n    const employeeMap = {};\r\n    fetchedEmployees.forEach(employee => {\r\n      employeeMap[employee._id] = employee;\r\n    });\r\n  \r\n    const crewMap = {};\r\n    fetchedCrews.forEach(crew => {\r\n      crewMap[crew._id] = crew;\r\n    });\r\n  \r\n    // Process routes\r\n    const processedRoutes = {};\r\n  \r\n    for (const [day, dayRoutes] of Object.entries(fetchedRoutes)) {\r\n      processedRoutes[day] = dayRoutes.map(route => {\r\n        // Flatten jobs if they are grouped\r\n        let fullJobs = [];\r\n        if (Array.isArray(route.jobs)) {\r\n          fullJobs = route.jobs.map(job => (typeof job === 'string' ? jobMap[job] : job)).filter(job => job);\r\n        } else if (typeof route.jobs === 'object' && route.jobs !== null) {\r\n          const jobGroups = Object.values(route.jobs).flat();\r\n          fullJobs = jobGroups.map(job => (typeof job === 'string' ? jobMap[job] : job)).filter(job => job);\r\n        }\r\n  \r\n        // Get assigned employee or crew\r\n        let assignedEmployee = null;\r\n        let assignedCrew = null;\r\n  \r\n        if (route.employee) {\r\n          if (typeof route.employee === 'string') {\r\n            assignedEmployee = employeeMap[route.employee];\r\n          } else if (typeof route.employee === 'object' && route.employee._id) {\r\n            assignedEmployee = employeeMap[route.employee._id] || route.employee;\r\n          }\r\n        }\r\n  \r\n        if (route.crew) {\r\n          if (typeof route.crew === 'string') {\r\n            assignedCrew = crewMap[route.crew];\r\n          } else if (typeof route.crew === 'object' && route.crew._id) {\r\n            assignedCrew = crewMap[route.crew._id] || route.crew;\r\n          }\r\n        }\r\n  \r\n        return {\r\n          ...route,\r\n          jobs: fullJobs,\r\n          employee: assignedEmployee,\r\n          crew: assignedCrew,\r\n        };\r\n      });\r\n    }\r\n  \r\n    setRoutes(processedRoutes);\r\n\r\n    // Log the processed routes\r\n    console.log('Processed Routes:', processedRoutes);\r\n  };\r\n\r\n  const toggleRouteExpansion = (day, index) => {\r\n    setExpandedRoutes(prev => ({\r\n      ...prev,\r\n      [day]: {\r\n        ...prev[day],\r\n        [index]: !prev[day]?.[index]\r\n      }\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-white text-2xl\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-red-500 text-2xl\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-200\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold mb-8 text-white\">Route Assignments</h1>\r\n        {Object.entries(routes).map(([day, dayRoutes]) => (\r\n          <div key={day} className=\"mb-12\">\r\n            <h2 className=\"text-2xl font-semibold mb-6 text-white border-b border-gray-700 pb-2\">\r\n              {day}\r\n            </h2>\r\n            {dayRoutes && dayRoutes.length > 0 ? (\r\n              dayRoutes.map((route, index) => (\r\n                <div key={index} className=\"bg-gray-800 shadow rounded-lg mb-6\">\r\n                  {/* Route Header */}\r\n                  <div className=\"px-4 py-5 sm:px-6\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center\">\r\n                        <BriefcaseIcon className=\"h-6 w-6 text-blue-400 mr-2\" />\r\n                        <div className=\"text-xl font-bold text-blue-400\">\r\n                          {route.name || `Route ${index + 1}`}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        {route.employee ? (\r\n                          <div className=\"flex items-center text-green-400\">\r\n                            <UserIcon className=\"h-5 w-5 mr-1\" />\r\n                            {route.employee.name}\r\n                          </div>\r\n                        ) : route.crew ? (\r\n                          <div className=\"flex items-center text-green-400\">\r\n                            <UsersIcon className=\"h-5 w-5 mr-1\" />\r\n                            {route.crew.name}\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"flex items-center text-red-400\">\r\n                            <UserIcon className=\"h-5 w-5 mr-1\" />\r\n                            Unassigned\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-2 flex items-center justify-between\">\r\n                      <p className=\"text-sm text-gray-300\">\r\n                        {route.jobs.length} Job{route.jobs.length !== 1 ? 's' : ''}\r\n                      </p>\r\n                      <button\r\n                        onClick={() => toggleRouteExpansion(day, index)}\r\n                        className=\"flex items-center text-sm text-blue-400 hover:text-blue-300\"\r\n                      >\r\n                        {expandedRoutes[day]?.[index] ? 'Hide Details' : 'Show Details'}\r\n                        {expandedRoutes[day]?.[index] ? (\r\n                          <ChevronUpIcon className=\"ml-1 h-5 w-5\" />\r\n                        ) : (\r\n                          <ChevronDownIcon className=\"ml-1 h-5 w-5\" />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* Route Details */}\r\n                  {expandedRoutes[day]?.[index] && (\r\n                    <div className=\"border-t border-gray-700 px-4 py-5 sm:px-6\">\r\n                      <h4 className=\"text-lg font-medium text-white mb-4\">Jobs:</h4>\r\n                      <ul>\r\n                        {route.jobs.map((job, jobIndex) => (\r\n                          <li key={jobIndex} className=\"bg-gray-700 rounded-md p-4 mb-4\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <p className=\"text-lg font-semibold text-blue-300\">\r\n                                {job.title || 'Untitled Job'}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-400\">\r\n                                {job.customer?.name || 'No Customer'}\r\n                              </p>\r\n                            </div>\r\n                            <p className=\"mt-1 text-sm text-gray-300\">\r\n                              {job.location?.address || 'No Address'}\r\n                            </p>\r\n                            <div className=\"mt-2 grid grid-cols-2 gap-4\">\r\n                              <p className=\"text-sm text-gray-300\">\r\n                                <span className=\"font-semibold\">Cost:</span> ${job.cost || 'N/A'}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-300\">\r\n                                <span className=\"font-semibold\">Status:</span> {job.status || 'Unknown'}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-300\">\r\n                                <span className=\"font-semibold\">Last Service Date:</span>{' '}\r\n                                {job.lastServiceDate\r\n                                  ? new Date(job.lastServiceDate).toLocaleDateString()\r\n                                  : 'N/A'}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-300\">\r\n                                <span className=\"font-semibold\">Recurrence:</span>{' '}\r\n                                {job.isRecurring ? job.recurrencePattern : 'One-time'}\r\n                              </p>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-400\">No routes available for {day}.</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteAssignments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}