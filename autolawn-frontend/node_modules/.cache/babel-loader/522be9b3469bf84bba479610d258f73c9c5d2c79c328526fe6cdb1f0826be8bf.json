{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      generateEvents(routesData || []);\n    } catch (err) {\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateEvents = routesData => {\n    const generatedEvents = routesData.flatMap(route => route.customers.map(customer => ({\n      id: customer._id,\n      title: `${route.name}: ${customer.name}`,\n      start: customer.scheduledDate || new Date(),\n      end: customer.scheduledEndDate || new Date(new Date().getTime() + 60 * 60 * 1000),\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'customer',\n        routeId: route._id,\n        customerId: customer._id\n      }\n    })));\n    setEvents(generatedEvents);\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    const job = jobs.find(j => j._id === jobId);\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n      ...route,\n      customers: [...route.customers, job]\n    } : route));\n    await updateJobRoute(jobId, routeId);\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    const jobId = event.id;\n    const startDate = event.start;\n    try {\n      await updateJob(jobId, {\n        scheduledDate: startDate\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? {\n        ...job,\n        scheduledDate: startDate\n      } : job));\n      setEvents(prevEvents => [...prevEvents, {\n        id: jobId,\n        title: event.title,\n        start: startDate,\n        end: new Date(startDate.getTime() + 60 * 60 * 1000),\n        color: '#4CAF50',\n        extendedProps: {\n          type: 'job',\n          jobId\n        }\n      }]);\n      setSuccessMessage('Job scheduled successfully!');\n    } catch (error) {\n      setError('Failed to schedule job. Please try again.');\n      info.revert();\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    const route = routes.find(r => r._id === routeId);\n    const job = route.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? {\n      ...r,\n      customers: r.customers.filter(j => j._id !== jobId)\n    } : r));\n    setJobs(prevJobs => [...prevJobs, job]);\n    await updateJobRoute(jobId, null);\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\n    const job = sourceRoute.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(route => {\n      if (route._id === sourceRouteId) {\n        return {\n          ...route,\n          customers: route.customers.filter(j => j._id !== jobId)\n        };\n      }\n      if (route._id === destRouteId) {\n        return {\n          ...route,\n          customers: [...route.customers, job]\n        };\n      }\n      return route;\n    }));\n    await updateJobRoute(jobId, destRouteId);\n  };\n  const updateJobRoute = async (jobId, routeId) => {\n    try {\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setSuccessMessage('Job updated successfully!');\n    } catch (error) {\n      setError('Failed to update job route. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes([...routes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(routes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await saveRoute({\n        ...routes.find(r => r._id === routeId),\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    try {\n      const updatedEvent = await updateCalendarEvent({\n        id: event.id,\n        start: event.start,\n        end: event.end\n      });\n      setEvents(prevEvents => prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e));\n      const {\n        routeId,\n        customerId\n      } = event.extendedProps;\n      const updatedRoutes = routes.map(route => {\n        if (route._id === routeId) {\n          return {\n            ...route,\n            customers: route.customers.map(customer => customer._id === customerId ? {\n              ...customer,\n              scheduledDate: event.start,\n              scheduledEndDate: event.end\n            } : customer)\n          };\n        }\n        return route;\n      });\n      setRoutes(updatedRoutes);\n    } catch (error) {\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  useEffect(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      new Draggable(elem, {\n        eventData: function () {\n          return JSON.parse(elem.getAttribute('data-event'));\n        }\n      });\n    });\n  }, [jobs]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setActiveTab(e.target.value),\n              className: \"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"routes\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"jobs\",\n                children: \"Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"calendar\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"map\",\n                children: \"Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'jobs', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const newName = prompt('Enter new route name:', route.name);\n                          if (newName) handleEditRouteName(route._id, newName);\n                        },\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Edit Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleMapView(route._id),\n                        className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                        children: \"View Map\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow fc-event\",\n                      \"data-event\": JSON.stringify({\n                        id: job._id,\n                        title: job.title,\n                        duration: '01:00'\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), activeTab === 'jobs' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobs-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: jobs.map(job => {\n                var _job$customer2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold\",\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: job.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Status: \", job.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this)]\n                }, job._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"external-events\",\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-pointer\",\n                \"data-event\": JSON.stringify({\n                  id: job._id,\n                  title: job.title,\n                  duration: '01:00'\n                }),\n                children: job.title\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"dayGridMonth\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              editable: true,\n              droppable: true,\n              events: events,\n              eventDrop: handleEventDrop,\n              eventReceive: handleEventReceive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"BkCL07uututLKsvMbubnTsipT/g=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateCalendarEvent","updateJob","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","fetchData","jobsData","routesData","Promise","all","generateEvents","err","generatedEvents","flatMap","route","customers","map","customer","id","_id","title","name","start","scheduledDate","Date","end","scheduledEndDate","getTime","color","extendedProps","type","routeId","customerId","onDragEnd","result","source","destination","droppableId","startsWith","jobId","draggableId","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","job","find","j","prevJobs","filter","prevRoutes","updateJobRoute","handleEventReceive","info","event","startDate","prevEvents","revert","r","sourceRoute","handleMapView","handleAddRoute","newRoute","length","handleDeleteRoute","handleEditRouteName","newName","updatedRoute","handleEventDrop","updatedEvent","e","updatedRoutes","draggableElems","document","querySelectorAll","forEach","elem","eventData","JSON","parse","getAttribute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onChange","target","value","tab","onClick","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","duration","description","status","toLocaleString","_job$customer2","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob } from './api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      generateEvents(routesData || []);\r\n    } catch (err) {\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateEvents = (routesData) => {\r\n    const generatedEvents = routesData.flatMap(route => \r\n      route.customers.map(customer => ({\r\n        id: customer._id,\r\n        title: `${route.name}: ${customer.name}`,\r\n        start: customer.scheduledDate || new Date(),\r\n        end: customer.scheduledEndDate || new Date(new Date().getTime() + 60*60*1000),\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'customer', routeId: route._id, customerId: customer._id }\r\n      }))\r\n    );\r\n    setEvents(generatedEvents);\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    const job = jobs.find(j => j._id === jobId);\r\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => \r\n      route._id === routeId \r\n        ? { ...route, customers: [...route.customers, job] }\r\n        : route\r\n    ));\r\n    await updateJobRoute(jobId, routeId);\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    const jobId = event.id;\r\n    const startDate = event.start;\r\n    try {\r\n      await updateJob(jobId, { scheduledDate: startDate });\r\n      setJobs(prevJobs => prevJobs.map(job => \r\n        job._id === jobId ? { ...job, scheduledDate: startDate } : job\r\n      ));\r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: jobId,\r\n        title: event.title,\r\n        start: startDate,\r\n        end: new Date(startDate.getTime() + 60 * 60 * 1000),\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'job', jobId }\r\n      }]);\r\n      setSuccessMessage('Job scheduled successfully!');\r\n    } catch (error) {\r\n      setError('Failed to schedule job. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    const route = routes.find(r => r._id === routeId);\r\n    const job = route.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(r => \r\n      r._id === routeId \r\n        ? { ...r, customers: r.customers.filter(j => j._id !== jobId) }\r\n        : r\r\n    ));\r\n    setJobs(prevJobs => [...prevJobs, job]);\r\n    await updateJobRoute(jobId, null);\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\r\n    const job = sourceRoute.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(route => {\r\n      if (route._id === sourceRouteId) {\r\n        return { ...route, customers: route.customers.filter(j => j._id !== jobId) };\r\n      }\r\n      if (route._id === destRouteId) {\r\n        return { ...route, customers: [...route.customers, job] };\r\n      }\r\n      return route;\r\n    }));\r\n    await updateJobRoute(jobId, destRouteId);\r\n  };\r\n\r\n  const updateJobRoute = async (jobId, routeId) => {\r\n    try {\r\n      await updateJob(jobId, { route: routeId });\r\n      setSuccessMessage('Job updated successfully!');\r\n    } catch (error) {\r\n      setError('Failed to update job route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes([...routes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(routes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await saveRoute({ ...routes.find(r => r._id === routeId), name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    try {\r\n      const updatedEvent = await updateCalendarEvent({\r\n        id: event.id,\r\n        start: event.start,\r\n        end: event.end,\r\n      });\r\n      setEvents(prevEvents => \r\n        prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e)\r\n      );\r\n      const { routeId, customerId } = event.extendedProps;\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === routeId) {\r\n          return {\r\n            ...route,\r\n            customers: route.customers.map(customer => \r\n              customer._id === customerId \r\n                ? { ...customer, scheduledDate: event.start, scheduledEndDate: event.end }\r\n                : customer\r\n            )\r\n          };\r\n        }\r\n        return route;\r\n      });\r\n      setRoutes(updatedRoutes);\r\n    } catch (error) {\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      new Draggable(elem, {\r\n        eventData: function() {\r\n          return JSON.parse(elem.getAttribute('data-event'));\r\n        }\r\n      });\r\n    });\r\n  }, [jobs]);\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6\">\r\n            <div className=\"sm:hidden\">\r\n              <select\r\n                onChange={(e) => setActiveTab(e.target.value)}\r\n                className=\"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"routes\">Routes</option>\r\n                <option value=\"jobs\">Jobs</option>\r\n                <option value=\"calendar\">Calendar</option>\r\n                <option value=\"map\">Map</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'jobs', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  const newName = prompt('Enter new route name:', route.name);\r\n                                  if (newName) handleEditRouteName(route._id, newName);\r\n                                }}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Edit Name\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMapView(route._id)}\r\n                                className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                              >\r\n                                View Map\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow fc-event\"\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00'\r\n                              })}\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                              <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n\r\n            {activeTab === 'jobs' && (\r\n              <div className=\"jobs-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Jobs</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {jobs.map(job => (\r\n                    <div key={job._id} className=\"bg-gray-100 p-4 rounded-lg text-black\">\r\n                      <h3 className=\"font-semibold\">{job.title}</h3>\r\n                      <p>{job.description}</p>\r\n                      <p>Status: {job.status}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'calendar' && (\r\n              <div className=\"calendar-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Schedule</h2>\r\n                <div id=\"external-events\" className=\"mb-4\">\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Jobs</h4>\r\n                  {jobs.map(job => (\r\n                    <div\r\n                      key={job._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-pointer\"\r\n                      data-event={JSON.stringify({\r\n                        id: job._id,\r\n                        title: job.title,\r\n                        duration: '01:00'\r\n                      })}\r\n                    >\r\n                      {job.title}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <FullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  initialView=\"dayGridMonth\"\r\n                  headerToolbar={{\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                  }}\r\n                  editable={true}\r\n                  droppable={true}\r\n                  events={events}\r\n                  eventDrop={handleEventDrop}\r\n                  eventReceive={handleEventReceive}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}