{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Header from '../components/Header';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst DAYS_OF_WEEK = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst BuildRoutes = () => {\n  _s();\n  var _routes$selectedDay, _routes$selectedDay2, _routes$selectedDay3;\n  const [routes, setRoutes] = useState({});\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('Monday');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRoutesAndJobs = async () => {\n      await fetchRouteAndJobs();\n    };\n    fetchRoutesAndJobs();\n  }, [selectedDay]);\n  const fetchRouteAndJobs = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [routeResponse, jobsResponse] = await Promise.all([axios.get(`${API_BASE_URL}/routes/${selectedDay}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }), axios.get(`${API_BASE_URL}/jobs/available`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })]);\n      setRoutes(prevRoutes => ({\n        ...prevRoutes,\n        [selectedDay]: routeResponse.data || {\n          route1: [],\n          route2: [],\n          route3: []\n        }\n      }));\n      setJobPool(jobsResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load routes and jobs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceList = source.droppableId;\n    const destList = destination.droppableId;\n    let updatedRoutes = {\n      ...routes\n    };\n    let updatedJobPool = [...jobPool];\n    let movedJob = null;\n    if (sourceList === 'jobPool' && destList.startsWith('route')) {\n      [movedJob] = updatedJobPool.splice(source.index, 1);\n      if (!updatedRoutes[selectedDay]) {\n        updatedRoutes[selectedDay] = {\n          route1: [],\n          route2: [],\n          route3: []\n        };\n      }\n      if (!updatedRoutes[selectedDay][destList]) {\n        updatedRoutes[selectedDay][destList] = [];\n      }\n      updatedRoutes[selectedDay][destList].push(movedJob);\n    } else if (sourceList.startsWith('route') && destList === 'jobPool') {\n      [movedJob] = updatedRoutes[selectedDay][sourceList].splice(source.index, 1);\n      updatedJobPool.push(movedJob);\n    } else if (sourceList.startsWith('route') && destList.startsWith('route')) {\n      [movedJob] = updatedRoutes[selectedDay][sourceList].splice(source.index, 1);\n      if (!updatedRoutes[selectedDay][destList]) {\n        updatedRoutes[selectedDay][destList] = [];\n      }\n      updatedRoutes[selectedDay][destList].splice(destination.index, 0, movedJob);\n    }\n    setRoutes(updatedRoutes);\n    setJobPool(updatedJobPool);\n    if (movedJob && destList.startsWith('route')) {\n      try {\n        // Save the updated route to the backend\n        await axios.put(`${API_BASE_URL}/routes/${selectedDay}`, updatedRoutes[selectedDay], {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n\n        // Update the job status in the backend to persist the change\n        await axios.put(`${API_BASE_URL}/jobs/${movedJob._id}/schedule`, {\n          scheduledDay: selectedDay,\n          route: destList\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (error) {\n        console.error('Error updating route or job:', error);\n        setError('Failed to update route or job. Please try again.');\n        fetchRouteAndJobs();\n      }\n    }\n  };\n  const renderJobList = (listId, jobs, routeName) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: listId,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      className: `bg-gray-800 p-4 rounded ${routeName ? 'min-h-[600px]' : 'min-h-[150px] flex flex-wrap gap-4'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: routeName ? routeName : 'Job Pool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: (provided, snapshot) => {\n            var _job$customer;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `bg-green-700 p-2 rounded text-white ${job.recurrence === 'One-time' ? 'bg-opacity-50' : ''}`,\n              style: {\n                ...provided.draggableProps.style,\n                boxShadow: snapshot.isDragging ? \"0 0 10px rgba(0,0,0,0.5)\" : \"none\",\n                width: 'calc(100% - 16px)',\n                // Adjusted width\n                height: `${job.duration * 50}px`,\n                // Adjusted height based on duration\n                marginBottom: '8px' // Added margin to create space between rows\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-bold\",\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs\",\n                children: job.recurrence\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this);\n          }\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n  const handlePrevDay = () => {\n    const currentIndex = DAYS_OF_WEEK.indexOf(selectedDay);\n    const prevIndex = (currentIndex - 1 + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n    setSelectedDay(DAYS_OF_WEEK[prevIndex]);\n  };\n  const handleNextDay = () => {\n    const currentIndex = DAYS_OF_WEEK.indexOf(selectedDay);\n    const nextIndex = (currentIndex + 1) % DAYS_OF_WEEK.length;\n    setSelectedDay(DAYS_OF_WEEK[nextIndex]);\n  };\n  const renderTimeScale = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-scale flex flex-col mr-2\",\n    children: ['6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM'].map(time => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-slot h-[50px] text-white\",\n      children: time\n    }, time, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-white\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: \"Build Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevDay,\n          className: \"bg-gray-800 p-2 rounded\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextDay,\n          className: \"bg-gray-800 p-2 rounded\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-1\",\n            children: renderTimeScale()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-4 grid grid-cols-3 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderJobList('route1', ((_routes$selectedDay = routes[selectedDay]) === null || _routes$selectedDay === void 0 ? void 0 : _routes$selectedDay.route1) || [], 'Route 1')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderJobList('route2', ((_routes$selectedDay2 = routes[selectedDay]) === null || _routes$selectedDay2 === void 0 ? void 0 : _routes$selectedDay2.route2) || [], 'Route 2')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderJobList('route3', ((_routes$selectedDay3 = routes[selectedDay]) === null || _routes$selectedDay3 === void 0 ? void 0 : _routes$selectedDay3.route3) || [], 'Route 3')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: renderJobList('jobPool', jobPool)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"orTZF/gGC6Ke5cMhFs7V5JQ9v+o=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","Header","ChevronLeftIcon","ChevronRightIcon","jsxDEV","_jsxDEV","API_BASE_URL","DAYS_OF_WEEK","BuildRoutes","_s","_routes$selectedDay","_routes$selectedDay2","_routes$selectedDay3","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","fetchRoutesAndJobs","fetchRouteAndJobs","routeResponse","jobsResponse","Promise","all","get","headers","Authorization","localStorage","getItem","prevRoutes","data","route1","route2","route3","console","onDragEnd","result","source","destination","sourceList","droppableId","destList","updatedRoutes","updatedJobPool","movedJob","startsWith","splice","index","push","put","_id","scheduledDay","route","renderJobList","listId","jobs","routeName","children","provided","droppableProps","ref","innerRef","className","fileName","_jsxFileName","lineNumber","columnNumber","map","job","draggableId","snapshot","_job$customer","draggableProps","dragHandleProps","recurrence","style","boxShadow","isDragging","width","height","duration","marginBottom","title","customer","name","placeholder","handlePrevDay","currentIndex","indexOf","prevIndex","length","handleNextDay","nextIndex","renderTimeScale","time","onClick","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Header from '../components/Header';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst DAYS_OF_WEEK = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState({});\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('Monday');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n  const fetchRoutesAndJobs = async () => {\r\n    await fetchRouteAndJobs();\r\n  };\r\n  fetchRoutesAndJobs();\r\n}, [selectedDay]);\r\n\r\n  const fetchRouteAndJobs = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [routeResponse, jobsResponse] = await Promise.all([\r\n        axios.get(`${API_BASE_URL}/routes/${selectedDay}`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        }),\r\n        axios.get(`${API_BASE_URL}/jobs/available`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        })\r\n      ]);\r\n\r\n      setRoutes(prevRoutes => ({\r\n        ...prevRoutes,\r\n        [selectedDay]: routeResponse.data || { route1: [], route2: [], route3: [] }\r\n      }));\r\n      setJobPool(jobsResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Failed to load routes and jobs. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceList = source.droppableId;\r\n    const destList = destination.droppableId;\r\n\r\n    let updatedRoutes = { ...routes };\r\n    let updatedJobPool = [...jobPool];\r\n    let movedJob = null;\r\n\r\n    if (sourceList === 'jobPool' && destList.startsWith('route')) {\r\n      [movedJob] = updatedJobPool.splice(source.index, 1);\r\n      if (!updatedRoutes[selectedDay]) {\r\n        updatedRoutes[selectedDay] = { route1: [], route2: [], route3: [] };\r\n      }\r\n      if (!updatedRoutes[selectedDay][destList]) {\r\n        updatedRoutes[selectedDay][destList] = [];\r\n      }\r\n      updatedRoutes[selectedDay][destList].push(movedJob);\r\n    } else if (sourceList.startsWith('route') && destList === 'jobPool') {\r\n      [movedJob] = updatedRoutes[selectedDay][sourceList].splice(source.index, 1);\r\n      updatedJobPool.push(movedJob);\r\n    } else if (sourceList.startsWith('route') && destList.startsWith('route')) {\r\n      [movedJob] = updatedRoutes[selectedDay][sourceList].splice(source.index, 1);\r\n      if (!updatedRoutes[selectedDay][destList]) {\r\n        updatedRoutes[selectedDay][destList] = [];\r\n      }\r\n      updatedRoutes[selectedDay][destList].splice(destination.index, 0, movedJob);\r\n    }\r\n\r\n    setRoutes(updatedRoutes);\r\n    setJobPool(updatedJobPool);\r\n\r\n    if (movedJob && destList.startsWith('route')) {\r\n      try {\r\n        // Save the updated route to the backend\r\n        await axios.put(`${API_BASE_URL}/routes/${selectedDay}`, updatedRoutes[selectedDay], {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n\r\n        // Update the job status in the backend to persist the change\r\n        await axios.put(`${API_BASE_URL}/jobs/${movedJob._id}/schedule`, { \r\n          scheduledDay: selectedDay, \r\n          route: destList \r\n        }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating route or job:', error);\r\n        setError('Failed to update route or job. Please try again.');\r\n        fetchRouteAndJobs();\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderJobList = (listId, jobs, routeName) => (\r\n    <Droppable droppableId={listId}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className={`bg-gray-800 p-4 rounded ${routeName ? 'min-h-[600px]' : 'min-h-[150px] flex flex-wrap gap-4'}`}\r\n        >\r\n          <h2 className=\"text-xl font-bold mb-2 text-white\">\r\n            {routeName ? routeName : 'Job Pool'}\r\n          </h2>\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            {jobs.map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className={`bg-green-700 p-2 rounded text-white ${job.recurrence === 'One-time' ? 'bg-opacity-50' : ''}`}\r\n                    style={{\r\n                      ...provided.draggableProps.style,\r\n                      boxShadow: snapshot.isDragging ? \"0 0 10px rgba(0,0,0,0.5)\" : \"none\",\r\n                      width: 'calc(100% - 16px)', // Adjusted width\r\n                      height: `${job.duration * 50}px`, // Adjusted height based on duration\r\n                      marginBottom: '8px', // Added margin to create space between rows\r\n                    }} \r\n                  >\r\n                    <p className=\"font-bold\">{job.title}</p>\r\n                    <p className=\"text-sm\">{job.customer?.name}</p>\r\n                    <p className=\"text-xs\">{job.recurrence}</p>\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  const handlePrevDay = () => {\r\n    const currentIndex = DAYS_OF_WEEK.indexOf(selectedDay);\r\n    const prevIndex = (currentIndex - 1 + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n    setSelectedDay(DAYS_OF_WEEK[prevIndex]);\r\n  };\r\n\r\n  const handleNextDay = () => {\r\n    const currentIndex = DAYS_OF_WEEK.indexOf(selectedDay);\r\n    const nextIndex = (currentIndex + 1) % DAYS_OF_WEEK.length;\r\n    setSelectedDay(DAYS_OF_WEEK[nextIndex]);\r\n  };\r\n\r\n  const renderTimeScale = () => (\r\n    <div className=\"time-scale flex flex-col mr-2\">\r\n      {['6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM'].map(time => (\r\n        <div key={time} className=\"time-slot h-[50px] text-white\">\r\n          {time}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-8 text-white\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center mt-8 text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Build Routes</h1>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button onClick={handlePrevDay} className=\"bg-gray-800 p-2 rounded\">\r\n            <ChevronLeftIcon className=\"h-6 w-6\" />\r\n          </button>\r\n          <h2 className=\"text-2xl font-bold\">{selectedDay}</h2>\r\n          <button onClick={handleNextDay} className=\"bg-gray-800 p-2 rounded\">\r\n            <ChevronRightIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-5 gap-2\">\r\n            <div className=\"col-span-1\">\r\n              {renderTimeScale()}\r\n            </div>\r\n            <div className=\"col-span-4 grid grid-cols-3 gap-2\">\r\n              <div>{renderJobList('route1', routes[selectedDay]?.route1 || [], 'Route 1')}</div>\r\n              <div>{renderJobList('route2', routes[selectedDay]?.route2 || [], 'Route 2')}</div>\r\n              <div>{renderJobList('route3', routes[selectedDay]?.route3 || [], 'Route 3')}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4\">\r\n            {renderJobList('jobPool', jobPool)}\r\n          </div>\r\n        </DragDropContext>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}