{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\RouteAssignments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport { ChevronDownIcon, ChevronUpIcon, UserIcon, UsersIcon, BriefcaseIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RouteAssignments = () => {\n  _s();\n  const [routes, setRoutes] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedRoutes, setExpandedRoutes] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [routesResponse, jobsResponse, employeesResponse, crewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/jobs'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n        const fetchedRoutes = routesResponse.routes || {};\n        const fetchedJobs = jobsResponse || [];\n        const fetchedEmployees = employeesResponse || [];\n        const fetchedCrews = crewsResponse || [];\n\n        // Log the fetched data\n        console.log('Fetched Routes:', fetchedRoutes);\n        console.log('Fetched Jobs:', fetchedJobs);\n        console.log('Fetched Employees:', fetchedEmployees);\n        console.log('Fetched Crews:', fetchedCrews);\n\n        // Process the data to include job details and assignments\n        processRoutesData(fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to fetch data. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const processRoutesData = (fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews) => {\n    // Create lookup maps\n    const jobMap = {};\n    fetchedJobs.forEach(job => {\n      jobMap[job._id] = job;\n    });\n    const employeeMap = {};\n    fetchedEmployees.forEach(employee => {\n      employeeMap[employee._id] = employee;\n    });\n    const crewMap = {};\n    fetchedCrews.forEach(crew => {\n      crewMap[crew._id] = crew;\n    });\n\n    // Process routes\n    const processedRoutes = {};\n    for (const [day, dayRoutes] of Object.entries(fetchedRoutes)) {\n      processedRoutes[day] = dayRoutes.map(route => {\n        // Flatten jobs if they are grouped\n        let fullJobs = [];\n        if (Array.isArray(route.jobs)) {\n          fullJobs = route.jobs.map(job => typeof job === 'string' ? jobMap[job] : job).filter(job => job);\n        } else if (typeof route.jobs === 'object' && route.jobs !== null) {\n          const jobGroups = Object.values(route.jobs).flat();\n          fullJobs = jobGroups.map(job => typeof job === 'string' ? jobMap[job] : job).filter(job => job);\n        }\n\n        // Get assigned employee or crew\n        let assignedEmployee = null;\n        let assignedCrew = null;\n        if (route.employee) {\n          if (typeof route.employee === 'string') {\n            assignedEmployee = employeeMap[route.employee];\n          } else if (typeof route.employee === 'object' && route.employee._id) {\n            assignedEmployee = employeeMap[route.employee._id] || route.employee;\n          }\n        }\n        if (route.crew) {\n          if (typeof route.crew === 'string') {\n            assignedCrew = crewMap[route.crew];\n          } else if (typeof route.crew === 'object' && route.crew._id) {\n            assignedCrew = crewMap[route.crew._id] || route.crew;\n          }\n        }\n        return {\n          ...route,\n          jobs: fullJobs,\n          employee: assignedEmployee,\n          crew: assignedCrew\n        };\n      });\n    }\n    setRoutes(processedRoutes);\n\n    // Log the processed routes\n    console.log('Processed Routes:', processedRoutes);\n  };\n  const toggleRouteExpansion = (day, index) => {\n    setExpandedRoutes(prev => {\n      var _prev$day;\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          [index]: !((_prev$day = prev[day]) !== null && _prev$day !== void 0 && _prev$day[index])\n        }\n      };\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-2xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-2xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-white\",\n        children: \"Route Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), Object.entries(routes).map(([day, dayRoutes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4 text-white\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), dayRoutes && dayRoutes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 shadow overflow-hidden sm:rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"divide-y divide-gray-700\",\n            children: dayRoutes.map((route, index) => {\n              var _expandedRoutes$day, _expandedRoutes$day2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-4 py-4 sm:px-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-lg font-medium text-blue-400\",\n                      children: route.name || `Route ${index + 1}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ml-2 flex-shrink-0 flex\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${route.employee || route.crew ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`,\n                        children: route.employee ? 'Employee Assigned' : route.crew ? 'Crew Assigned' : 'Unassigned'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2 sm:flex sm:justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sm:flex\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"flex items-center text-sm text-gray-300\",\n                        children: route.employee ? `Assigned to: ${route.employee.name}` : route.crew ? `Assigned to crew: ${route.crew.name}` : 'Not assigned'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2 flex items-center text-sm text-gray-300 sm:mt-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [route.jobs.length, \" jobs\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleRouteExpansion(day, index),\n                    className: \"mt-3 w-full flex items-center justify-center px-4 py-2 border border-gray-600 rounded-md shadow-sm text-sm font-medium text-white bg-gray-700 hover:bg-gray-600\",\n                    children: (_expandedRoutes$day = expandedRoutes[day]) !== null && _expandedRoutes$day !== void 0 && _expandedRoutes$day[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"Hide Details \", /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                        className: \"ml-2 h-5 w-5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 44\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"Show Details \", /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                        className: \"ml-2 h-5 w-5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 44\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 25\n                  }, this), ((_expandedRoutes$day2 = expandedRoutes[day]) === null || _expandedRoutes$day2 === void 0 ? void 0 : _expandedRoutes$day2[index]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"text-lg font-medium text-white mb-2\",\n                      children: \"Jobs:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"divide-y divide-gray-700\",\n                      children: route.jobs.map((job, jobIndex) => {\n                        var _job$customer, _job$location;\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          className: \"py-3\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex items-center justify-between\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-sm font-medium text-blue-300\",\n                              children: job.title || 'Untitled Job'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-sm text-gray-400\",\n                              children: ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 217,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 213,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-400\",\n                            children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-400\",\n                            children: [\"Cost: $\", job.cost || 'N/A']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-400\",\n                            children: [\"Status: \", job.status || 'Unknown']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 225,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-400\",\n                            children: [\"Last Service Date:\", ' ', job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'N/A']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-400\",\n                            children: [\"Recurrence Pattern:\", ' ', job.isRecurring ? job.recurrencePattern : 'One-time']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 35\n                          }, this)]\n                        }, jobIndex, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 33\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"No routes available for \", day, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteAssignments, \"XXZ779dT1qMziFJLYyeguqSikB4=\");\n_c = RouteAssignments;\nexport default RouteAssignments;\nvar _c;\n$RefreshReg$(_c, \"RouteAssignments\");","map":{"version":3,"names":["React","useState","useEffect","fetchWithAuth","Header","ChevronDownIcon","ChevronUpIcon","UserIcon","UsersIcon","BriefcaseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RouteAssignments","_s","routes","setRoutes","loading","setLoading","error","setError","expandedRoutes","setExpandedRoutes","fetchData","routesResponse","jobsResponse","employeesResponse","crewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","console","log","processRoutesData","err","jobMap","forEach","job","_id","employeeMap","employee","crewMap","crew","processedRoutes","day","dayRoutes","Object","entries","map","route","fullJobs","Array","isArray","jobs","filter","jobGroups","values","flat","assignedEmployee","assignedCrew","toggleRouteExpansion","index","prev","_prev$day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_expandedRoutes$day","_expandedRoutes$day2","name","onClick","jobIndex","_job$customer","_job$location","title","customer","location","address","cost","status","lastServiceDate","Date","toLocaleDateString","isRecurring","recurrencePattern","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/RouteAssignments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWithAuth } from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  UserIcon,\r\n  UsersIcon,\r\n  BriefcaseIcon,\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst RouteAssignments = () => {\r\n  const [routes, setRoutes] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedRoutes, setExpandedRoutes] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [routesResponse, jobsResponse, employeesResponse, crewsResponse] = await Promise.all([\r\n          fetchWithAuth('/routes'),\r\n          fetchWithAuth('/jobs'),\r\n          fetchWithAuth('/employees'),\r\n          fetchWithAuth('/crews'),\r\n        ]);\r\n\r\n        const fetchedRoutes = routesResponse.routes || {};\r\n        const fetchedJobs = jobsResponse || [];\r\n        const fetchedEmployees = employeesResponse || [];\r\n        const fetchedCrews = crewsResponse || [];\r\n\r\n        // Log the fetched data\r\n        console.log('Fetched Routes:', fetchedRoutes);\r\n        console.log('Fetched Jobs:', fetchedJobs);\r\n        console.log('Fetched Employees:', fetchedEmployees);\r\n        console.log('Fetched Crews:', fetchedCrews);\r\n\r\n        // Process the data to include job details and assignments\r\n        processRoutesData(fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError('Failed to fetch data. Please try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const processRoutesData = (fetchedRoutes, fetchedJobs, fetchedEmployees, fetchedCrews) => {\r\n    // Create lookup maps\r\n    const jobMap = {};\r\n    fetchedJobs.forEach(job => {\r\n      jobMap[job._id] = job;\r\n    });\r\n  \r\n    const employeeMap = {};\r\n    fetchedEmployees.forEach(employee => {\r\n      employeeMap[employee._id] = employee;\r\n    });\r\n  \r\n    const crewMap = {};\r\n    fetchedCrews.forEach(crew => {\r\n      crewMap[crew._id] = crew;\r\n    });\r\n  \r\n    // Process routes\r\n    const processedRoutes = {};\r\n  \r\n    for (const [day, dayRoutes] of Object.entries(fetchedRoutes)) {\r\n      processedRoutes[day] = dayRoutes.map(route => {\r\n        // Flatten jobs if they are grouped\r\n        let fullJobs = [];\r\n        if (Array.isArray(route.jobs)) {\r\n          fullJobs = route.jobs.map(job => (typeof job === 'string' ? jobMap[job] : job)).filter(job => job);\r\n        } else if (typeof route.jobs === 'object' && route.jobs !== null) {\r\n          const jobGroups = Object.values(route.jobs).flat();\r\n          fullJobs = jobGroups.map(job => (typeof job === 'string' ? jobMap[job] : job)).filter(job => job);\r\n        }\r\n  \r\n        // Get assigned employee or crew\r\n        let assignedEmployee = null;\r\n        let assignedCrew = null;\r\n  \r\n        if (route.employee) {\r\n          if (typeof route.employee === 'string') {\r\n            assignedEmployee = employeeMap[route.employee];\r\n          } else if (typeof route.employee === 'object' && route.employee._id) {\r\n            assignedEmployee = employeeMap[route.employee._id] || route.employee;\r\n          }\r\n        }\r\n  \r\n        if (route.crew) {\r\n          if (typeof route.crew === 'string') {\r\n            assignedCrew = crewMap[route.crew];\r\n          } else if (typeof route.crew === 'object' && route.crew._id) {\r\n            assignedCrew = crewMap[route.crew._id] || route.crew;\r\n          }\r\n        }\r\n  \r\n        return {\r\n          ...route,\r\n          jobs: fullJobs,\r\n          employee: assignedEmployee,\r\n          crew: assignedCrew,\r\n        };\r\n      });\r\n    }\r\n  \r\n    setRoutes(processedRoutes);\r\n\r\n    // Log the processed routes\r\n    console.log('Processed Routes:', processedRoutes);\r\n  };\r\n\r\n  const toggleRouteExpansion = (day, index) => {\r\n    setExpandedRoutes(prev => ({\r\n      ...prev,\r\n      [day]: {\r\n        ...prev[day],\r\n        [index]: !prev[day]?.[index]\r\n      }\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-white text-2xl\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-red-500 text-2xl\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-200\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-white\">Route Assignments</h1>\r\n        {Object.entries(routes).map(([day, dayRoutes]) => (\r\n          <div key={day} className=\"mb-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 text-white\">{day}</h2>\r\n            {dayRoutes && dayRoutes.length > 0 ? (\r\n              <div className=\"bg-gray-800 shadow overflow-hidden sm:rounded-md\">\r\n                <ul className=\"divide-y divide-gray-700\">\r\n                  {dayRoutes.map((route, index) => (\r\n                    <li key={index}>\r\n                      <div className=\"px-4 py-4 sm:px-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-lg font-medium text-blue-400\">\r\n                            {route.name || `Route ${index + 1}`}\r\n                          </div>\r\n                          <div className=\"ml-2 flex-shrink-0 flex\">\r\n                            <span\r\n                              className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                                route.employee || route.crew\r\n                                  ? 'bg-green-200 text-green-800'\r\n                                  : 'bg-red-200 text-red-800'\r\n                              }`}\r\n                            >\r\n                              {route.employee\r\n                                ? 'Employee Assigned'\r\n                                : route.crew\r\n                                ? 'Crew Assigned'\r\n                                : 'Unassigned'}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-2 sm:flex sm:justify-between\">\r\n                          <div className=\"sm:flex\">\r\n                            <p className=\"flex items-center text-sm text-gray-300\">\r\n                              {route.employee\r\n                                ? `Assigned to: ${route.employee.name}`\r\n                                : route.crew\r\n                                ? `Assigned to crew: ${route.crew.name}`\r\n                                : 'Not assigned'}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"mt-2 flex items-center text-sm text-gray-300 sm:mt-0\">\r\n                            <p>{route.jobs.length} jobs</p>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => toggleRouteExpansion(day, index)}\r\n                          className=\"mt-3 w-full flex items-center justify-center px-4 py-2 border border-gray-600 rounded-md shadow-sm text-sm font-medium text-white bg-gray-700 hover:bg-gray-600\"\r\n                        >\r\n                          {expandedRoutes[day]?.[index] ? (\r\n                            <>\r\n                              Hide Details <ChevronUpIcon className=\"ml-2 h-5 w-5\" />\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              Show Details <ChevronDownIcon className=\"ml-2 h-5 w-5\" />\r\n                            </>\r\n                          )}\r\n                        </button>\r\n                        {expandedRoutes[day]?.[index] && (\r\n                          <div className=\"mt-4\">\r\n                            <h4 className=\"text-lg font-medium text-white mb-2\">Jobs:</h4>\r\n                            <ul className=\"divide-y divide-gray-700\">\r\n                              {route.jobs.map((job, jobIndex) => (\r\n                                <li key={jobIndex} className=\"py-3\">\r\n                                  <div className=\"flex items-center justify-between\">\r\n                                    <p className=\"text-sm font-medium text-blue-300\">\r\n                                      {job.title || 'Untitled Job'}\r\n                                    </p>\r\n                                    <p className=\"text-sm text-gray-400\">\r\n                                      {job.customer?.name || 'No Customer'}\r\n                                    </p>\r\n                                  </div>\r\n                                  <p className=\"mt-1 text-xs text-gray-400\">\r\n                                    {job.location?.address || 'No Address'}\r\n                                  </p>\r\n                                  <p className=\"mt-1 text-xs text-gray-400\">Cost: ${job.cost || 'N/A'}</p>\r\n                                  <p className=\"mt-1 text-xs text-gray-400\">Status: {job.status || 'Unknown'}</p>\r\n                                  <p className=\"mt-1 text-xs text-gray-400\">\r\n                                    Last Service Date:{' '}\r\n                                    {job.lastServiceDate\r\n                                      ? new Date(job.lastServiceDate).toLocaleDateString()\r\n                                      : 'N/A'}\r\n                                  </p>\r\n                                  <p className=\"mt-1 text-xs text-gray-400\">\r\n                                    Recurrence Pattern:{' '}\r\n                                    {job.isRecurring ? job.recurrencePattern : 'One-time'}\r\n                                  </p>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-400\">No routes available for {day}.</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteAssignments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SACEC,eAAe,EACfC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTC,aAAa,QACR,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CAACC,cAAc,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,aAAa,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACzF3B,aAAa,CAAC,SAAS,CAAC,EACxBA,aAAa,CAAC,OAAO,CAAC,EACtBA,aAAa,CAAC,YAAY,CAAC,EAC3BA,aAAa,CAAC,QAAQ,CAAC,CACxB,CAAC;QAEF,MAAM4B,aAAa,GAAGN,cAAc,CAACT,MAAM,IAAI,CAAC,CAAC;QACjD,MAAMgB,WAAW,GAAGN,YAAY,IAAI,EAAE;QACtC,MAAMO,gBAAgB,GAAGN,iBAAiB,IAAI,EAAE;QAChD,MAAMO,YAAY,GAAGN,aAAa,IAAI,EAAE;;QAExC;QACAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,aAAa,CAAC;QAC7CI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,WAAW,CAAC;QACzCG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,gBAAgB,CAAC;QACnDE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,CAAC;;QAE3C;QACAG,iBAAiB,CAACN,aAAa,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,CAAC;QAE7Ef,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZH,OAAO,CAACf,KAAK,CAAC,sBAAsB,EAAEkB,GAAG,CAAC;QAC1CjB,QAAQ,CAAC,yCAAyC,CAAC;QACnDF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,iBAAiB,GAAGA,CAACN,aAAa,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,KAAK;IACxF;IACA,MAAMK,MAAM,GAAG,CAAC,CAAC;IACjBP,WAAW,CAACQ,OAAO,CAACC,GAAG,IAAI;MACzBF,MAAM,CAACE,GAAG,CAACC,GAAG,CAAC,GAAGD,GAAG;IACvB,CAAC,CAAC;IAEF,MAAME,WAAW,GAAG,CAAC,CAAC;IACtBV,gBAAgB,CAACO,OAAO,CAACI,QAAQ,IAAI;MACnCD,WAAW,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGE,QAAQ;IACtC,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,CAAC,CAAC;IAClBX,YAAY,CAACM,OAAO,CAACM,IAAI,IAAI;MAC3BD,OAAO,CAACC,IAAI,CAACJ,GAAG,CAAC,GAAGI,IAAI;IAC1B,CAAC,CAAC;;IAEF;IACA,MAAMC,eAAe,GAAG,CAAC,CAAC;IAE1B,KAAK,MAAM,CAACC,GAAG,EAAEC,SAAS,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACpB,aAAa,CAAC,EAAE;MAC5DgB,eAAe,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACG,GAAG,CAACC,KAAK,IAAI;QAC5C;QACA,IAAIC,QAAQ,GAAG,EAAE;QACjB,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAACI,IAAI,CAAC,EAAE;UAC7BH,QAAQ,GAAGD,KAAK,CAACI,IAAI,CAACL,GAAG,CAACX,GAAG,IAAK,OAAOA,GAAG,KAAK,QAAQ,GAAGF,MAAM,CAACE,GAAG,CAAC,GAAGA,GAAI,CAAC,CAACiB,MAAM,CAACjB,GAAG,IAAIA,GAAG,CAAC;QACpG,CAAC,MAAM,IAAI,OAAOY,KAAK,CAACI,IAAI,KAAK,QAAQ,IAAIJ,KAAK,CAACI,IAAI,KAAK,IAAI,EAAE;UAChE,MAAME,SAAS,GAAGT,MAAM,CAACU,MAAM,CAACP,KAAK,CAACI,IAAI,CAAC,CAACI,IAAI,CAAC,CAAC;UAClDP,QAAQ,GAAGK,SAAS,CAACP,GAAG,CAACX,GAAG,IAAK,OAAOA,GAAG,KAAK,QAAQ,GAAGF,MAAM,CAACE,GAAG,CAAC,GAAGA,GAAI,CAAC,CAACiB,MAAM,CAACjB,GAAG,IAAIA,GAAG,CAAC;QACnG;;QAEA;QACA,IAAIqB,gBAAgB,GAAG,IAAI;QAC3B,IAAIC,YAAY,GAAG,IAAI;QAEvB,IAAIV,KAAK,CAACT,QAAQ,EAAE;UAClB,IAAI,OAAOS,KAAK,CAACT,QAAQ,KAAK,QAAQ,EAAE;YACtCkB,gBAAgB,GAAGnB,WAAW,CAACU,KAAK,CAACT,QAAQ,CAAC;UAChD,CAAC,MAAM,IAAI,OAAOS,KAAK,CAACT,QAAQ,KAAK,QAAQ,IAAIS,KAAK,CAACT,QAAQ,CAACF,GAAG,EAAE;YACnEoB,gBAAgB,GAAGnB,WAAW,CAACU,KAAK,CAACT,QAAQ,CAACF,GAAG,CAAC,IAAIW,KAAK,CAACT,QAAQ;UACtE;QACF;QAEA,IAAIS,KAAK,CAACP,IAAI,EAAE;UACd,IAAI,OAAOO,KAAK,CAACP,IAAI,KAAK,QAAQ,EAAE;YAClCiB,YAAY,GAAGlB,OAAO,CAACQ,KAAK,CAACP,IAAI,CAAC;UACpC,CAAC,MAAM,IAAI,OAAOO,KAAK,CAACP,IAAI,KAAK,QAAQ,IAAIO,KAAK,CAACP,IAAI,CAACJ,GAAG,EAAE;YAC3DqB,YAAY,GAAGlB,OAAO,CAACQ,KAAK,CAACP,IAAI,CAACJ,GAAG,CAAC,IAAIW,KAAK,CAACP,IAAI;UACtD;QACF;QAEA,OAAO;UACL,GAAGO,KAAK;UACRI,IAAI,EAAEH,QAAQ;UACdV,QAAQ,EAAEkB,gBAAgB;UAC1BhB,IAAI,EAAEiB;QACR,CAAC;MACH,CAAC,CAAC;IACJ;IAEA9C,SAAS,CAAC8B,eAAe,CAAC;;IAE1B;IACAZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEW,eAAe,CAAC;EACnD,CAAC;EAED,MAAMiB,oBAAoB,GAAGA,CAAChB,GAAG,EAAEiB,KAAK,KAAK;IAC3C1C,iBAAiB,CAAC2C,IAAI;MAAA,IAAAC,SAAA;MAAA,OAAK;QACzB,GAAGD,IAAI;QACP,CAAClB,GAAG,GAAG;UACL,GAAGkB,IAAI,CAAClB,GAAG,CAAC;UACZ,CAACiB,KAAK,GAAG,GAAAE,SAAA,GAACD,IAAI,CAAClB,GAAG,CAAC,cAAAmB,SAAA,eAATA,SAAA,CAAYF,KAAK,CAAC;QAC9B;MACF,CAAC;IAAA,CAAC,CAAC;EACL,CAAC;EAED,IAAI/C,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKyD,SAAS,EAAC,2DAA2D;MAAAC,QAAA,eACxE1D,OAAA;QAAKyD,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAEA,IAAIrD,KAAK,EAAE;IACT,oBACET,OAAA;MAAKyD,SAAS,EAAC,2DAA2D;MAAAC,QAAA,eACxE1D,OAAA;QAAKyD,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEjD;MAAK;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAEV;EAEA,oBACE9D,OAAA;IAAKyD,SAAS,EAAC,wCAAwC;IAAAC,QAAA,gBACrD1D,OAAA,CAACP,MAAM;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV9D,OAAA;MAAMyD,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACtD1D,OAAA;QAAIyD,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxEvB,MAAM,CAACC,OAAO,CAACnC,MAAM,CAAC,CAACoC,GAAG,CAAC,CAAC,CAACJ,GAAG,EAAEC,SAAS,CAAC,kBAC3CtC,OAAA;QAAeyD,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC7B1D,OAAA;UAAIyD,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAErB;QAAG;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAChExB,SAAS,IAAIA,SAAS,CAACyB,MAAM,GAAG,CAAC,gBAChC/D,OAAA;UAAKyD,SAAS,EAAC,kDAAkD;UAAAC,QAAA,eAC/D1D,OAAA;YAAIyD,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EACrCpB,SAAS,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEY,KAAK;cAAA,IAAAU,mBAAA,EAAAC,oBAAA;cAAA,oBAC1BjE,OAAA;gBAAA0D,QAAA,eACE1D,OAAA;kBAAKyD,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChC1D,OAAA;oBAAKyD,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,gBAChD1D,OAAA;sBAAKyD,SAAS,EAAC,mCAAmC;sBAAAC,QAAA,EAC/ChB,KAAK,CAACwB,IAAI,IAAI,SAASZ,KAAK,GAAG,CAAC;oBAAE;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAChC,CAAC,eACN9D,OAAA;sBAAKyD,SAAS,EAAC,yBAAyB;sBAAAC,QAAA,eACtC1D,OAAA;wBACEyD,SAAS,EAAE,iEACTf,KAAK,CAACT,QAAQ,IAAIS,KAAK,CAACP,IAAI,GACxB,6BAA6B,GAC7B,yBAAyB,EAC5B;wBAAAuB,QAAA,EAEFhB,KAAK,CAACT,QAAQ,GACX,mBAAmB,GACnBS,KAAK,CAACP,IAAI,GACV,eAAe,GACf;sBAAY;wBAAAwB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACZ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACN9D,OAAA;oBAAKyD,SAAS,EAAC,iCAAiC;oBAAAC,QAAA,gBAC9C1D,OAAA;sBAAKyD,SAAS,EAAC,SAAS;sBAAAC,QAAA,eACtB1D,OAAA;wBAAGyD,SAAS,EAAC,yCAAyC;wBAAAC,QAAA,EACnDhB,KAAK,CAACT,QAAQ,GACX,gBAAgBS,KAAK,CAACT,QAAQ,CAACiC,IAAI,EAAE,GACrCxB,KAAK,CAACP,IAAI,GACV,qBAAqBO,KAAK,CAACP,IAAI,CAAC+B,IAAI,EAAE,GACtC;sBAAc;wBAAAP,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjB;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,eACN9D,OAAA;sBAAKyD,SAAS,EAAC,sDAAsD;sBAAAC,QAAA,eACnE1D,OAAA;wBAAA0D,QAAA,GAAIhB,KAAK,CAACI,IAAI,CAACiB,MAAM,EAAC,OAAK;sBAAA;wBAAAJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAG;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5B,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACN9D,OAAA;oBACEmE,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAAChB,GAAG,EAAEiB,KAAK,CAAE;oBAChDG,SAAS,EAAC,iKAAiK;oBAAAC,QAAA,EAE1K,CAAAM,mBAAA,GAAArD,cAAc,CAAC0B,GAAG,CAAC,cAAA2B,mBAAA,eAAnBA,mBAAA,CAAsBV,KAAK,CAAC,gBAC3BtD,OAAA,CAAAE,SAAA;sBAAAwD,QAAA,GAAE,eACa,eAAA1D,OAAA,CAACL,aAAa;wBAAC8D,SAAS,EAAC;sBAAc;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC;oBAAA,eACvD,CAAC,gBAEH9D,OAAA,CAAAE,SAAA;sBAAAwD,QAAA,GAAE,eACa,eAAA1D,OAAA,CAACN,eAAe;wBAAC+D,SAAS,EAAC;sBAAc;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC;oBAAA,eACzD;kBACH;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACK,CAAC,EACR,EAAAG,oBAAA,GAAAtD,cAAc,CAAC0B,GAAG,CAAC,cAAA4B,oBAAA,uBAAnBA,oBAAA,CAAsBX,KAAK,CAAC,kBAC3BtD,OAAA;oBAAKyD,SAAS,EAAC,MAAM;oBAAAC,QAAA,gBACnB1D,OAAA;sBAAIyD,SAAS,EAAC,qCAAqC;sBAAAC,QAAA,EAAC;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC9D9D,OAAA;sBAAIyD,SAAS,EAAC,0BAA0B;sBAAAC,QAAA,EACrChB,KAAK,CAACI,IAAI,CAACL,GAAG,CAAC,CAACX,GAAG,EAAEsC,QAAQ;wBAAA,IAAAC,aAAA,EAAAC,aAAA;wBAAA,oBAC5BtE,OAAA;0BAAmByD,SAAS,EAAC,MAAM;0BAAAC,QAAA,gBACjC1D,OAAA;4BAAKyD,SAAS,EAAC,mCAAmC;4BAAAC,QAAA,gBAChD1D,OAAA;8BAAGyD,SAAS,EAAC,mCAAmC;8BAAAC,QAAA,EAC7C5B,GAAG,CAACyC,KAAK,IAAI;4BAAc;8BAAAZ,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAC3B,CAAC,eACJ9D,OAAA;8BAAGyD,SAAS,EAAC,uBAAuB;8BAAAC,QAAA,EACjC,EAAAW,aAAA,GAAAvC,GAAG,CAAC0C,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcH,IAAI,KAAI;4BAAa;8BAAAP,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACnC,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACD,CAAC,eACN9D,OAAA;4BAAGyD,SAAS,EAAC,4BAA4B;4BAAAC,QAAA,EACtC,EAAAY,aAAA,GAAAxC,GAAG,CAAC2C,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcI,OAAO,KAAI;0BAAY;4BAAAf,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACrC,CAAC,eACJ9D,OAAA;4BAAGyD,SAAS,EAAC,4BAA4B;4BAAAC,QAAA,GAAC,SAAO,EAAC5B,GAAG,CAAC6C,IAAI,IAAI,KAAK;0BAAA;4BAAAhB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAI,CAAC,eACxE9D,OAAA;4BAAGyD,SAAS,EAAC,4BAA4B;4BAAAC,QAAA,GAAC,UAAQ,EAAC5B,GAAG,CAAC8C,MAAM,IAAI,SAAS;0BAAA;4BAAAjB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAI,CAAC,eAC/E9D,OAAA;4BAAGyD,SAAS,EAAC,4BAA4B;4BAAAC,QAAA,GAAC,oBACtB,EAAC,GAAG,EACrB5B,GAAG,CAAC+C,eAAe,GAChB,IAAIC,IAAI,CAAChD,GAAG,CAAC+C,eAAe,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAClD,KAAK;0BAAA;4BAAApB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACR,CAAC,eACJ9D,OAAA;4BAAGyD,SAAS,EAAC,4BAA4B;4BAAAC,QAAA,GAAC,qBACrB,EAAC,GAAG,EACtB5B,GAAG,CAACkD,WAAW,GAAGlD,GAAG,CAACmD,iBAAiB,GAAG,UAAU;0BAAA;4BAAAtB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACpD,CAAC;wBAAA,GAvBGM,QAAQ;0BAAAT,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAwBb,CAAC;sBAAA,CACN;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC,GApFCR,KAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAqFV,CAAC;YAAA,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAEN9D,OAAA;UAAGyD,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,0BAAwB,EAACrB,GAAG,EAAC,GAAC;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC/D;MAAA,GAjGOzB,GAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkGR,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAlPID,gBAAgB;AAAA+E,EAAA,GAAhB/E,gBAAgB;AAoPtB,eAAeA,gBAAgB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}