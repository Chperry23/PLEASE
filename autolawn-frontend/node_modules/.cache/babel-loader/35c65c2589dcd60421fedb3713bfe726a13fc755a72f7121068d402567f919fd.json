{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst getHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('token')}`\n});\nexport const fetchRoutes = async () => {\n  const response = await axios.get(`${API_BASE_URL}/routes`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchJobs = async () => {\n  const response = await axios.get(`${API_BASE_URL}/jobs`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const saveRoute = async route => {\n  const response = await axios.post(`${API_BASE_URL}/routes`, route, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const updateRoute = async (routeId, updatedData) => {\n  const response = await axios.put(`${API_BASE_URL}/routes/${routeId}`, updatedData, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const deleteRoute = async routeId => {\n  await axios.delete(`${API_BASE_URL}/routes/${routeId}`, {\n    headers: getHeaders()\n  });\n};\nexport const addJobToRoute = async (routeId, jobId) => {\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/jobs`, {\n    jobId\n  }, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const removeJobFromRoute = async (routeId, jobId) => {\n  const response = await axios.delete(`${API_BASE_URL}/routes/${routeId}/jobs/${jobId}`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchCalendarEvents = async () => {\n  const response = await axios.get(`${API_BASE_URL}/calendar-events`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const createCalendarEvent = async eventData => {\n  const response = await axios.post(`${API_BASE_URL}/calendar-events`, eventData, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const updateCalendarEvent = async (eventId, eventData) => {\n  const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventId}`, eventData, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const deleteCalendarEvent = async eventId => {\n  await axios.delete(`${API_BASE_URL}/calendar-events/${eventId}`, {\n    headers: getHeaders()\n  });\n};\nexport const optimizeRoute = async routeId => {\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/optimize`, {}, {\n    headers: getHeaders()\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","getHeaders","Authorization","localStorage","getItem","fetchRoutes","response","get","headers","data","fetchJobs","saveRoute","route","post","updateRoute","routeId","updatedData","put","deleteRoute","delete","addJobToRoute","jobId","removeJobFromRoute","fetchCalendarEvents","createCalendarEvent","eventData","updateCalendarEvent","eventId","deleteCalendarEvent","optimizeRoute"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst getHeaders = () => ({ Authorization: `Bearer ${localStorage.getItem('token')}` });\r\n\r\nexport const fetchRoutes = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/routes`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchJobs = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/jobs`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const saveRoute = async (route) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes`, route, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const updateRoute = async (routeId, updatedData) => {\r\n  const response = await axios.put(`${API_BASE_URL}/routes/${routeId}`, updatedData, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteRoute = async (routeId) => {\r\n  await axios.delete(`${API_BASE_URL}/routes/${routeId}`, { headers: getHeaders() });\r\n};\r\n\r\nexport const addJobToRoute = async (routeId, jobId) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/jobs`, { jobId }, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const removeJobFromRoute = async (routeId, jobId) => {\r\n  const response = await axios.delete(`${API_BASE_URL}/routes/${routeId}/jobs/${jobId}`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCalendarEvents = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/calendar-events`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const createCalendarEvent = async (eventData) => {\r\n  const response = await axios.post(`${API_BASE_URL}/calendar-events`, eventData, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const updateCalendarEvent = async (eventId, eventData) => {\r\n  const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventId}`, eventData, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteCalendarEvent = async (eventId) => {\r\n  await axios.delete(`${API_BASE_URL}/calendar-events/${eventId}`, { headers: getHeaders() });\r\n};\r\n\r\nexport const optimizeRoute = async (routeId) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/optimize`, {}, { headers: getHeaders() });\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}