{"ast":null,"code":"// src/api/dashboardApi.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst getHeaders = () => ({\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n});\nexport const fetchJobs = async () => {\n  const response = await axios.get(`${API_URL}/jobs`, getHeaders());\n  return response.data;\n};\nexport const fetchCustomers = async () => {\n  const response = await axios.get(`${API_URL}/customers`, getHeaders());\n  return response.data;\n};\nexport const fetchEmployees = async () => {\n  const response = await axios.get(`${API_URL}/employees`, getHeaders());\n  return response.data;\n};\nexport const fetchAnalytics = async (timeRange, customRange = null) => {\n  let url = `${API_URL}/analytics?timeRange=${timeRange}`;\n  if (customRange && timeRange === 'custom') {\n    url += `&startDate=${customRange.start}&endDate=${customRange.end}`;\n  }\n  const response = await axios.get(url, getHeaders());\n  return response.data;\n};\nexport const fetchCustomerGrowth = async (startDate, endDate) => {\n  const response = await axios.get(`${API_URL}/analytics/customer-growth?startDate=${startDate}&endDate=${endDate}`, getHeaders());\n  return response.data;\n};\nexport const fetchRevenue = async (startDate, endDate) => {\n  const response = await axios.get(`${API_URL}/analytics/revenue?startDate=${startDate}&endDate=${endDate}`, getHeaders());\n  return response.data;\n};\nexport const fetchJobStatistics = async (startDate, endDate) => {\n  const response = await axios.get(`${API_URL}/analytics/job-statistics?startDate=${startDate}&endDate=${endDate}`, getHeaders());\n  return response.data;\n};\nexport const fetchEmployeePerformance = async (startDate, endDate) => {\n  const response = await axios.get(`${API_URL}/analytics/employee-performance?startDate=${startDate}&endDate=${endDate}`, getHeaders());\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getHeaders","headers","Authorization","localStorage","getItem","fetchJobs","response","get","data","fetchCustomers","fetchEmployees","fetchAnalytics","timeRange","customRange","url","start","end","fetchCustomerGrowth","startDate","endDate","fetchRevenue","fetchJobStatistics","fetchEmployeePerformance"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/api/dashboardApi.js"],"sourcesContent":["// src/api/dashboardApi.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst getHeaders = () => ({\r\n  headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n});\r\n\r\nexport const fetchJobs = async () => {\r\n  const response = await axios.get(`${API_URL}/jobs`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCustomers = async () => {\r\n  const response = await axios.get(`${API_URL}/customers`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchEmployees = async () => {\r\n  const response = await axios.get(`${API_URL}/employees`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchAnalytics = async (timeRange, customRange = null) => {\r\n  let url = `${API_URL}/analytics?timeRange=${timeRange}`;\r\n  if (customRange && timeRange === 'custom') {\r\n    url += `&startDate=${customRange.start}&endDate=${customRange.end}`;\r\n  }\r\n  const response = await axios.get(url, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCustomerGrowth = async (startDate, endDate) => {\r\n  const response = await axios.get(`${API_URL}/analytics/customer-growth?startDate=${startDate}&endDate=${endDate}`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchRevenue = async (startDate, endDate) => {\r\n  const response = await axios.get(`${API_URL}/analytics/revenue?startDate=${startDate}&endDate=${endDate}`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchJobStatistics = async (startDate, endDate) => {\r\n  const response = await axios.get(`${API_URL}/analytics/job-statistics?startDate=${startDate}&endDate=${endDate}`, getHeaders());\r\n  return response.data;\r\n};\r\n\r\nexport const fetchEmployeePerformance = async (startDate, endDate) => {\r\n  const response = await axios.get(`${API_URL}/analytics/employee-performance?startDate=${startDate}&endDate=${endDate}`, getHeaders());\r\n  return response.data;\r\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,UAAU,GAAGA,CAAA,MAAO;EACxBC,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAAG;AACtE,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,OAAO,EAAEC,UAAU,CAAC,CAAC,CAAC;EACjE,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMH,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,YAAY,EAAEC,UAAU,CAAC,CAAC,CAAC;EACtE,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,YAAY,EAAEC,UAAU,CAAC,CAAC,CAAC;EACtE,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,GAAG,IAAI,KAAK;EACrE,IAAIC,GAAG,GAAG,GAAGf,OAAO,wBAAwBa,SAAS,EAAE;EACvD,IAAIC,WAAW,IAAID,SAAS,KAAK,QAAQ,EAAE;IACzCE,GAAG,IAAI,cAAcD,WAAW,CAACE,KAAK,YAAYF,WAAW,CAACG,GAAG,EAAE;EACrE;EACA,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACO,GAAG,EAAEd,UAAU,CAAC,CAAC,CAAC;EACnD,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,mBAAmB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;EAC/D,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,wCAAwCmB,SAAS,YAAYC,OAAO,EAAE,EAAEnB,UAAU,CAAC,CAAC,CAAC;EAChI,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAAA,CAAOF,SAAS,EAAEC,OAAO,KAAK;EACxD,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,gCAAgCmB,SAAS,YAAYC,OAAO,EAAE,EAAEnB,UAAU,CAAC,CAAC,CAAC;EACxH,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMa,kBAAkB,GAAG,MAAAA,CAAOH,SAAS,EAAEC,OAAO,KAAK;EAC9D,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,uCAAuCmB,SAAS,YAAYC,OAAO,EAAE,EAAEnB,UAAU,CAAC,CAAC,CAAC;EAC/H,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMc,wBAAwB,GAAG,MAAAA,CAAOJ,SAAS,EAAEC,OAAO,KAAK;EACpE,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,6CAA6CmB,SAAS,YAAYC,OAAO,EAAE,EAAEnB,UAAU,CAAC,CAAC,CAAC;EACrI,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}