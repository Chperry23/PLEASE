{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\components\\\\TrialTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrialTimer = ({\n  trialEndDate\n}) => {\n  _s();\n  const isValidDate = date => {\n    return !isNaN(new Date(date).getTime());\n  };\n  const calculateTimeLeft = () => {\n    if (!isValidDate(trialEndDate)) {\n      return {};\n    }\n    const difference = +new Date(trialEndDate) - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        Days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        Hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        Minutes: Math.floor(difference / 1000 / 60 % 60),\n        Seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n    return timeLeft;\n  };\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    // Cleanup\n    return () => clearTimeout(timer);\n  }, [trialEndDate]);\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (timeLeft[interval] === undefined || isNaN(timeLeft[interval])) {\n      return;\n    }\n    timerComponents.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [timeLeft[interval], \" \", interval, \" \"]\n    }, interval, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: timerComponents.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trial Ends In:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.timer,\n        children: timerComponents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your trial has ended.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TrialTimer, \"2yD7J9BRKO6eNclZT/dCzRz3Fpg=\");\n_c = TrialTimer;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    marginTop: '20px'\n  },\n  timer: {\n    fontSize: '1.5em',\n    fontWeight: 'bold'\n  }\n};\nexport default TrialTimer;\nvar _c;\n$RefreshReg$(_c, \"TrialTimer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TrialTimer","trialEndDate","_s","isValidDate","date","isNaN","Date","getTime","calculateTimeLeft","difference","timeLeft","Days","Math","floor","Hours","Minutes","Seconds","setTimeLeft","timer","setTimeout","clearTimeout","timerComponents","Object","keys","forEach","interval","undefined","push","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","length","_c","textAlign","marginTop","fontSize","fontWeight","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/components/TrialTimer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst TrialTimer = ({ trialEndDate }) => {\r\n  const isValidDate = (date) => {\r\n    return !isNaN(new Date(date).getTime());\r\n  };\r\n\r\n  const calculateTimeLeft = () => {\r\n    if (!isValidDate(trialEndDate)) {\r\n      return {};\r\n    }\r\n\r\n    const difference = +new Date(trialEndDate) - +new Date();\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        Days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        Hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        Minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        Seconds: Math.floor((difference / 1000) % 60)\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n\r\n    // Cleanup\r\n    return () => clearTimeout(timer);\r\n  }, [trialEndDate]);\r\n\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach(interval => {\r\n    if (timeLeft[interval] === undefined || isNaN(timeLeft[interval])) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span key={interval}>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {timerComponents.length ? (\r\n        <div>\r\n          <h3>Trial Ends In:</h3>\r\n          <div style={styles.timer}>\r\n            {timerComponents}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <span>Your trial has ended.</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '20px'\r\n  },\r\n  timer: {\r\n    fontSize: '1.5em',\r\n    fontWeight: 'bold'\r\n  }\r\n};\r\n\r\nexport default TrialTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}