{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const navigate = useNavigate();\n  const [routeTotals, setRouteTotals] = useState({});\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let jobsData = [];\n      let routesData = [];\n      const storedJobs = localStorage.getItem('jobs');\n      const storedRoutes = localStorage.getItem('routes');\n      console.log('Stored jobs:', storedJobs);\n      console.log('Stored routes:', storedRoutes);\n      if (storedJobs && storedJobs !== 'undefined') {\n        try {\n          jobsData = JSON.parse(storedJobs);\n          console.log('Jobs loaded from localStorage:', jobsData);\n        } catch (parseError) {\n          console.error('Error parsing stored jobs:', parseError);\n        }\n      }\n      if (storedRoutes && storedRoutes !== 'undefined') {\n        try {\n          routesData = JSON.parse(storedRoutes);\n          console.log('Routes loaded from localStorage:', routesData);\n        } catch (parseError) {\n          console.error('Error parsing stored routes:', parseError);\n        }\n      }\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\n        console.log('Fetching fresh jobs data from API');\n        const jobsResponse = await fetchJobs();\n        console.log('Jobs response from API:', jobsResponse);\n        if (Array.isArray(jobsResponse)) {\n          jobsData = jobsResponse;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else if (Array.isArray(jobsResponse.data)) {\n          jobsData = jobsResponse.data;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else {\n          console.warn('No jobs data returned from API or data is invalid');\n        }\n      }\n      if (!Array.isArray(routesData) || routesData.length === 0) {\n        console.log('Fetching fresh routes data from API');\n        const routesResponse = await fetchRoutes();\n        console.log('Routes response from API:', routesResponse);\n        if (Array.isArray(routesResponse)) {\n          routesData = routesResponse;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else if (Array.isArray(routesResponse.data)) {\n          routesData = routesResponse.data;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else {\n          console.warn('No routes data returned from API or data is invalid');\n        }\n      }\n      console.log('Final jobsData:', jobsData);\n      console.log('Final routesData:', routesData);\n      setJobs(prevJobs => {\n        console.log('Updating jobs state:', jobsData);\n        return jobsData;\n      });\n      setRoutes(prevRoutes => {\n        console.log('Updating routes state:', routesData);\n        return routesData;\n      });\n      generateEvents(jobsData, routesData);\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  useEffect(() => {\n    console.log('Current jobs:', jobs);\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\n  }, [jobs]);\n  useEffect(() => {\n    console.log('Current routes:', routes);\n    console.log('Current jobs:', jobs);\n  }, [routes, jobs]);\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\n  console.log('Stored routes:', localStorage.getItem('routes'));\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = (jobsData || []).map(job => ({\n      id: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id',\n      title: (job === null || job === void 0 ? void 0 : job.title) || 'No Title',\n      start: job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate) : null,\n      end: job !== null && job !== void 0 && job.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = (routesData || []).map(route => ({\n      id: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id',\n      title: (route === null || route === void 0 ? void 0 : route.name) || 'Unnamed Route',\n      start: route !== null && route !== void 0 && route.scheduledDate ? new Date(route.scheduledDate) : null,\n      end: route !== null && route !== void 0 && route.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const updateRouteTotals = useCallback(async () => {\n    const totals = {};\n    for (const route of routes) {\n      try {\n        const total = await calculateRouteTotal(route._id);\n        totals[route._id] = total;\n      } catch (error) {\n        console.error(`Error calculating total for route ${route._id}:`, error);\n      }\n    }\n    setRouteTotals(totals);\n  }, [routes]);\n  useEffect(() => {\n    updateRouteTotals();\n  }, [updateRouteTotals]);\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\n      info.revert();\n      setError('Canceled or completed jobs cannot be scheduled.');\n      return;\n    }\n    setPendingEvent(event);\n    setShowStartTimeModal(true);\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {}\n    };\n    try {\n      if (eventData.extendedProps.type === 'job') {\n        await handleJobSchedule(eventData);\n      } else if (eventData.extendedProps.type === 'route') {\n        await handleRouteSchedule(eventData);\n      }\n      setEvents(prevEvents => [...prevEvents, eventData]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const handleJobSchedule = async eventData => {\n    const jobId = eventData.extendedProps.jobId;\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n    if (job && job.route) {\n      throw new Error('This job is already assigned to a route');\n    }\n    const updatedJob = await updateJob(jobId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? {\n      ...j,\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    } : j));\n    return updatedJob;\n  };\n  const handleRouteSchedule = async eventData => {\n    const routeId = eventData.extendedProps.routeId;\n    const existingRoute = routes.find(r => (r === null || r === void 0 ? void 0 : r._id) === routeId);\n    if (!existingRoute) {\n      throw new Error('Route not found');\n    }\n    const updatedRoute = await updateRoute(routeId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setRoutes(prevRoutes => prevRoutes.map(r => (r === null || r === void 0 ? void 0 : r._id) === routeId ? updatedRoute : r));\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const jobId = result.draggableId;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const updateLocalStorage = (jobs, routes) => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n    localStorage.setItem('routes', JSON.stringify(routes));\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      console.log('Moving job', jobId, 'to route', routeId);\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      console.log('Job to move:', job);\n      if (job.status === 'Canceled' || job.status === 'Completed') {\n        setError('Canceled or completed jobs cannot be added to routes.');\n        return;\n      }\n      const updatedRoute = await updateRoute(routeId, {\n        $addToSet: {\n          jobs: {\n            job: {\n              _id: jobId\n            },\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      console.log('Updated route:', updatedRoute);\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      console.log('Updated job:', updatedJob);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        console.log('New routes state:', newRoutes);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? {\n          ...updatedJob,\n          route: routeId\n        } : j);\n        console.log('New jobs state:', newJobs);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Update route total\n      const newTotal = await calculateRouteTotal(routeId);\n      setRouteTotals(prevTotals => ({\n        ...prevTotals,\n        [routeId]: newTotal\n      }));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      const updatedRoutes = routes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          jobs: route.jobs.filter(j => j.job !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      });\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      const routeToDelete = routes.find(r => r._id === routeId);\n      await deleteRoute(routeId);\n\n      // Move jobs back to unassigned pool\n      const jobUpdates = routeToDelete.jobs.map(async jobItem => {\n        const job = jobs.find(j => j._id === jobItem.job._id);\n        if (job && job.status !== 'Canceled' && job.status !== 'Completed') {\n          return updateJob(job._id, {\n            route: null\n          });\n        }\n      });\n      await Promise.all(jobUpdates);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.filter(route => route._id !== routeId);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(job => {\n          if (job.route === routeId && job.status !== 'Canceled' && job.status !== 'Completed') {\n            return {\n              ...job,\n              route: null\n            };\n          }\n          return job;\n        });\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Remove associated events from the calendar\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventUpdate = async event => {\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\n    }\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      try {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing job from calendar:', error);\n        setError('Failed to remove job. Please try again.');\n      }\n    } else if (event.extendedProps.type === 'route') {\n      try {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing route from calendar:', error);\n        setError('Failed to remove route. Please try again.');\n      }\n    }\n  };\n  const renderRouteTimeline = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => {\n        const routeTotal = routeTotals[route._id] || 0;\n        const orderedJobs = orderJobsByScheduledTime(route);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-container bg-gray-800 p-4 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2 text-white\",\n            children: route === null || route === void 0 ? void 0 : route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-bold mb-4\",\n            children: [\"Total: $\", routeTotal.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), !route.scheduledDate && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleScheduleRoute(route._id),\n            className: \"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: \"Schedule Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list space-y-2 max-h-96 overflow-y-auto\",\n            children: orderedJobs.map((jobItem, index) => {\n              var _job$customer;\n              const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job._id);\n              if (!job) return null;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job-item bg-gray-700 rounded p-2 text-white text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job === null || job === void 0 ? void 0 : job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Revenue: $\", (job === null || job === void 0 ? void 0 : job.cost) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Estimated Duration: \", (job === null || job === void 0 ? void 0 : job.estimatedDuration) || 60, \" minutes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Scheduled: \", jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                  className: \"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 23\n                }, this)]\n              }, job === null || job === void 0 ? void 0 : job._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), (!route.jobs || route.jobs.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 italic\",\n            children: \"No jobs assigned to this route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 17\n          }, this)]\n        }, route === null || route === void 0 ? void 0 : route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this);\n  };\n  const orderJobsByScheduledTime = route => {\n    return [...route.jobs].sort((a, b) => {\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\n      return dateA - dateB;\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 654,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 655,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route === null || route === void 0 ? void 0 : route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route === null || route === void 0 ? void 0 : route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route === null || route === void 0 ? void 0 : route.name);\n                            if (newName) handleEditRouteName(route === null || route === void 0 ? void 0 : route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 715,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 724,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 730,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 714,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 29\n                    }, this), route.jobs && route.jobs.map((jobItem, index) => {\n                      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                      if (!job) return null;\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job === null || job === void 0 ? void 0 : job._id,\n                        index: index,\n                        children: provided => {\n                          var _job$customer2;\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            className: \"bg-white p-2 mb-2 rounded shadow\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"font-semibold\",\n                              children: job === null || job === void 0 ? void 0 : job.title\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 750,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: job === null || job === void 0 ? void 0 : job.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 751,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 752,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 753,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Scheduled: \", jobItem !== null && jobItem !== void 0 && jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 754,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                              className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                              children: \"Remove from Route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 755,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 744,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 742,\n                        columnNumber: 33\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 27\n                  }, this)\n                }, route === null || route === void 0 ? void 0 : route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job === null || job === void 0 ? void 0 : job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer3;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 795,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job === null || job === void 0 ? void 0 : job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 796,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 797,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer3 = job.customer) === null || _job$customer3 === void 0 ? void 0 : _job$customer3.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 798,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 799,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 783,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job === null || job === void 0 ? void 0 : job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 830,\n                          columnNumber: 31\n                        }, this)\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 834,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route === null || route === void 0 ? void 0 : route._id,\n                          title: route === null || route === void 0 ? void 0 : route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route === null || route === void 0 ? void 0 : route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route === null || route === void 0 ? void 0 : route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 847,\n                          columnNumber: 31\n                        }, this)\n                      }, route === null || route === void 0 ? void 0 : route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 837,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold mb-2\",\n                  children: route === null || route === void 0 ? void 0 : route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                  jobs: route.jobs.map(jobItem => {\n                    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                    return job ? {\n                      ...job,\n                      scheduledDate: jobItem.scheduledDate,\n                      scheduledEndDate: jobItem.scheduledEndDate\n                    } : null;\n                  }).filter(Boolean),\n                  route: route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 23\n                }, this)]\n              }, route === null || route === void 0 ? void 0 : route._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 17\n            }, this), activeTab === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Timelines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this), renderRouteTimeline()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 658,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"b+Xh9tAaBG+djkhTBnwltDYQK3s=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","navigate","routeTotals","setRouteTotals","fetchData","jobsData","routesData","storedJobs","localStorage","getItem","storedRoutes","console","log","JSON","parse","parseError","Array","isArray","length","jobsResponse","setItem","stringify","data","warn","routesResponse","prevJobs","prevRoutes","generateEvents","filter","job","route","err","jobEvents","map","id","_id","title","start","scheduledDate","Date","end","scheduledEndDate","color","extendedProps","type","jobId","event","routeEvents","name","routeId","updateRouteTotals","totals","total","calculateRouteTotal","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","setTimeout","handleEventDrop","info","find","j","revert","handleEventUpdate","handleEventReceive","status","handleStartTimeSubmit","startTime","startDate","setHours","getHours","getMinutes","endDate","getTime","handleJobSchedule","handleRouteSchedule","prevEvents","Error","updatedJob","existingRoute","r","updatedRoute","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updateLocalStorage","$addToSet","newRoutes","newJobs","newTotal","prevTotals","$pull","updatedRoutes","updatedJobs","updatedDestRoute","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","customers","handleDeleteRoute","routeToDelete","jobUpdates","jobItem","Promise","all","handleEventClick","handleEventResize","e","handleRemoveEvent","renderRouteTimeline","className","children","routeTotal","orderedJobs","orderJobsByScheduledTime","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","handleScheduleRoute","index","_job$customer","customer","cost","estimatedDuration","toLocaleString","handleRemoveJobFromRoute","sort","a","b","dateA","dateB","role","tab","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","_job$customer2","draggableProps","dragHandleProps","description","placeholder","_job$customer3","duration","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","Boolean","EventModal","onClose","onSave","onRemove","StartTimeModal","onSubmit","_c2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [routeTotals, setRouteTotals] = useState({});\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let jobsData = [];\r\n      let routesData = [];\r\n  \r\n      const storedJobs = localStorage.getItem('jobs');\r\n      const storedRoutes = localStorage.getItem('routes');\r\n  \r\n      console.log('Stored jobs:', storedJobs);\r\n      console.log('Stored routes:', storedRoutes);\r\n  \r\n      if (storedJobs && storedJobs !== 'undefined') {\r\n        try {\r\n          jobsData = JSON.parse(storedJobs);\r\n          console.log('Jobs loaded from localStorage:', jobsData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored jobs:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (storedRoutes && storedRoutes !== 'undefined') {\r\n        try {\r\n          routesData = JSON.parse(storedRoutes);\r\n          console.log('Routes loaded from localStorage:', routesData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored routes:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\r\n        console.log('Fetching fresh jobs data from API');\r\n        const jobsResponse = await fetchJobs();\r\n        console.log('Jobs response from API:', jobsResponse);\r\n  \r\n        if (Array.isArray(jobsResponse)) {\r\n          jobsData = jobsResponse;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else if (Array.isArray(jobsResponse.data)) {\r\n          jobsData = jobsResponse.data;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else {\r\n          console.warn('No jobs data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(routesData) || routesData.length === 0) {\r\n        console.log('Fetching fresh routes data from API');\r\n        const routesResponse = await fetchRoutes();\r\n        console.log('Routes response from API:', routesResponse);\r\n  \r\n        if (Array.isArray(routesResponse)) {\r\n          routesData = routesResponse;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else if (Array.isArray(routesResponse.data)) {\r\n          routesData = routesResponse.data;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else {\r\n          console.warn('No routes data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      console.log('Final jobsData:', jobsData);\r\n      console.log('Final routesData:', routesData);\r\n  \r\n      setJobs(prevJobs => {\r\n        console.log('Updating jobs state:', jobsData);\r\n        return jobsData;\r\n      });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        console.log('Updating routes state:', routesData);\r\n        return routesData;\r\n      });\r\n  \r\n      generateEvents(jobsData, routesData);\r\n  \r\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n  \r\n  useEffect(() => {\r\n    console.log('Current jobs:', jobs);\r\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\r\n  }, [jobs]);\r\n\r\n  useEffect(() => {\r\n    console.log('Current routes:', routes);\r\n    console.log('Current jobs:', jobs);\r\n  }, [routes, jobs]);\r\n\r\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\r\n  console.log('Stored routes:', localStorage.getItem('routes'));\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = (jobsData || []).map(job => ({\r\n      id: job?._id || 'unknown-id',\r\n      title: job?.title || 'No Title',\r\n      start: job?.scheduledDate ? new Date(job.scheduledDate) : null,\r\n      end: job?.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = (routesData || []).map(route => ({\r\n      id: route?._id || 'unknown-id',\r\n      title: route?.name || 'Unnamed Route',\r\n      start: route?.scheduledDate ? new Date(route.scheduledDate) : null,\r\n      end: route?.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const updateRouteTotals = useCallback(async () => {\r\n    const totals = {};\r\n    for (const route of routes) {\r\n      try {\r\n        const total = await calculateRouteTotal(route._id);\r\n        totals[route._id] = total;\r\n      } catch (error) {\r\n        console.error(`Error calculating total for route ${route._id}:`, error);\r\n      }\r\n    }\r\n    setRouteTotals(totals);\r\n  }, [routes]);\r\n  \r\n  useEffect(() => {\r\n    updateRouteTotals();\r\n  }, [updateRouteTotals]);\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\r\n      info.revert();\r\n      setError('Canceled or completed jobs cannot be scheduled.');\r\n      return;\r\n    }\r\n  \r\n    setPendingEvent(event);\r\n    setShowStartTimeModal(true);\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || {}\r\n    };\r\n\r\n    try {\r\n      if (eventData.extendedProps.type === 'job') {\r\n        await handleJobSchedule(eventData);\r\n      } else if (eventData.extendedProps.type === 'route') {\r\n        await handleRouteSchedule(eventData);\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, eventData]);\r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const handleJobSchedule = async (eventData) => {\r\n    const jobId = eventData.extendedProps.jobId;\r\n    const job = jobs.find(j => j?._id === jobId);\r\n  \r\n    if (job && job.route) {\r\n      throw new Error('This job is already assigned to a route');\r\n    }\r\n  \r\n    const updatedJob = await updateJob(jobId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n  \r\n    setJobs(prevJobs => prevJobs.map(j =>\r\n      j._id === jobId ? { ...j, scheduledDate: eventData.start, scheduledEndDate: eventData.end } : j\r\n    ));\r\n  \r\n    return updatedJob;\r\n  };\r\n\r\n  const handleRouteSchedule = async (eventData) => {\r\n    const routeId = eventData.extendedProps.routeId;\r\n    const existingRoute = routes.find(r => r?._id === routeId);\r\n\r\n    if (!existingRoute) {\r\n      throw new Error('Route not found');\r\n    }\r\n\r\n    const updatedRoute = await updateRoute(routeId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n\r\n    setRoutes(prevRoutes => prevRoutes.map(r => r?._id === routeId ? updatedRoute : r));\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const jobId = result.draggableId;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const updateLocalStorage = (jobs, routes) => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs));\r\n    localStorage.setItem('routes', JSON.stringify(routes));\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      console.log('Moving job', jobId, 'to route', routeId);\r\n  \r\n      const job = jobs.find(j => j?._id === jobId);\r\n      console.log('Job to move:', job);\r\n  \r\n      if (job.status === 'Canceled' || job.status === 'Completed') {\r\n        setError('Canceled or completed jobs cannot be added to routes.');\r\n        return;\r\n      }\r\n  \r\n      const updatedRoute = await updateRoute(routeId, {\r\n        $addToSet: { jobs: { job: { _id: jobId }, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      console.log('Updated route:', updatedRoute);\r\n  \r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n      console.log('Updated job:', updatedJob);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        console.log('New routes state:', newRoutes);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? {...updatedJob, route: routeId} : j);\r\n        console.log('New jobs state:', newJobs);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Update route total\r\n      const newTotal = await calculateRouteTotal(routeId);\r\n      setRouteTotals(prevTotals => ({\r\n        ...prevTotals,\r\n        [routeId]: newTotal\r\n      }));\r\n  \r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const job = jobs.find(j => j?._id === jobId);\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, jobs: route.jobs.filter(j => j.job !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      });\r\n\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      const routeToDelete = routes.find(r => r._id === routeId);\r\n      await deleteRoute(routeId);\r\n  \r\n      // Move jobs back to unassigned pool\r\n      const jobUpdates = routeToDelete.jobs.map(async (jobItem) => {\r\n        const job = jobs.find(j => j._id === jobItem.job._id);\r\n        if (job && job.status !== 'Canceled' && job.status !== 'Completed') {\r\n          return updateJob(job._id, { route: null });\r\n        }\r\n      });\r\n  \r\n      await Promise.all(jobUpdates);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.filter(route => route._id !== routeId);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(job => {\r\n          if (job.route === routeId && job.status !== 'Canceled' && job.status !== 'Completed') {\r\n            return {...job, route: null};\r\n          }\r\n          return job;\r\n        });\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Remove associated events from the calendar\r\n      setEvents(prevEvents => prevEvents.filter(event =>\r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n  \r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\r\n    }\r\n\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job?._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route?._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      try {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs =>\r\n          prevJobs.map(job =>\r\n            job?._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing job from calendar:', error);\r\n        setError('Failed to remove job. Please try again.');\r\n      }\r\n    } else if (event.extendedProps.type === 'route') {\r\n      try {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route =>\r\n          route?._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing route from calendar:', error);\r\n        setError('Failed to remove route. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderRouteTimeline = () => {\r\n    return (\r\n      <div className=\"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => {\r\n          const routeTotal = routeTotals[route._id] || 0;\r\n          const orderedJobs = orderJobsByScheduledTime(route);\r\n  \r\n          return (\r\n            <div key={route?._id} className=\"route-container bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-2 text-white\">{route?.name}</h3>\r\n              <p className=\"text-green-400 font-bold mb-4\">Total: ${routeTotal.toFixed(2)}</p>\r\n              {!route.scheduledDate && (\r\n                <button\r\n                  onClick={() => handleScheduleRoute(route._id)}\r\n                  className=\"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Schedule Route\r\n                </button>\r\n              )}\r\n              <div className=\"job-list space-y-2 max-h-96 overflow-y-auto\">\r\n                {orderedJobs.map((jobItem, index) => {\r\n                  const job = jobs.find(j => j?._id === jobItem.job._id);\r\n                  if (!job) return null;\r\n                  return (\r\n                    <div\r\n                      key={job?._id}\r\n                      className=\"job-item bg-gray-700 rounded p-2 text-white text-sm\"\r\n                    >\r\n                      <p className=\"font-semibold\">{job?.title}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Status: {job?.status}</p>\r\n                      <p>Revenue: ${job?.cost || 0}</p>\r\n                      <p>Estimated Duration: {job?.estimatedDuration || 60} minutes</p>\r\n                      <p>Scheduled: {jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                      <button\r\n                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                        className=\"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {(!route.jobs || route.jobs.length === 0) && (\r\n                <p className=\"text-gray-400 italic\">No jobs assigned to this route.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const orderJobsByScheduledTime = (route) => {\r\n    return [...route.jobs].sort((a, b) => {\r\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\r\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\r\n      return dateA - dateB;\r\n    });\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n  \r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route?._id} droppableId={`route-${route?._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route?.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route?.name);\r\n                                    if (newName) handleEditRouteName(route?._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route?._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route?._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.jobs && route.jobs.map((jobItem, index) => {\r\n                              const job = jobs.find(j => j?._id === jobItem.job);\r\n                              if (!job) return null;\r\n                              return (\r\n                                <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                    >\r\n                                      <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                      <p>{job?.description}</p>\r\n                                      <p>Status: {job?.status}</p>\r\n                                      <p>Customer: {job.customer?.name}</p>\r\n                                      <p>Scheduled: {jobItem?.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                                      <button\r\n                                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                                        className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                                      >\r\n                                        Remove from Route\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => (\r\n                          <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job?._id,\r\n                                  title: job?.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job?._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                <p>{job?.description}</p>\r\n                                <p>Status: {job?.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job?.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n\r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => (\r\n                            <div\r\n                              key={job?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job?._id,\r\n                                title: job?.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job?.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route?._id,\r\n                                title: route?.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route?.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                        <MemoizedFullCalendar\r\n                          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                          initialView=\"dayGridMonth\"\r\n                          headerToolbar={{\r\n                            left: 'prev,next today',\r\n                            center: 'title',\r\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                          }}\r\n                          editable={true}\r\n                          droppable={true}\r\n                          events={events}\r\n                          eventDrop={handleEventDrop}\r\n                          eventResize={handleEventResize}\r\n                          eventReceive={handleEventReceive}\r\n                          eventClick={handleEventClick}\r\n                          height=\"auto\"\r\n                          aspectRatio={1.8}\r\n                          dayMaxEvents={3}\r\n                          eventTimeFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            meridiem: 'short'\r\n                          }}\r\n                          eventClassNames=\"rounded-md shadow-sm\"\r\n                          slotLabelFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  {routes.map(route => (\r\n                    <div key={route?._id} className=\"mb-8\">\r\n                      <h3 className=\"text-xl font-semibold mb-2\">{route?.name}</h3>\r\n                      <CustomerMap \r\n                        jobs={route.jobs.map(jobItem => {\r\n                          const job = jobs.find(j => j?._id === jobItem.job);\r\n                          return job ? { ...job, scheduledDate: jobItem.scheduledDate, scheduledEndDate: jobItem.scheduledEndDate } : null;\r\n                        }).filter(Boolean)}\r\n                        route={route}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'timeline' && (\r\n                <div className=\"timeline-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Timelines</h2>\r\n                  {renderRouteTimeline()}\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}