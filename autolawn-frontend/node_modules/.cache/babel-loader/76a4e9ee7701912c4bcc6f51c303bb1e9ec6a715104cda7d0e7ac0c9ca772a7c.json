{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob, updateRoute } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      console.log('Fetched jobs:', jobsData);\n      console.log('Fetched routes:', routesData);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = jobsData.map(job => ({\n      id: job._id,\n      title: job.title,\n      start: job.scheduledDate,\n      end: job.scheduledEndDate,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: job._id\n      }\n    }));\n    const routeEvents = routesData.flatMap(route => route.customers.map(customer => ({\n      id: `${route._id}-${customer._id}`,\n      title: `${route.name}: ${customer.name}`,\n      start: customer.scheduledDate,\n      end: customer.scheduledEndDate,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id,\n        customerId: customer._id\n      }\n    })));\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      new FullCalendar.Draggable(elem, {\n        eventData: function () {\n          return JSON.parse(elem.getAttribute('data-event'));\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    initializeExternalEvents();\n  }, [jobs, routes, activeTab, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n          ...job,\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        } : job));\n      } else if (event.extendedProps.type === 'route') {\n        const [routeId, customerId] = event.id.split('-');\n        await updateRoute(routeId, {\n          customers: [{\n            customer: customerId,\n            scheduledDate: event.start,\n            scheduledEndDate: event.end\n          }]\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n          ...route,\n          customers: route.customers.map(customer => customer._id === customerId ? {\n            ...customer,\n            scheduledDate: event.start,\n            scheduledEndDate: event.end\n          } : customer)\n        } : route));\n      }\n      setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n        ...e,\n        start: event.start,\n        end: event.end\n      } : e));\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const startDate = event.start;\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Default 1-hour duration\n\n    try {\n      if (event.extendedProps.type === 'job') {\n        const updatedJob = await updateJob(event.id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n          ...job,\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        } : job));\n        console.log('Job scheduled:', updatedJob);\n      } else if (event.extendedProps.type === 'route') {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n          ...route,\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        } : route));\n        console.log('Route scheduled:', updatedRoute);\n      }\n      setEvents(prevEvents => [...prevEvents, {\n        id: event.id,\n        title: event.title,\n        start: startDate,\n        end: endDate,\n        color: event.extendedProps.type === 'job' ? '#4CAF50' : '#2196F3',\n        extendedProps: event.extendedProps\n      }]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n      info.revert();\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      const job = jobs.find(j => j._id === jobId);\n      const updatedRoute = await updateRoute(routeId, {\n        $push: {\n          customers: job._id\n        }\n      });\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $push: {\n          customers: jobId\n        }\n      });\n      await updateJob(jobId, {\n        route: destRouteId\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          customers: route.customers.filter(c => c._id !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      }));\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    alert(`Event: ${event.title}\\nStart: ${event.start}\\nEnd: ${event.end}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'jobs', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const newName = prompt('Enter new route name:', route.name);\n                          if (newName) handleEditRouteName(route._id, newName);\n                        },\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Edit Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleMapView(route._id),\n                        className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                        children: \"View Map\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                      \"data-event\": JSON.stringify({\n                        id: job._id,\n                        title: job.title,\n                        duration: '01:00',\n                        extendedProps: {\n                          type: 'job',\n                          jobId: job._id\n                        }\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 393,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), activeTab === 'jobs' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobs-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: jobs.map(job => {\n                var _job$customer2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold\",\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: job.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Status: \", job.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this)]\n                }, job._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"external-events\",\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-event\": JSON.stringify({\n                  id: job._id,\n                  title: job.title,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'job',\n                    jobId: job._id\n                  }\n                }),\n                children: job.title\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-event\": JSON.stringify({\n                  id: route._id,\n                  title: route.name,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'route',\n                    routeId: route._id\n                  }\n                }),\n                children: route.name\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"dayGridMonth\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              editable: true,\n              droppable: true,\n              events: events,\n              eventDrop: handleEventDrop,\n              eventReceive: handleEventReceive,\n              eventClick: handleEventClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"xSAw5NmYkLDLD0axz81Irtabz3A=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateCalendarEvent","updateJob","updateRoute","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","fetchData","jobsData","routesData","Promise","all","console","log","generateEvents","err","jobEvents","map","job","id","_id","title","start","scheduledDate","end","scheduledEndDate","color","extendedProps","type","jobId","routeEvents","flatMap","route","customers","customer","name","routeId","customerId","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","JSON","parse","getAttribute","handleEventDrop","info","event","prevJobs","split","prevRoutes","prevEvents","e","revert","handleEventReceive","startDate","endDate","Date","getTime","updatedJob","updatedRoute","onDragEnd","result","source","destination","droppableId","startsWith","draggableId","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","find","j","$push","filter","r","$pull","updatedDestRoute","c","handleEditRouteName","newName","handleMapView","handleEventClick","alert","handleAddRoute","newRoute","length","handleDeleteRoute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","tab","onClick","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","duration","description","status","toLocaleString","_job$customer2","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","eventClick","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob, updateRoute } from './api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      console.log('Fetched jobs:', jobsData);\r\n      console.log('Fetched routes:', routesData);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = jobsData.map(job => ({\r\n      id: job._id,\r\n      title: job.title,\r\n      start: job.scheduledDate,\r\n      end: job.scheduledEndDate,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job._id }\r\n    }));\r\n\r\n    const routeEvents = routesData.flatMap(route => \r\n      route.customers.map(customer => ({\r\n        id: `${route._id}-${customer._id}`,\r\n        title: `${route.name}: ${customer.name}`,\r\n        start: customer.scheduledDate,\r\n        end: customer.scheduledEndDate,\r\n        color: '#2196F3',\r\n        extendedProps: { type: 'route', routeId: route._id, customerId: customer._id }\r\n      }))\r\n    );\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      new FullCalendar.Draggable(elem, {\r\n        eventData: function() {\r\n          return JSON.parse(elem.getAttribute('data-event'));\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeExternalEvents();\r\n  }, [jobs, routes, activeTab, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, { scheduledDate: event.start, scheduledEndDate: event.end });\r\n        setJobs(prevJobs => prevJobs.map(job => \r\n          job._id === event.id ? { ...job, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n        ));\r\n      } else if (event.extendedProps.type === 'route') {\r\n        const [routeId, customerId] = event.id.split('-');\r\n        await updateRoute(routeId, {\r\n          customers: [{ customer: customerId, scheduledDate: event.start, scheduledEndDate: event.end }]\r\n        });\r\n        setRoutes(prevRoutes => prevRoutes.map(route => \r\n          route._id === routeId ? {\r\n            ...route,\r\n            customers: route.customers.map(customer => \r\n              customer._id === customerId \r\n                ? { ...customer, scheduledDate: event.start, scheduledEndDate: event.end }\r\n                : customer\r\n            )\r\n          } : route\r\n        ));\r\n      }\r\n      setEvents(prevEvents => \r\n        prevEvents.map(e => e.id === event.id ? { ...e, start: event.start, end: event.end } : e)\r\n      );\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n    const startDate = event.start;\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Default 1-hour duration\r\n  \r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        const updatedJob = await updateJob(event.id, { scheduledDate: startDate, scheduledEndDate: endDate });\r\n        setJobs(prevJobs => prevJobs.map(job => \r\n          job._id === event.id ? { ...job, scheduledDate: startDate, scheduledEndDate: endDate } : job\r\n        ));\r\n        console.log('Job scheduled:', updatedJob);\r\n      } else if (event.extendedProps.type === 'route') {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n        setRoutes(prevRoutes => prevRoutes.map(route => \r\n          route._id === routeId ? { ...route, scheduledDate: startDate, scheduledEndDate: endDate } : route\r\n        ));\r\n        console.log('Route scheduled:', updatedRoute);\r\n      }\r\n  \r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: event.id,\r\n        title: event.title,\r\n        start: startDate,\r\n        end: endDate,\r\n        color: event.extendedProps.type === 'job' ? '#4CAF50' : '#2196F3',\r\n        extendedProps: event.extendedProps\r\n      }]);\r\n  \r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedRoute = await updateRoute(routeId, { $push: { customers: job._id } });\r\n      await updateJob(jobId, { route: routeId });\r\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { customers: jobId } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      await updateRoute(sourceRouteId, { $pull: { customers: jobId } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, { $push: { customers: jobId } });\r\n      await updateJob(jobId, { route: destRouteId });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, customers: route.customers.filter(c => c._id !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      }));\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    alert(`Event: ${event.title}\\nStart: ${event.start}\\nEnd: ${event.end}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6\">\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'jobs', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  const newName = prompt('Enter new route name:', route.name);\r\n                                  if (newName) handleEditRouteName(route._id, newName);\r\n                                }}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Edit Name\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMapView(route._id)}\r\n                                className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                              >\r\n                                View Map\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job._id }\r\n                              })}\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                              <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n\r\n            {activeTab === 'jobs' && (\r\n              <div className=\"jobs-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Jobs</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {jobs.map(job => (\r\n                    <div key={job._id} className=\"bg-gray-100 p-4 rounded-lg text-black\">\r\n                      <h3 className=\"font-semibold\">{job.title}</h3>\r\n                      <p>{job.description}</p>\r\n                      <p>Status: {job.status}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'calendar' && (\r\n              <div className=\"calendar-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Schedule</h2>\r\n                <div id=\"external-events\" className=\"mb-4\">\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Jobs</h4>\r\n                  {jobs.map(job => (\r\n                    <div\r\n                      key={job._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-event={JSON.stringify({\r\n                        id: job._id,\r\n                        title: job.title,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'job', jobId: job._id }\r\n                      })}\r\n                    >\r\n                      {job.title}\r\n                    </div>\r\n                  ))}\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Routes</h4>\r\n                  {routes.map(route => (\r\n                    <div\r\n                      key={route._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-event={JSON.stringify({\r\n                        id: route._id,\r\n                        title: route.name,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'route', routeId: route._id }\r\n                      })}\r\n                    >\r\n                      {route.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <FullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  initialView=\"dayGridMonth\"\r\n                  headerToolbar={{\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                  }}\r\n                  editable={true}\r\n                  droppable={true}\r\n                  events={events}\r\n                  eventDrop={handleEventDrop}\r\n                  eventReceive={handleEventReceive}\r\n                  eventClick={handleEventClick}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}