{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available')]);\n      console.log('Fetched Routes Response:', JSON.stringify(fetchedRoutesResponse, null, 2));\n      console.log('Fetched Jobs Response:', JSON.stringify(fetchedJobsResponse, null, 2));\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n      setRoutes(validatedRoutes);\n      setJobPool(fetchedJobs);\n      console.log('Routes after fetch:', JSON.stringify(validatedRoutes, null, 2));\n      console.log('Job Pool after fetch:', JSON.stringify(fetchedJobs, null, 2));\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes and jobs. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => ({\n          index: route.index,\n          jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id)\n        }));\n        return acc;\n      }, {});\n      console.log('Sending routesToSave:', JSON.stringify(routesToSave, null, 2));\n      const response = await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('All routes saved successfully, response:', JSON.stringify(response, null, 2));\n\n      // Optionally re-initialize data after saving\n      await initializeData();\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    }\n  }, [routes, initializeData]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceListType = sourceId[0];\n      const sourceRouteIndex = parseInt(sourceId[1], 10);\n      const destListType = destId[0];\n      const destRouteIndex = parseInt(destId[1], 10);\n      let movedJob;\n      if (sourceListType === 'jobPool') {\n        movedJob = jobPool[source.index];\n        setJobPool(prev => {\n          const updated = [...prev];\n          updated.splice(source.index, 1);\n          return updated;\n        });\n        if (destListType !== 'jobPool') {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n        }\n      } else {\n        movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\n        updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\n        if (destListType === 'jobPool') {\n          setJobPool(prev => {\n            const updated = [...prev];\n            updated.splice(destination.index, 0, movedJob);\n            return updated;\n          });\n        } else {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n        }\n      }\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      console.log('Deleting route:', routeIndex);\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        console.log('Updated routes after deletion:', JSON.stringify(updatedRoutes, null, 2));\n        return updatedRoutes;\n      });\n\n      // Call API to delete the route in the database\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      console.log('Removing job from route:', routeIndex, jobIndex);\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        console.log('Updated routes after job removal:', JSON.stringify(updatedRoutes, null, 2));\n        return updatedRoutes;\n      });\n\n      // Call API to update the route in the database\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-700 rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeJobFromRoute(routeIndex, jobIndex),\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleJobExpansion(job._id),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.recurringStatus === 'Active' ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n      children: [jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 3\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Job Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 3\n  }, this);\n};\n_s(BuildRoutes, \"ItR/xhfes8uIueuN9JxK7ZTciZU=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","initializeData","fetchedRoutesResponse","fetchedJobsResponse","Promise","all","console","log","JSON","stringify","fetchedRoutes","fetchedJobs","validatedRoutes","err","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","index","jobs","job","_id","response","debouncedSaveRoutes","onDragEnd","result","source","destination","prevRoutes","sourceId","droppableId","split","destId","sourceListType","sourceRouteIndex","parseInt","destListType","destRouteIndex","movedJob","prev","updated","splice","addNewRoute","newRouteState","length","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","jobIndex","removedJob","cycleVisibleRoutes","direction","prevRange","totalRoutes","newStart","newEnd","Math","min","changeSelectedDay","prevDay","currentIndex","indexOf","newIndex","toggleJobExpansion","jobId","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","location","address","cost","recurringStatus","renderDroppableArea","id","isJobPool","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n      ]);\r\n  \r\n      console.log('Fetched Routes Response:', JSON.stringify(fetchedRoutesResponse, null, 2));\r\n      console.log('Fetched Jobs Response:', JSON.stringify(fetchedJobsResponse, null, 2));\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      setRoutes(validatedRoutes);\r\n      setJobPool(fetchedJobs);\r\n  \r\n      console.log('Routes after fetch:', JSON.stringify(validatedRoutes, null, 2));\r\n      console.log('Job Pool after fetch:', JSON.stringify(fetchedJobs, null, 2));\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes and jobs. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)),\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      console.log('Sending routesToSave:', JSON.stringify(routesToSave, null, 2));\r\n      const response = await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('All routes saved successfully, response:', JSON.stringify(response, null, 2));\r\n      \r\n      // Optionally re-initialize data after saving\r\n      await initializeData();\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    }\r\n  }, [routes, initializeData]);\r\n  \r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    setRoutes(prevRoutes => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n\r\n      const sourceListType = sourceId[0];\r\n      const sourceRouteIndex = parseInt(sourceId[1], 10);\r\n\r\n      const destListType = destId[0];\r\n      const destRouteIndex = parseInt(destId[1], 10);\r\n\r\n      let movedJob;\r\n\r\n      if (sourceListType === 'jobPool') {\r\n        movedJob = jobPool[source.index];\r\n        setJobPool(prev => {\r\n          const updated = [...prev];\r\n          updated.splice(source.index, 1);\r\n          return updated;\r\n        });\r\n\r\n        if (destListType !== 'jobPool') {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n        }\r\n      } else {\r\n        movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\r\n        updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\r\n\r\n        if (destListType === 'jobPool') {\r\n          setJobPool(prev => {\r\n            const updated = [...prev];\r\n            updated.splice(destination.index, 0, movedJob);\r\n            return updated;\r\n          });\r\n        } else {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n        }\r\n      }\r\n\r\n      return updatedRoutes;\r\n    });\r\n\r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);\r\n\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [\r\n        ...routes[selectedDay],\r\n        { index: routes[selectedDay].length, jobs: [] },\r\n      ],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n  \r\n  \r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      console.log('Deleting route:', routeIndex);\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n        \r\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n        \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n        \r\n        console.log('Updated routes after deletion:', JSON.stringify(updatedRoutes, null, 2));\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      // Call API to delete the route in the database\r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);\r\n  \r\n\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      console.log('Removing job from route:', routeIndex, jobIndex);\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n        console.log('Updated routes after job removal:', JSON.stringify(updatedRoutes, null, 2));\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      // Call API to update the route in the database\r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs\r\n      });\r\n  \r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs(prev => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n  \r\n    return (\r\n      <div className=\"p-2 bg-gray-700 rounded-md shadow-md\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n              onClick={() => removeJobFromRoute(routeIndex, jobIndex)}\r\n              className=\"text-red-500 hover:text-red-700 mr-2\"\r\n            >\r\n              <TrashIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          )}\r\n          <button onClick={() => toggleJobExpansion(job._id)}>\r\n            {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isExpanded && (\r\n        <div className=\"mt-2\">\r\n          <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n          <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n          <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n          <p className=\"text-gray-400\">Type: {job.recurringStatus === 'Active' ? 'Recurring' : 'One-time'}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderDroppableArea = (id, jobs, isJobPool = false) => (\r\n  <Droppable droppableId={id}>\r\n    {(provided) => (\r\n      <div\r\n        ref={provided.innerRef}\r\n        {...provided.droppableProps}\r\n        className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n      >\r\n        {jobs.length > 0 ? (\r\n          jobs.map((job, index) => (\r\n            <Draggable key={job._id} draggableId={job._id} index={index}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.draggableProps}\r\n                  {...provided.dragHandleProps}\r\n                >\r\n                  {renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)}\r\n                </div>\r\n              )}\r\n            </Draggable>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-white text-center\">No jobs available</p>\r\n        )}\r\n        {provided.placeholder}\r\n      </div>\r\n    )}\r\n  </Droppable>\r\n);\r\n\r\nif (loading) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n      <p className=\"text-white text-xl\">Loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nif (error) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n      <p className=\"text-red-500 text-xl\">{error}</p>\r\n      <button\r\n        onClick={() => window.location.reload()}\r\n        className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n      >\r\n        Refresh Page\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <div className=\"min-h-screen bg-gray-900 text-white\">\r\n    <Header />\r\n    <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <button\r\n          onClick={() => changeSelectedDay(-1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronLeftIcon className=\"w-6 h-6\" />\r\n        </button>\r\n        <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n        <button\r\n          onClick={() => changeSelectedDay(1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronRightIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <button\r\n          onClick={() => cycleVisibleRoutes(-1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronLeftIcon className=\"w-6 h-6\" />\r\n        </button>\r\n        <button\r\n          onClick={addNewRoute}\r\n          className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n        >\r\n          <PlusIcon className=\"w-5 h-5\" />\r\n          <span>Add Route</span>\r\n        </button>\r\n        <button\r\n          onClick={() => cycleVisibleRoutes(1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronRightIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {routes[selectedDay]\r\n            .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n            .map((route) => (\r\n              <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                  <button\r\n                    onClick={() => deleteRoute(route.index)}\r\n                    className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                  >\r\n                    <TrashIcon className=\"w-5 w-5\" />\r\n                  </button>\r\n                </div>\r\n                {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"mt-8\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Job Pool</h2>\r\n          {renderDroppableArea('jobPool-0', jobPool, true)}\r\n        </div>\r\n      </DragDropContext>\r\n    </main>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}