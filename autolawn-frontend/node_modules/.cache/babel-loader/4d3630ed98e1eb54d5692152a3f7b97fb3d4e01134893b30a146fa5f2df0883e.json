{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Header from '../components/Header';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('Monday');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchRouteAndJobs = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [routesResponse, jobsResponse] = await Promise.all([axios.get(`${API_BASE_URL}/routes`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }), axios.get(`${API_BASE_URL}/routes/jobs/available`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })]);\n      const fetchedRoutes = routesResponse.data.reduce((acc, route) => {\n        acc[route.day] = route.jobs;\n        return acc;\n      }, {\n        Monday: [],\n        Tuesday: [],\n        Wednesday: [],\n        Thursday: [],\n        Friday: [],\n        Saturday: [],\n        Sunday: []\n      });\n      setRoutes(fetchedRoutes);\n\n      // Filter out jobs that are already scheduled on any day\n      const scheduledJobIds = Object.values(fetchedRoutes).flat().map(job => job._id);\n      const availableJobs = jobsResponse.data.filter(job => !scheduledJobIds.includes(job._id));\n      setJobPool(availableJobs);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load routes and jobs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRouteAndJobs();\n  }, [fetchRouteAndJobs]);\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceList = source.droppableId;\n    const destList = destination.droppableId;\n    let updatedRoutes = {\n      ...routes\n    };\n    let updatedJobPool = [...jobPool];\n    let movedJob;\n    if (sourceList === 'jobPool') {\n      [movedJob] = updatedJobPool.splice(source.index, 1);\n    } else {\n      [movedJob] = updatedRoutes[sourceList].splice(source.index, 1);\n    }\n    if (destList === 'jobPool') {\n      updatedJobPool.splice(destination.index, 0, movedJob);\n    } else {\n      updatedRoutes[destList].splice(destination.index, 0, movedJob);\n    }\n    setRoutes(updatedRoutes);\n    setJobPool(updatedJobPool);\n    try {\n      if (destList !== 'jobPool') {\n        await axios.put(`${API_BASE_URL}/routes/${destList}`, {\n          jobs: updatedRoutes[destList].map(job => job._id)\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      if (sourceList !== 'jobPool') {\n        await axios.put(`${API_BASE_URL}/routes/${sourceList}`, {\n          jobs: updatedRoutes[sourceList].map(job => job._id)\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error updating route:', error);\n      setError('Failed to update route. Please try again.');\n      fetchRouteAndJobs(); // Revert changes if update fails\n    }\n  };\n  const handleCompleteRoute = async routeIndex => {\n    try {\n      await axios.post(`${API_BASE_URL}/routes/${selectedDay}/${routeIndex}/complete`, null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      fetchRouteAndJobs(); // Refresh the data after completing the route\n    } catch (error) {\n      console.error('Error completing route:', error);\n      setError('Failed to complete route. Please try again.');\n    }\n  };\n  const addNewRoute = () => {\n    setRoutes(prevRoutes => ({\n      ...prevRoutes,\n      [selectedDay]: [...prevRoutes[selectedDay], []]\n    }));\n  };\n  const renderJobList = (listId, jobs, isRoute = false, routeIndex = 0) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: `${listId}-${routeIndex}`,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      className: `bg-gray-800 p-4 rounded-lg shadow-lg ${isRoute ? 'min-h-[400px]' : 'min-h-[200px]'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-white\",\n        children: isRoute ? `${selectedDay} Route ${routeIndex + 1}` : 'Job Pool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => {\n          var _job$customer, _job$location;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: `p-3 mb-2 rounded-md shadow-md transition-colors duration-200 \n                    ${job.isRecurring ? 'bg-green-700 hover:bg-green-600' : 'bg-blue-700 hover:bg-blue-600'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold text-white\",\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-300\",\n              children: (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: (_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: [\"Revenue: $\", job.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this);\n        }\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-white\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-red-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRouteAndJobs,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-blue-600 transition-colors duration-200\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Build Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDay(prev => {\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n            const currentIndex = days.indexOf(prev);\n            return days[(currentIndex - 1 + 7) % 7];\n          }),\n          className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDay(prev => {\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n            const currentIndex = days.indexOf(prev);\n            return days[(currentIndex + 1) % 7];\n          }),\n          className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [routes[selectedDay].map((route, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-bold\",\n                children: [\"Route \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCompleteRoute(index),\n                className: \"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors duration-200\",\n                children: \"Complete Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), renderJobList(selectedDay, route, true, index)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewRoute,\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), \"Add Another Route\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold mb-4\",\n              children: \"Job Pool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), renderJobList('jobPool', jobPool)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"w4F/3PKH7dU9toneF9ftr2bP6RA=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","DragDropContext","Droppable","Draggable","Header","ChevronLeftIcon","ChevronRightIcon","jsxDEV","_jsxDEV","API_BASE_URL","BuildRoutes","_s","routes","setRoutes","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","fetchRouteAndJobs","routesResponse","jobsResponse","Promise","all","get","headers","Authorization","localStorage","getItem","fetchedRoutes","data","reduce","acc","route","day","jobs","scheduledJobIds","Object","values","flat","map","job","_id","availableJobs","filter","includes","console","onDragEnd","result","source","destination","sourceList","droppableId","destList","updatedRoutes","updatedJobPool","movedJob","splice","index","put","handleCompleteRoute","routeIndex","post","addNewRoute","prevRoutes","renderJobList","listId","isRoute","children","provided","droppableProps","ref","innerRef","className","fileName","_jsxFileName","lineNumber","columnNumber","draggableId","_job$customer","_job$location","draggableProps","dragHandleProps","isRecurring","title","customer","name","location","address","price","placeholder","onClick","prev","days","currentIndex","indexOf","PlusIcon","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Header from '../components/Header';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState({\r\n    Monday: [],\r\n    Tuesday: [],\r\n    Wednesday: [],\r\n    Thursday: [],\r\n    Friday: [],\r\n    Saturday: [],\r\n    Sunday: [],\r\n  });\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('Monday');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchRouteAndJobs = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [routesResponse, jobsResponse] = await Promise.all([\r\n        axios.get(`${API_BASE_URL}/routes`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        }),\r\n        axios.get(`${API_BASE_URL}/routes/jobs/available`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        })\r\n      ]);\r\n\r\n      const fetchedRoutes = routesResponse.data.reduce((acc, route) => {\r\n        acc[route.day] = route.jobs;\r\n        return acc;\r\n      }, {\r\n        Monday: [],\r\n        Tuesday: [],\r\n        Wednesday: [],\r\n        Thursday: [],\r\n        Friday: [],\r\n        Saturday: [],\r\n        Sunday: [],\r\n      });\r\n\r\n      setRoutes(fetchedRoutes);\r\n\r\n      // Filter out jobs that are already scheduled on any day\r\n      const scheduledJobIds = Object.values(fetchedRoutes).flat().map(job => job._id);\r\n      const availableJobs = jobsResponse.data.filter(job => !scheduledJobIds.includes(job._id));\r\n\r\n      setJobPool(availableJobs);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Failed to load routes and jobs. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchRouteAndJobs();\r\n  }, [fetchRouteAndJobs]);\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceList = source.droppableId;\r\n    const destList = destination.droppableId;\r\n\r\n    let updatedRoutes = { ...routes };\r\n    let updatedJobPool = [...jobPool];\r\n    let movedJob;\r\n\r\n    if (sourceList === 'jobPool') {\r\n      [movedJob] = updatedJobPool.splice(source.index, 1);\r\n    } else {\r\n      [movedJob] = updatedRoutes[sourceList].splice(source.index, 1);\r\n    }\r\n\r\n    if (destList === 'jobPool') {\r\n      updatedJobPool.splice(destination.index, 0, movedJob);\r\n    } else {\r\n      updatedRoutes[destList].splice(destination.index, 0, movedJob);\r\n    }\r\n\r\n    setRoutes(updatedRoutes);\r\n    setJobPool(updatedJobPool);\r\n\r\n    try {\r\n      if (destList !== 'jobPool') {\r\n        await axios.put(`${API_BASE_URL}/routes/${destList}`, { jobs: updatedRoutes[destList].map(job => job._id) }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n      }\r\n      if (sourceList !== 'jobPool') {\r\n        await axios.put(`${API_BASE_URL}/routes/${sourceList}`, { jobs: updatedRoutes[sourceList].map(job => job._id) }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating route:', error);\r\n      setError('Failed to update route. Please try again.');\r\n      fetchRouteAndJobs(); // Revert changes if update fails\r\n    }\r\n  };\r\n\r\n  const handleCompleteRoute = async (routeIndex) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/routes/${selectedDay}/${routeIndex}/complete`, null, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      fetchRouteAndJobs(); // Refresh the data after completing the route\r\n    } catch (error) {\r\n      console.error('Error completing route:', error);\r\n      setError('Failed to complete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const addNewRoute = () => {\r\n    setRoutes(prevRoutes => ({\r\n      ...prevRoutes,\r\n      [selectedDay]: [...prevRoutes[selectedDay], []]\r\n    }));\r\n  };\r\n\r\n  const renderJobList = (listId, jobs, isRoute = false, routeIndex = 0) => (\r\n    <Droppable droppableId={`${listId}-${routeIndex}`}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className={`bg-gray-800 p-4 rounded-lg shadow-lg ${isRoute ? 'min-h-[400px]' : 'min-h-[200px]'}`}\r\n        >\r\n          <h2 className=\"text-xl font-bold mb-4 text-white\">\r\n            {isRoute ? `${selectedDay} Route ${routeIndex + 1}` : 'Job Pool'}\r\n          </h2>\r\n          {jobs.map((job, index) => (\r\n            <Draggable key={job._id} draggableId={job._id} index={index}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.draggableProps}\r\n                  {...provided.dragHandleProps}\r\n                  className={`p-3 mb-2 rounded-md shadow-md transition-colors duration-200 \r\n                    ${job.isRecurring ? 'bg-green-700 hover:bg-green-600' : 'bg-blue-700 hover:bg-blue-600'}`}\r\n                >\r\n                  <p className=\"font-bold text-white\">{job.title}</p>\r\n                  <p className=\"text-sm text-gray-300\">{job.customer?.name}</p>\r\n                  <p className=\"text-xs text-gray-400\">{job.location?.address}</p>\r\n                  <p className=\"text-xs text-gray-400\">Revenue: ${job.price}</p>\r\n                  <p className=\"text-xs text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n                </div>\r\n              )}\r\n            </Draggable>\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-8 text-white\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center mt-8 text-red-500\">\r\n        <p>{error}</p>\r\n        <button\r\n          onClick={fetchRouteAndJobs}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-blue-600 transition-colors duration-200\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Build Routes</h1>\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <button onClick={() => setSelectedDay(prev => {\r\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n            const currentIndex = days.indexOf(prev);\r\n            return days[(currentIndex - 1 + 7) % 7];\r\n          })} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n            <ChevronLeftIcon className=\"h-5 w-5\" />\r\n          </button>\r\n          <h2 className=\"text-2xl font-semibold\">{selectedDay}</h2>\r\n          <button onClick={() => setSelectedDay(prev => {\r\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n            const currentIndex = days.indexOf(prev);\r\n            return days[(currentIndex + 1) % 7];\r\n          })} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n            <ChevronRightIcon className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"space-y-6\">\r\n            {routes[selectedDay].map((route, index) => (\r\n              <div key={index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-xl font-bold\">Route {index + 1}</h3>\r\n                  <button\r\n                    onClick={() => handleCompleteRoute(index)}\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors duration-200\"\r\n                  >\r\n                    Complete Route\r\n                  </button>\r\n                </div>\r\n                {renderJobList(selectedDay, route, true, index)}\r\n              </div>\r\n            ))}\r\n            <button\r\n              onClick={addNewRoute}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200 flex items-center\"\r\n            >\r\n              <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n              Add Another Route\r\n            </button>\r\n            <div className=\"mt-8\">\r\n              <h3 className=\"text-xl font-bold mb-4\">Job Pool</h3>\r\n              {renderJobList('jobPool', jobPool)}\r\n            </div>\r\n          </div>\r\n        </DragDropContext>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}