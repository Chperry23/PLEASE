{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst getHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('token')}`\n});\nexport const fetchCustomers = async () => {\n  const response = await axios.get(`${API_BASE_URL}/customers`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchRoutes = async () => {\n  const response = await axios.get(`${API_BASE_URL}/routes`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const SaveRoute = async route => {\n  try {\n    const routeToSave = {\n      _id: route._id,\n      name: route.name,\n      customers: route.customers.map(customer => {\n        var _customer$address, _customer$address2, _customer$address3, _customer$address4, _customer$address5, _customer$address6;\n        return {\n          _id: customer._id,\n          name: customer.name,\n          address: {\n            street: (_customer$address = customer.address) === null || _customer$address === void 0 ? void 0 : _customer$address.street,\n            city: (_customer$address2 = customer.address) === null || _customer$address2 === void 0 ? void 0 : _customer$address2.city,\n            state: (_customer$address3 = customer.address) === null || _customer$address3 === void 0 ? void 0 : _customer$address3.state,\n            zipCode: (_customer$address4 = customer.address) === null || _customer$address4 === void 0 ? void 0 : _customer$address4.zipCode,\n            lat: (_customer$address5 = customer.address) === null || _customer$address5 === void 0 ? void 0 : _customer$address5.lat,\n            lng: (_customer$address6 = customer.address) === null || _customer$address6 === void 0 ? void 0 : _customer$address6.lng\n          }\n        };\n      })\n    };\n    console.log('Saving route:', routeToSave);\n    const savedRoute = await saveRoute(routeToSave);\n    console.log('Saved route response:', savedRoute);\n    setRoutes(prevRoutes => prevRoutes.map(r => r._id === savedRoute._id ? {\n      ...savedRoute,\n      isSaved: true,\n      customers: routeToSave.customers\n    } : r));\n    setSuccessMessage('Route saved successfully!');\n  } catch (error) {\n    console.error('Error saving route:', error);\n    setSuccessMessage('Failed to save route. Please try again.');\n  }\n};\n_c = SaveRoute;\nexport const deleteRoute = async routeId => {\n  await axios.delete(`${API_BASE_URL}/routes/${routeId}`, {\n    headers: getHeaders()\n  });\n};\nexport const optimizeRoute = async routeId => {\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/optimize`, {}, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchJobs = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/jobs`, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n    throw error;\n  }\n};\nexport const fetchCalendarEvents = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/calendar-events`, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching calendar events:', error);\n    throw error;\n  }\n};\nexport const updateCalendarEvent = async eventData => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventData.id}`, eventData, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating calendar event:', error);\n    throw error;\n  }\n};\nexport const saveSchedule = async (routeId, schedule) => {\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, schedule, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nvar _c;\n$RefreshReg$(_c, \"SaveRoute\");","map":{"version":3,"names":["axios","API_BASE_URL","getHeaders","Authorization","localStorage","getItem","fetchCustomers","response","get","headers","data","fetchRoutes","SaveRoute","route","routeToSave","_id","name","customers","map","customer","_customer$address","_customer$address2","_customer$address3","_customer$address4","_customer$address5","_customer$address6","address","street","city","state","zipCode","lat","lng","console","log","savedRoute","saveRoute","setRoutes","prevRoutes","r","isSaved","setSuccessMessage","error","_c","deleteRoute","routeId","delete","optimizeRoute","post","fetchJobs","fetchCalendarEvents","updateCalendarEvent","eventData","put","id","saveSchedule","schedule","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst getHeaders = () => ({ Authorization: `Bearer ${localStorage.getItem('token')}` });\r\n\r\nexport const fetchCustomers = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/customers`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchRoutes = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/routes`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const SaveRoute = async (route) => {\r\n    try {\r\n      const routeToSave = {\r\n        _id: route._id,\r\n        name: route.name,\r\n        customers: route.customers.map(customer => ({\r\n          _id: customer._id,\r\n          name: customer.name,\r\n          address: {\r\n            street: customer.address?.street,\r\n            city: customer.address?.city,\r\n            state: customer.address?.state,\r\n            zipCode: customer.address?.zipCode,\r\n            lat: customer.address?.lat,\r\n            lng: customer.address?.lng\r\n          }\r\n        }))\r\n      };\r\n  \r\n      console.log('Saving route:', routeToSave);\r\n  \r\n      const savedRoute = await saveRoute(routeToSave);\r\n      console.log('Saved route response:', savedRoute);\r\n  \r\n      setRoutes(prevRoutes => prevRoutes.map(r =>\r\n        r._id === savedRoute._id ? { ...savedRoute, isSaved: true, customers: routeToSave.customers } : r\r\n      ));\r\n      setSuccessMessage('Route saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving route:', error);\r\n      setSuccessMessage('Failed to save route. Please try again.');\r\n    }\r\n  };\r\n\r\nexport const deleteRoute = async (routeId) => {\r\n  await axios.delete(`${API_BASE_URL}/routes/${routeId}`, { headers: getHeaders() });\r\n};\r\n\r\nexport const optimizeRoute = async (routeId) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/optimize`, {}, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchJobs = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/jobs`, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCalendarEvents = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/calendar-events`, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching calendar events:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateCalendarEvent = async (eventData) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventData.id}`, eventData, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating calendar event:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveSchedule = async (routeId, schedule) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, schedule, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}