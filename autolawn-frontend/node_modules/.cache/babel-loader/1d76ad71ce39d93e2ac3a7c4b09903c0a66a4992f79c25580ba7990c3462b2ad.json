{"ast":null,"code":"// src/components/ProtectedRoute.js\nimport React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{user,loading}=useAuth();const location=useLocation();if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// You might want to replace this with a proper loading component\n}if(!user){// Redirect them to the /signin page, but save the current location they were\n// trying to go to when they were redirected. This allows us to send them\n// along to that page after they login, which is a nicer user experience\n// than dropping them off on the home page.\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/signin\",state:{from:location},replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","user","loading","location","to","state","from","replace"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // You might want to replace this with a proper loading component\r\n  }\r\n\r\n  if (!user) {\r\n    // Redirect them to the /signin page, but save the current location they were\r\n    // trying to go to when they were redirected. This allows us to send them\r\n    // along to that page after they login, which is a nicer user experience\r\n    // than dropping them off on the home page.\r\n    return <Navigate to=\"/signin\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,IAAI,CAAEC,OAAQ,CAAC,CAAGP,OAAO,CAAC,CAAC,CACnC,KAAM,CAAAQ,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,GAAIQ,OAAO,CAAE,CACX,mBAAOL,IAAA,QAAAG,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAChC,CAEA,GAAI,CAACC,IAAI,CAAE,CACT;AACA;AACA;AACA;AACA,mBAAOJ,IAAA,CAACJ,QAAQ,EAACW,EAAE,CAAC,SAAS,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAS,CAAE,CAACI,OAAO,MAAE,CAAC,CACrE,CAEA,MAAO,CAAAP,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}