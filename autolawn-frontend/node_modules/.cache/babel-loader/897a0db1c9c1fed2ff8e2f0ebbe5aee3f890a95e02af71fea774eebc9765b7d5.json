{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateRoute, addJobToRoute, removeJobFromRoute, fetchCalendarEvents, createCalendarEvent, updateCalendarEvent, deleteCalendarEvent, optimizeRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData, eventsData] = await Promise.all([fetchJobs(), fetchRoutes(), fetchCalendarEvents()]);\n      setJobs(jobsData);\n      setRoutes(routesData);\n      setEvents(eventsData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    try {\n      if (source.droppableId === 'jobPool') {\n        const routeId = destination.droppableId.split('-')[1];\n        await addJobToRoute(routeId, result.draggableId);\n      } else if (destination.droppableId === 'jobPool') {\n        const routeId = source.droppableId.split('-')[1];\n        await removeJobFromRoute(routeId, result.draggableId);\n      } else {\n        // Move job between routes\n        const sourceRouteId = source.droppableId.split('-')[1];\n        const destRouteId = destination.droppableId.split('-')[1];\n        await removeJobFromRoute(sourceRouteId, result.draggableId);\n        await addJobToRoute(destRouteId, result.draggableId);\n      }\n      await fetchData();\n      setSuccessMessage('Job moved successfully!');\n    } catch (error) {\n      console.error('Error moving job:', error);\n      setError('Failed to move job. Please try again.');\n    }\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        jobs: []\n      });\n      setRoutes([...routes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(routes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleOptimizeRoute = async routeId => {\n    try {\n      const optimizedRoute = await optimizeRoute(routeId);\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\n      setSuccessMessage('Route optimized successfully!');\n    } catch (error) {\n      console.error('Error optimizing route:', error);\n      setError('Failed to optimize route. Please try again.');\n    }\n  };\n  const renderRoutesList = () => /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `route-${route._id}`,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"bg-gray-100 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptimizeRoute(route._id),\n            className: \"mb-2 bg-blue-500 text-white px-2 py-1 rounded text-sm\",\n            children: \"Optimize Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), route.jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: job._id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"bg-white p-2 mb-2 rounded shadow\",\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }, this)\n          }, job._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRoute(route._id),\n            className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n            children: \"Delete Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)\n      }, route._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"jobPool\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"mt-6 bg-gray-200 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Unassigned Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), jobs.filter(job => !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"bg-white p-2 mb-2 rounded shadow\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n  const renderCalendarView = () => /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    events: events,\n    editable: true,\n    droppable: true,\n    eventDrop: handleEventDrop,\n    eventReceive: handleEventReceive\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n  const handleEventDrop = async info => {\n    try {\n      await updateCalendarEvent(info.event.id, {\n        start: info.event.start,\n        end: info.event.end\n      });\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    try {\n      const newEvent = await createCalendarEvent({\n        title: info.event.title,\n        start: info.event.start,\n        end: info.event.end,\n        extendedProps: {\n          jobId: info.event.id\n        }\n      });\n      setEvents([...events, newEvent]);\n      setSuccessMessage('Event added to calendar successfully!');\n    } catch (error) {\n      console.error('Error adding event to calendar:', error);\n      setError('Failed to add event to calendar. Please try again.');\n      info.remove();\n    }\n  };\n  const renderMapView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[600px]\",\n    children: /*#__PURE__*/_jsxDEV(CustomerMap, {\n      routes: routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n  const renderTimelineView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: route.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-2 rounded\",\n        children: route.jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-2 mb-1 rounded\",\n          children: [job.title, \" - \", new Date(job.scheduledDate).toLocaleString()]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, route._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddRoute,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n              children: \"Add New Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-blue-500 text-white' : 'text-blue-500 hover:text-blue-800'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow overflow-hidden sm:rounded-lg p-6\",\n            children: [activeTab === 'routes' && renderRoutesList(), activeTab === 'calendar' && renderCalendarView(), activeTab === 'map' && renderMapView(), activeTab === 'timeline' && renderTimelineView()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"3AiYajClqd+FYfS2PUlAT2HIPck=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateRoute","addJobToRoute","removeJobFromRoute","fetchCalendarEvents","createCalendarEvent","updateCalendarEvent","deleteCalendarEvent","optimizeRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","fetchData","jobsData","routesData","eventsData","Promise","all","err","console","onDragEnd","result","source","destination","droppableId","routeId","split","draggableId","sourceRouteId","destRouteId","handleAddRoute","newRoute","name","length","handleDeleteRoute","filter","route","_id","handleOptimizeRoute","optimizedRoute","map","renderRoutesList","children","className","provided","ref","innerRef","droppableProps","fileName","_jsxFileName","lineNumber","columnNumber","onClick","job","index","draggableProps","dragHandleProps","title","placeholder","renderCalendarView","plugins","initialView","editable","droppable","eventDrop","handleEventDrop","eventReceive","handleEventReceive","info","event","id","start","end","revert","newEvent","extendedProps","jobId","remove","renderMapView","renderTimelineView","Date","scheduledDate","toLocaleString","role","tab","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateRoute, addJobToRoute, removeJobFromRoute, fetchCalendarEvents, createCalendarEvent, updateCalendarEvent, deleteCalendarEvent, optimizeRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData, eventsData] = await Promise.all([\r\n        fetchJobs(),\r\n        fetchRoutes(),\r\n        fetchCalendarEvents()\r\n      ]);\r\n\r\n      setJobs(jobsData);\r\n      setRoutes(routesData);\r\n      setEvents(eventsData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    try {\r\n      if (source.droppableId === 'jobPool') {\r\n        const routeId = destination.droppableId.split('-')[1];\r\n        await addJobToRoute(routeId, result.draggableId);\r\n      } else if (destination.droppableId === 'jobPool') {\r\n        const routeId = source.droppableId.split('-')[1];\r\n        await removeJobFromRoute(routeId, result.draggableId);\r\n      } else {\r\n        // Move job between routes\r\n        const sourceRouteId = source.droppableId.split('-')[1];\r\n        const destRouteId = destination.droppableId.split('-')[1];\r\n        await removeJobFromRoute(sourceRouteId, result.draggableId);\r\n        await addJobToRoute(destRouteId, result.draggableId);\r\n      }\r\n      await fetchData();\r\n      setSuccessMessage('Job moved successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job:', error);\r\n      setError('Failed to move job. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, jobs: [] });\r\n      setRoutes([...routes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(routes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleOptimizeRoute = async (routeId) => {\r\n    try {\r\n      const optimizedRoute = await optimizeRoute(routeId);\r\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\r\n      setSuccessMessage('Route optimized successfully!');\r\n    } catch (error) {\r\n      console.error('Error optimizing route:', error);\r\n      setError('Failed to optimize route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderRoutesList = () => (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => (\r\n          <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className=\"bg-gray-100 p-4 rounded-lg\"\r\n              >\r\n                <h3 className=\"font-semibold mb-2\">{route.name}</h3>\r\n                <button onClick={() => handleOptimizeRoute(route._id)} className=\"mb-2 bg-blue-500 text-white px-2 py-1 rounded text-sm\">\r\n                  Optimize Route\r\n                </button>\r\n                {route.jobs.map((job, index) => (\r\n                  <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                      >\r\n                        {job.title}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n                <button onClick={() => handleDeleteRoute(route._id)} className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\">\r\n                  Delete Route\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n      <Droppable droppableId=\"jobPool\">\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className=\"mt-6 bg-gray-200 p-4 rounded-lg\"\r\n          >\r\n            <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n            {jobs.filter(job => !job.route).map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                  >\r\n                    {job.title}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n\r\n  const renderCalendarView = () => (\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n      initialView=\"dayGridMonth\"\r\n      events={events}\r\n      editable={true}\r\n      droppable={true}\r\n      eventDrop={handleEventDrop}\r\n      eventReceive={handleEventReceive}\r\n    />\r\n  );\r\n\r\n  const handleEventDrop = async (info) => {\r\n    try {\r\n      await updateCalendarEvent(info.event.id, {\r\n        start: info.event.start,\r\n        end: info.event.end\r\n      });\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    try {\r\n      const newEvent = await createCalendarEvent({\r\n        title: info.event.title,\r\n        start: info.event.start,\r\n        end: info.event.end,\r\n        extendedProps: { jobId: info.event.id }\r\n      });\r\n      setEvents([...events, newEvent]);\r\n      setSuccessMessage('Event added to calendar successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding event to calendar:', error);\r\n      setError('Failed to add event to calendar. Please try again.');\r\n      info.remove();\r\n    }\r\n  };\r\n\r\n  const renderMapView = () => (\r\n    <div className=\"h-[600px]\">\r\n      <CustomerMap routes={routes} />\r\n    </div>\r\n  );\r\n\r\n  const renderTimelineView = () => (\r\n    <div>\r\n      {routes.map(route => (\r\n        <div key={route._id} className=\"mb-4\">\r\n          <h3 className=\"font-semibold\">{route.name}</h3>\r\n          <div className=\"bg-gray-100 p-2 rounded\">\r\n            {route.jobs.map(job => (\r\n              <div key={job._id} className=\"bg-white p-2 mb-1 rounded\">\r\n                {job.title} - {new Date(job.scheduledDate).toLocaleString()}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <button\r\n                onClick={handleAddRoute}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n              >\r\n                Add New Route\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <nav className=\"flex space-x-4\">\r\n                {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                      ? 'bg-blue-500 text-white'\r\n                      : 'text-blue-500 hover:text-blue-800'\r\n                  } px-3 py-2 font-medium text-sm rounded-md`}\r\n                >\r\n                  {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                </button>\r\n              ))}\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"bg-white shadow overflow-hidden sm:rounded-lg p-6\">\r\n            {activeTab === 'routes' && renderRoutesList()}\r\n            {activeTab === 'calendar' && renderCalendarView()}\r\n            {activeTab === 'map' && renderMapView()}\r\n            {activeTab === 'timeline' && renderTimelineView()}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </ErrorBoundary>\r\n);\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}