{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute, addJobToRoute, removeJobFromRoute, fetchCalendarEvents, createCalendarEvent, updateCalendarEvent, deleteCalendarEvent } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const [newRouteName, setNewRouteName] = useState('');\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData);\n      setRoutes(routesData);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = useCallback((jobsData, routesData) => {\n    const jobEvents = jobsData.map(job => ({\n      id: job._id,\n      title: job.title,\n      start: job.scheduledDate,\n      end: job.scheduledEndDate,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: job._id\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = routesData.map(route => ({\n      id: route._id,\n      title: route.name,\n      start: route.scheduledDate,\n      end: route.scheduledEndDate,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  }, []);\n  const handleAddRoute = async () => {\n    if (!newRouteName.trim()) {\n      setError('Please enter a route name');\n      return;\n    }\n    try {\n      const newRoute = await saveRoute({\n        name: newRouteName,\n        jobs: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setNewRouteName('');\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n\n      // Move jobs back to unassigned pool\n      const updatedJobs = jobs.map(job => job.route === routeId ? {\n        ...job,\n        route: null\n      } : job);\n      setJobs(updatedJobs);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n\n      // Update events\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    try {\n      if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n        const routeId = destination.droppableId.split('-')[1];\n        await moveJobToRoute(draggableId, routeId);\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n        const routeId = source.droppableId.split('-')[1];\n        await moveJobToPool(draggableId, routeId);\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n        const sourceRouteId = source.droppableId.split('-')[1];\n        const destRouteId = destination.droppableId.split('-')[1];\n        await moveJobBetweenRoutes(draggableId, sourceRouteId, destRouteId);\n      }\n    } catch (error) {\n      console.error('Error moving job:', error);\n      setError('Failed to move job. Please try again.');\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    const updatedJob = await updateJob(jobId, {\n      route: routeId\n    });\n    const updatedRoute = await updateRoute(routeId, {\n      $push: {\n        jobs: updatedJob._id\n      }\n    });\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\n\n    // Remove job from scheduling pool\n    setEvents(prevEvents => prevEvents.filter(event => event.extendedProps.jobId !== jobId));\n    setSuccessMessage('Job added to route successfully!');\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    const updatedJob = await updateJob(jobId, {\n      route: null\n    });\n    const updatedRoute = await updateRoute(routeId, {\n      $pull: {\n        jobs: jobId\n      }\n    });\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\n\n    // Add job back to scheduling pool\n    const jobEvent = {\n      id: updatedJob._id,\n      title: updatedJob.title,\n      start: updatedJob.scheduledDate,\n      end: updatedJob.scheduledEndDate,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: updatedJob._id\n      }\n    };\n    setEvents(prevEvents => [...prevEvents, jobEvent]);\n    setSuccessMessage('Job removed from route successfully!');\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    const updatedJob = await updateJob(jobId, {\n      route: destRouteId\n    });\n    await updateRoute(sourceRouteId, {\n      $pull: {\n        jobs: jobId\n      }\n    });\n    await updateRoute(destRouteId, {\n      $push: {\n        jobs: jobId\n      }\n    });\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n    setRoutes(prevRoutes => prevRoutes.map(route => {\n      if (route._id === sourceRouteId) {\n        return {\n          ...route,\n          jobs: route.jobs.filter(id => id !== jobId)\n        };\n      } else if (route._id === destRouteId) {\n        return {\n          ...route,\n          jobs: [...route.jobs, jobId]\n        };\n      }\n      return route;\n    }));\n    setSuccessMessage('Job moved between routes successfully!');\n  };\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n      } else if (event.extendedProps.type === 'route') {\n        await updateRoute(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n      }\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const {\n      event\n    } = info;\n    setPendingEvent(event);\n    setShowStartTimeModal(true);\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n      } else if (event.extendedProps.type === 'route') {\n        await updateRoute(event.id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n      }\n      setEvents(prevEvents => [...prevEvents, {\n        ...event,\n        start: startDate,\n        end: endDate\n      }]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const renderRoutesList = () => /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `route-${route._id}`,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"bg-gray-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2 text-white\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), route.jobs.map((jobId, index) => {\n            const job = jobs.find(j => j._id === jobId);\n            if (!job) return null;\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: job._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"bg-gray-700 p-2 mb-2 rounded shadow text-white\",\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 25\n              }, this)\n            }, job._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this);\n          }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRoute(route._id),\n            className: \"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm hover:bg-red-700\",\n            children: \"Delete Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)\n      }, route._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"jobPool\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"mt-6 bg-gray-800 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Unassigned Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), jobs.filter(job => !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"bg-gray-700 p-2 mb-2 rounded shadow text-white\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n  const renderCalendarView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:col-span-3\",\n      children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"dayGridMonth\",\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        editable: true,\n        droppable: true,\n        events: events,\n        eventDrop: handleEventDrop,\n        eventReceive: handleEventReceive,\n        eventClick: handleEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-lg mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Job Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), jobs.filter(job => !job.route).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\",\n          \"data-event\": JSON.stringify({\n            id: job._id,\n            title: job.title,\n            duration: '01:00',\n            extendedProps: {\n              type: 'job',\n              jobId: job._id\n            }\n          }),\n          children: job.title\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Route Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }, this), routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\",\n          \"data-event\": JSON.stringify({\n            id: route._id,\n            title: route.name,\n            duration: '02:00',\n            extendedProps: {\n              type: 'route',\n              routeId: route._id\n            }\n          }),\n          children: route.name\n        }, route._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n  const handleEventClick = info => {\n    setSelectedEvent(info.event);\n  };\n  const renderMapView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[600px]\",\n    children: /*#__PURE__*/_jsxDEV(CustomerMap, {\n      routes: routes,\n      jobs: jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n  const handleEventUpdate = async updatedEvent => {\n    try {\n      if (updatedEvent.extendedProps.type === 'job') {\n        await updateJob(updatedEvent.id, {\n          title: updatedEvent.title,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        });\n      } else if (updatedEvent.extendedProps.type === 'route') {\n        await updateRoute(updatedEvent.id, {\n          name: updatedEvent.title,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        });\n      }\n      setEvents(prevEvents => prevEvents.map(event => event.id === updatedEvent.id ? {\n        ...event,\n        title: updatedEvent.title,\n        start: updatedEvent.start,\n        end: updatedEvent.end\n      } : event));\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n    }\n  };\n  const handleRemoveEvent = async eventToRemove => {\n    try {\n      if (eventToRemove.extendedProps.type === 'job') {\n        await updateJob(eventToRemove.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === eventToRemove.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n      } else if (eventToRemove.extendedProps.type === 'route') {\n        await updateRoute(eventToRemove.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === eventToRemove.id ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n      }\n      setEvents(prevEvents => prevEvents.filter(event => event.id !== eventToRemove.id));\n      setSuccessMessage('Event removed successfully!');\n    } catch (error) {\n      console.error('Error removing event:', error);\n      setError('Failed to remove event. Please try again.');\n    }\n  };\n  const renderTimelineView = () => {\n    const routesPerRow = 3;\n    const rowCount = Math.ceil(routes.length / routesPerRow);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: [...Array(rowCount)].map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: routes.slice(rowIndex * routesPerRow, (rowIndex + 1) * routesPerRow).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-xl mb-2 text-white\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-bold mb-4\",\n            children: [\"Total Revenue: $\", calculateRouteTotalRevenue(route).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: route.jobs.map(jobId => {\n              var _job$customer, _job$customer2;\n              const job = jobs.find(j => j._id === jobId);\n              if (!job) return null;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-700 p-2 rounded text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Address: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", job.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Revenue: $\", job.price || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Estimated Duration: \", job.estimatedDuration || 60, \" minutes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 25\n                }, this)]\n              }, job._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this)]\n        }, route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateRouteTotalRevenue = route => {\n    return route.jobs.reduce((total, jobId) => {\n      const job = jobs.find(j => j._id === jobId);\n      return total + ((job === null || job === void 0 ? void 0 : job.price) || 0);\n    }, 0);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newRouteName,\n              onChange: e => setNewRouteName(e.target.value),\n              placeholder: \"Enter route name\",\n              className: \"mr-2 p-2 bg-gray-700 text-white rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddRoute,\n              className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n              children: \"Add New Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-blue-600 text-white' : 'text-blue-300 hover:text-blue-100'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 shadow overflow-hidden sm:rounded-lg p-6\",\n            children: [activeTab === 'routes' && renderRoutesList(), activeTab === 'calendar' && renderCalendarView(), activeTab === 'map' && renderMapView(), activeTab === 'timeline' && renderTimelineView()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"fcIMs1gBrgJ1cupJUOhTM2FEMh8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nconst EventModal = ({\n  event,\n  onClose,\n  onSave,\n  onRemove\n}) => {\n  _s2();\n  const [title, setTitle] = useState(event.title);\n  const [start, setStart] = useState(event.start);\n  const [end, setEnd] = useState(event.end);\n  const handleSave = () => {\n    onSave({\n      ...event,\n      title,\n      start,\n      end\n    });\n    onClose();\n  };\n  const handleRemove = () => {\n    onRemove(event);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Edit Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: start ? start.toISOString().slice(0, 16) : '',\n        onChange: e => setStart(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: end ? end.toISOString().slice(0, 16) : '',\n        onChange: e => setEnd(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemove,\n          className: \"px-4 py-2 bg-red-500 text-white rounded\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 599,\n    columnNumber: 5\n  }, this);\n};\n_s2(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n_c3 = EventModal;\nconst StartTimeModal = ({\n  onClose,\n  onSubmit\n}) => {\n  _s3();\n  const [startTime, setStartTime] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const [hours, minutes] = startTime.split(':');\n    const dateTime = new Date();\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    onSubmit(dateTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Set Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          className: \"w-full mb-4 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Set Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 642,\n    columnNumber: 5\n  }, this);\n};\n_s3(StartTimeModal, \"oNJ3KK/FuVmn7XQQd1o1dE13LZ8=\");\n_c4 = StartTimeModal;\nexport default BuildRoutes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");\n$RefreshReg$(_c3, \"EventModal\");\n$RefreshReg$(_c4, \"StartTimeModal\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","addJobToRoute","removeJobFromRoute","fetchCalendarEvents","createCalendarEvent","updateCalendarEvent","deleteCalendarEvent","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","newRouteName","setNewRouteName","navigate","fetchData","jobsData","routesData","Promise","all","generateEvents","err","console","jobEvents","map","job","id","_id","title","start","scheduledDate","end","scheduledEndDate","color","extendedProps","type","jobId","filter","event","routeEvents","route","name","routeId","handleAddRoute","trim","newRoute","prevRoutes","handleDeleteRoute","updatedJobs","prevEvents","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updatedJob","updatedRoute","$push","prevJobs","$pull","jobEvent","handleEventDrop","info","revert","handleEventReceive","handleStartTimeSubmit","startTime","startDate","Date","setHours","getHours","getMinutes","endDate","getTime","renderRoutesList","children","className","provided","ref","innerRef","droppableProps","fileName","_jsxFileName","lineNumber","columnNumber","index","find","j","draggableProps","dragHandleProps","placeholder","onClick","renderCalendarView","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","eventClick","handleEventClick","JSON","stringify","duration","renderMapView","handleEventUpdate","updatedEvent","handleRemoveEvent","eventToRemove","renderTimelineView","routesPerRow","rowCount","Math","ceil","length","Array","_","rowIndex","slice","calculateRouteTotalRevenue","toFixed","_job$customer","_job$customer2","customer","address","status","price","estimatedDuration","toLocaleString","reduce","total","role","value","onChange","e","target","tab","charAt","toUpperCase","EventModal","onClose","onSave","onRemove","StartTimeModal","onSubmit","_c2","_s2","setTitle","setStart","setEnd","handleSave","handleRemove","toISOString","_c3","_s3","setStartTime","handleSubmit","preventDefault","hours","minutes","dateTime","parseInt","required","_c4","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { \r\n  fetchJobs, \r\n  fetchRoutes, \r\n  saveRoute, \r\n  deleteRoute, \r\n  updateJob, \r\n  updateRoute,\r\n  addJobToRoute,\r\n  removeJobFromRoute,\r\n  fetchCalendarEvents,\r\n  createCalendarEvent,\r\n  updateCalendarEvent,\r\n  deleteCalendarEvent\r\n} from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const [newRouteName, setNewRouteName] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData);\r\n      setRoutes(routesData);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = useCallback((jobsData, routesData) => {\r\n    const jobEvents = jobsData.map(job => ({\r\n      id: job._id,\r\n      title: job.title,\r\n      start: job.scheduledDate,\r\n      end: job.scheduledEndDate,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = routesData.map(route => ({\r\n      id: route._id,\r\n      title: route.name,\r\n      start: route.scheduledDate,\r\n      end: route.scheduledEndDate,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  }, []);\r\n\r\n  const handleAddRoute = async () => {\r\n    if (!newRouteName.trim()) {\r\n      setError('Please enter a route name');\r\n      return;\r\n    }\r\n    try {\r\n      const newRoute = await saveRoute({ name: newRouteName, jobs: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setNewRouteName('');\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      \r\n      // Move jobs back to unassigned pool\r\n      const updatedJobs = jobs.map(job => \r\n        job.route === routeId ? { ...job, route: null } : job\r\n      );\r\n      \r\n      setJobs(updatedJobs);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      \r\n      // Update events\r\n      setEvents(prevEvents => prevEvents.filter(event => \r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return;\r\n\r\n    try {\r\n      if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n        const routeId = destination.droppableId.split('-')[1];\r\n        await moveJobToRoute(draggableId, routeId);\r\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n        const routeId = source.droppableId.split('-')[1];\r\n        await moveJobToPool(draggableId, routeId);\r\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n        const sourceRouteId = source.droppableId.split('-')[1];\r\n        const destRouteId = destination.droppableId.split('-')[1];\r\n        await moveJobBetweenRoutes(draggableId, sourceRouteId, destRouteId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error moving job:', error);\r\n      setError('Failed to move job. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    const updatedJob = await updateJob(jobId, { route: routeId });\r\n    const updatedRoute = await updateRoute(routeId, { $push: { jobs: updatedJob._id } });\r\n    \r\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\r\n    \r\n    // Remove job from scheduling pool\r\n    setEvents(prevEvents => prevEvents.filter(event => event.extendedProps.jobId !== jobId));\r\n    \r\n    setSuccessMessage('Job added to route successfully!');\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    const updatedJob = await updateJob(jobId, { route: null });\r\n    const updatedRoute = await updateRoute(routeId, { $pull: { jobs: jobId } });\r\n    \r\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\r\n    \r\n    // Add job back to scheduling pool\r\n    const jobEvent = {\r\n      id: updatedJob._id,\r\n      title: updatedJob.title,\r\n      start: updatedJob.scheduledDate,\r\n      end: updatedJob.scheduledEndDate,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: updatedJob._id }\r\n    };\r\n    setEvents(prevEvents => [...prevEvents, jobEvent]);\r\n    \r\n    setSuccessMessage('Job removed from route successfully!');\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n    await updateRoute(sourceRouteId, { $pull: { jobs: jobId } });\r\n    await updateRoute(destRouteId, { $push: { jobs: jobId } });\r\n    \r\n    setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => {\r\n      if (route._id === sourceRouteId) {\r\n        return { ...route, jobs: route.jobs.filter(id => id !== jobId) };\r\n      } else if (route._id === destRouteId) {\r\n        return { ...route, jobs: [...route.jobs, jobId] };\r\n      }\r\n      return route;\r\n    }));\r\n    \r\n    setSuccessMessage('Job moved between routes successfully!');\r\n  };\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, {\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n      } else if (event.extendedProps.type === 'route') {\r\n        await updateRoute(event.id, {\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n      }\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const { event } = info;\r\n    setPendingEvent(event);\r\n    setShowStartTimeModal(true);\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n      } else if (event.extendedProps.type === 'route') {\r\n        await updateRoute(event.id, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, { ...event, start: startDate, end: endDate }]);\r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const renderRoutesList = () => (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => (\r\n          <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className=\"bg-gray-800 p-4 rounded-lg\"\r\n              >\r\n                <h3 className=\"font-semibold mb-2 text-white\">{route.name}</h3>\r\n                {route.jobs.map((jobId, index) => {\r\n                  const job = jobs.find(j => j._id === jobId);\r\n                  if (!job) return null;\r\n                  return (\r\n                    <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"bg-gray-700 p-2 mb-2 rounded shadow text-white\"\r\n                        >\r\n                          {job.title}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n                <button onClick={() => handleDeleteRoute(route._id)} className=\"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm hover:bg-red-700\">\r\n                  Delete Route\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n      <Droppable droppableId=\"jobPool\">\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className=\"mt-6 bg-gray-800 p-4 rounded-lg\"\r\n          >\r\n            <h3 className=\"font-semibold mb-2 text-white\">Unassigned Jobs</h3>\r\n            {jobs.filter(job => !job.route).map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className=\"bg-gray-700 p-2 mb-2 rounded shadow text-white\"\r\n                  >\r\n                    {job.title}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n\r\n  const renderCalendarView = () => (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n      <div className=\"md:col-span-3\">\r\n        <MemoizedFullCalendar\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          headerToolbar={{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n          }}\r\n          editable={true}\r\n          droppable={true}\r\n          events={events}\r\n          eventDrop={handleEventDrop}\r\n          eventReceive={handleEventReceive}\r\n          eventClick={handleEventClick}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"bg-gray-800 p-4 rounded-lg mb-4\">\r\n          <h3 className=\"font-semibold mb-2 text-white\">Job Pool</h3>\r\n          {jobs.filter(job => !job.route).map(job => (\r\n            <div\r\n              key={job._id}\r\n              className=\"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\"\r\n              data-event={JSON.stringify({\r\n                id: job._id,\r\n                title: job.title,\r\n                duration: '01:00',\r\n                extendedProps: { type: 'job', jobId: job._id }\r\n              })}\r\n            >\r\n              {job.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n        <h3 className=\"font-semibold mb-2 text-white\">Route Pool</h3>\r\n          {routes.filter(route => !route.scheduledDate).map(route => (\r\n            <div\r\n              key={route._id}\r\n              className=\"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\"\r\n              data-event={JSON.stringify({\r\n                id: route._id,\r\n                title: route.name,\r\n                duration: '02:00',\r\n                extendedProps: { type: 'route', routeId: route._id }\r\n              })}\r\n            >\r\n              {route.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleEventClick = (info) => {\r\n    setSelectedEvent(info.event);\r\n  };\r\n\r\n  const renderMapView = () => (\r\n    <div className=\"h-[600px]\">\r\n      <CustomerMap routes={routes} jobs={jobs} />\r\n    </div>\r\n  );\r\n  const handleEventUpdate = async (updatedEvent) => {\r\n    try {\r\n      if (updatedEvent.extendedProps.type === 'job') {\r\n        await updateJob(updatedEvent.id, {\r\n          title: updatedEvent.title,\r\n          scheduledDate: updatedEvent.start,\r\n          scheduledEndDate: updatedEvent.end\r\n        });\r\n      } else if (updatedEvent.extendedProps.type === 'route') {\r\n        await updateRoute(updatedEvent.id, {\r\n          name: updatedEvent.title,\r\n          scheduledDate: updatedEvent.start,\r\n          scheduledEndDate: updatedEvent.end\r\n        });\r\n      }\r\n\r\n      setEvents(prevEvents =>\r\n        prevEvents.map(event =>\r\n          event.id === updatedEvent.id\r\n            ? { ...event, title: updatedEvent.title, start: updatedEvent.start, end: updatedEvent.end }\r\n            : event\r\n        )\r\n      );\r\n\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveEvent = async (eventToRemove) => {\r\n    try {\r\n      if (eventToRemove.extendedProps.type === 'job') {\r\n        await updateJob(eventToRemove.id, { scheduledDate: null, scheduledEndDate: null });\r\n        \r\n        setJobs(prevJobs =>\r\n          prevJobs.map(job =>\r\n            job._id === eventToRemove.id\r\n              ? { ...job, scheduledDate: null, scheduledEndDate: null }\r\n              : job\r\n          )\r\n        );\r\n      } else if (eventToRemove.extendedProps.type === 'route') {\r\n        await updateRoute(eventToRemove.id, { scheduledDate: null, scheduledEndDate: null });\r\n        \r\n        setRoutes(prevRoutes =>\r\n          prevRoutes.map(route =>\r\n            route._id === eventToRemove.id\r\n              ? { ...route, scheduledDate: null, scheduledEndDate: null }\r\n              : route\r\n          )\r\n        );\r\n      }\r\n\r\n      setEvents(prevEvents => prevEvents.filter(event => event.id !== eventToRemove.id));\r\n      setSuccessMessage('Event removed successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing event:', error);\r\n      setError('Failed to remove event. Please try again.');\r\n    }\r\n  };\r\n\r\n\r\n  const renderTimelineView = () => {\r\n    const routesPerRow = 3;\r\n    const rowCount = Math.ceil(routes.length / routesPerRow);\r\n    \r\n    return (\r\n      <div className=\"space-y-8\">\r\n        {[...Array(rowCount)].map((_, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {routes.slice(rowIndex * routesPerRow, (rowIndex + 1) * routesPerRow).map(route => (\r\n              <div key={route._id} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                <h3 className=\"font-semibold text-xl mb-2 text-white\">{route.name}</h3>\r\n                <p className=\"text-green-400 font-bold mb-4\">\r\n                  Total Revenue: ${calculateRouteTotalRevenue(route).toFixed(2)}\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  {route.jobs.map(jobId => {\r\n                    const job = jobs.find(j => j._id === jobId);\r\n                    if (!job) return null;\r\n                    return (\r\n                      <div key={job._id} className=\"bg-gray-700 p-2 rounded text-white\">\r\n                        <p className=\"font-semibold\">{job.title}</p>\r\n                        <p>Customer: {job.customer?.name}</p>\r\n                        <p>Address: {job.customer?.address}</p>\r\n                        <p>Status: {job.status}</p>\r\n                        <p>Revenue: ${job.price || 0}</p>\r\n                        <p>Estimated Duration: {job.estimatedDuration || 60} minutes</p>\r\n                        <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const calculateRouteTotalRevenue = (route) => {\r\n    return route.jobs.reduce((total, jobId) => {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      return total + (job?.price || 0);\r\n    }, 0);\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6 flex items-center\">\r\n              <input\r\n                type=\"text\"\r\n                value={newRouteName}\r\n                onChange={(e) => setNewRouteName(e.target.value)}\r\n                placeholder=\"Enter route name\"\r\n                className=\"mr-2 p-2 bg-gray-700 text-white rounded\"\r\n              />\r\n              <button\r\n                onClick={handleAddRoute}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                Add New Route\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-blue-600 text-white'\r\n                        : 'text-blue-300 hover:text-blue-100'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-800 shadow overflow-hidden sm:rounded-lg p-6\">\r\n              {activeTab === 'routes' && renderRoutesList()}\r\n              {activeTab === 'calendar' && renderCalendarView()}\r\n              {activeTab === 'map' && renderMapView()}\r\n              {activeTab === 'timeline' && renderTimelineView()}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nconst EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n  const [title, setTitle] = useState(event.title);\r\n  const [start, setStart] = useState(event.start);\r\n  const [end, setEnd] = useState(event.end);\r\n\r\n  const handleSave = () => {\r\n    onSave({ ...event, title, start, end });\r\n    onClose();\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    onRemove(event);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Edit Event</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={start ? start.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setStart(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={end ? end.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setEnd(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <div className=\"flex justify-end\">\r\n          <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n          <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n          <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StartTimeModal = ({ onClose, onSubmit }) => {\r\n  const [startTime, setStartTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const [hours, minutes] = startTime.split(':');\r\n    const dateTime = new Date();\r\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n    onSubmit(dateTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Set Start Time</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            className=\"w-full mb-4 p-2 border rounded\"\r\n            required\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"button\" onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n            <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded\">Set Time</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}