{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\RouteManager.js\",\n  _s = $RefreshSig$();\n// src/components/RouteManager.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchRoutes, deleteRoute, updateRoute } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteManager = () => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadRoutes();\n  }, []);\n  const loadRoutes = async () => {\n    try {\n      setLoading(true);\n      const fetchedRoutes = await fetchRoutes();\n      setRoutes(fetchedRoutes);\n    } catch (err) {\n      setError('Failed to load routes');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(routes.filter(route => route._id !== routeId));\n    } catch (err) {\n      setError('Failed to delete route');\n      console.error(err);\n    }\n  };\n  const handleUpdateRoute = async (routeId, updatedData) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, updatedData);\n      setRoutes(routes.map(route => route._id === routeId ? updatedRoute : route));\n    } catch (err) {\n      setError('Failed to update route');\n      console.error(err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: route.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Customers: \", route.customers.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Schedule: \", route.schedule.frequency, \" on \", getDayName(route.schedule.dayOfWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", route.assignedTo ? route.assignedTo.name : 'Unassigned']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdateRoute(route._id, {\n          name: `${route.name} (edited)`\n        }),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteRoute(route._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, route._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteManager, \"W3EiAcyipnRce5wU6wG5GQ5jT9I=\");\n_c = RouteManager;\nfunction getDayName(dayNumber) {\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  return days[dayNumber];\n}\nexport default RouteManager;\nvar _c;\n$RefreshReg$(_c, \"RouteManager\");","map":{"version":3,"names":["React","useState","useEffect","fetchRoutes","deleteRoute","updateRoute","jsxDEV","_jsxDEV","RouteManager","_s","routes","setRoutes","loading","setLoading","error","setError","loadRoutes","fetchedRoutes","err","console","handleDeleteRoute","routeId","filter","route","_id","handleUpdateRoute","updatedData","updatedRoute","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","customers","length","schedule","frequency","getDayName","dayOfWeek","assignedTo","onClick","_c","dayNumber","days","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/RouteManager.js"],"sourcesContent":["// src/components/RouteManager.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchRoutes, deleteRoute, updateRoute } from '../api';\r\n\r\nconst RouteManager = () => {\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadRoutes();\r\n  }, []);\r\n\r\n  const loadRoutes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const fetchedRoutes = await fetchRoutes();\r\n      setRoutes(fetchedRoutes);\r\n    } catch (err) {\r\n      setError('Failed to load routes');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(routes.filter(route => route._id !== routeId));\r\n    } catch (err) {\r\n      setError('Failed to delete route');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRoute = async (routeId, updatedData) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, updatedData);\r\n      setRoutes(routes.map(route => route._id === routeId ? updatedRoute : route));\r\n    } catch (err) {\r\n      setError('Failed to update route');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"route-manager\">\r\n      <h2>Route Manager</h2>\r\n      {routes.map(route => (\r\n        <div key={route._id} className=\"route-item\">\r\n          <h3>{route.name}</h3>\r\n          <p>Customers: {route.customers.length}</p>\r\n          <p>Schedule: {route.schedule.frequency} on {getDayName(route.schedule.dayOfWeek)}</p>\r\n          <p>Assigned to: {route.assignedTo ? route.assignedTo.name : 'Unassigned'}</p>\r\n          <button onClick={() => handleUpdateRoute(route._id, { name: `${route.name} (edited)` })}>\r\n            Edit\r\n          </button>\r\n          <button onClick={() => handleDeleteRoute(route._id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getDayName(dayNumber) {\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  return days[dayNumber];\r\n}\r\n\r\nexport default RouteManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}