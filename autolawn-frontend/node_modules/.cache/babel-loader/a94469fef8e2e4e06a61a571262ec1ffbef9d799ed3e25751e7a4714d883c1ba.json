{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\MapView.js\";\nimport React from 'react';\nimport CustomerMap from '../components/CustomerMap';\nimport { optimizeRoute } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  customers,\n  routes,\n  user\n}) => {\n  const handleOptimizeRoute = async routeId => {\n    try {\n      const optimizedRoute = await optimizeRoute(routeId);\n      console.log('Route optimized:', optimizedRoute);\n      // Update the routes state with the optimized route\n    } catch (error) {\n      console.error('Error optimizing route:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container h-[600px] w-full\",\n    children: /*#__PURE__*/_jsxDEV(CustomerMap, {\n      customers: customers,\n      routes: routes,\n      user: user,\n      onOptimizeRoute: handleOptimizeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","CustomerMap","optimizeRoute","jsxDEV","_jsxDEV","MapView","customers","routes","user","handleOptimizeRoute","routeId","optimizedRoute","console","log","error","className","children","onOptimizeRoute","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/MapView.js"],"sourcesContent":["import React from 'react';\r\nimport CustomerMap from '../components/CustomerMap';\r\nimport { optimizeRoute } from './api';\r\n\r\nconst MapView = ({ customers, routes, user }) => {\r\n  const handleOptimizeRoute = async (routeId) => {\r\n    try {\r\n      const optimizedRoute = await optimizeRoute(routeId);\r\n      console.log('Route optimized:', optimizedRoute);\r\n      // Update the routes state with the optimized route\r\n    } catch (error) {\r\n      console.error('Error optimizing route:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container h-[600px] w-full\">\r\n      <CustomerMap \r\n        customers={customers} \r\n        routes={routes} \r\n        user={user} \r\n        onOptimizeRoute={handleOptimizeRoute} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EAC/C,MAAMC,mBAAmB,GAAG,MAAOC,OAAO,IAAK;IAC7C,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMT,aAAa,CAACQ,OAAO,CAAC;MACnDE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,cAAc,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,gCAAgC;IAAAC,QAAA,eAC7CZ,OAAA,CAACH,WAAW;MACVK,SAAS,EAAEA,SAAU;MACrBC,MAAM,EAAEA,MAAO;MACfC,IAAI,EAAEA,IAAK;MACXS,eAAe,EAAER;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GArBIjB,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}