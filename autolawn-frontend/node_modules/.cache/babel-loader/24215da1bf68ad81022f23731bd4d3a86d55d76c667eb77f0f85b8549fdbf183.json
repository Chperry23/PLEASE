{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = jobsData.map(job => ({\n      id: job._id,\n      title: job.title,\n      start: new Date(job.scheduledDate),\n      end: new Date(job.scheduledEndDate),\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: job._id\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = routesData.flatMap(route => route.customers.map(customer => ({\n      id: `${route._id}-${customer._id}`,\n      title: `${route.name}: ${customer.name}`,\n      start: new Date(customer.scheduledDate),\n      end: new Date(customer.scheduledEndDate),\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id,\n        customerId: customer._id\n      }\n    }))).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      new FcDraggable(elem, {\n        eventData: function () {\n          const eventData = JSON.parse(elem.getAttribute('data-event'));\n          return {\n            ...eventData,\n            create: true // Add this line\n          };\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    try {\n      if (event.extendedProps && (event.extendedProps.type === 'job' || event.extendedProps.type === 'route')) {\n        await handleEventUpdate(event);\n        setSuccessMessage('Event updated successfully!');\n      } else {\n        console.error('Unrecognized event type:', event);\n        info.revert();\n      }\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const startDate = event.start || new Date();\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {\n        type: 'job'\n      }\n    };\n    if (eventData.extendedProps.type === 'job' || eventData.extendedProps.type === 'route') {\n      try {\n        await handleEventUpdate(eventData);\n        setEvents(prevEvents => [...prevEvents, eventData]);\n        setSuccessMessage('Event scheduled successfully!');\n      } catch (error) {\n        console.error('Error scheduling event:', error);\n        setError('Failed to schedule event. Please try again.');\n        info.revert();\n      }\n    } else {\n      console.error('Unrecognized event type:', eventData);\n      info.revert();\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      const job = jobs.find(j => j._id === jobId);\n      const updatedRoute = await updateRoute(routeId, {\n        $push: {\n          customers: job._id\n        }\n      });\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $push: {\n          customers: jobId\n        }\n      });\n      await updateJob(jobId, {\n        route: destRouteId\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          customers: route.customers.filter(c => c._id !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      }));\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    console.log('Event clicked:', event);\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    try {\n      if (event.extendedProps && (event.extendedProps.type === 'job' || event.extendedProps.type === 'route')) {\n        await handleEventUpdate(event);\n        setSuccessMessage('Event resized successfully!');\n      } else {\n        console.error('Unrecognized event type:', event);\n        info.revert();\n      }\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventUpdate = async event => {\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        scheduledDate: null,\n        scheduledEndDate: null\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n        ...job,\n        scheduledDate: null,\n        scheduledEndDate: null\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      const [routeId, customerId] = event.id.split('-');\n      await updateRoute(routeId, {\n        customers: [{\n          customer: customerId,\n          scheduledDate: null,\n          scheduledEndDate: null\n        }]\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n        ...route,\n        customers: route.customers.map(customer => customer._id === customerId ? {\n          ...customer,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : customer)\n      } : route));\n    }\n    setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n  };\n  const EventModal = ({\n    event,\n    onClose,\n    onSave,\n    onRemove\n  }) => {\n    _s();\n    const [title, setTitle] = useState(event.title);\n    const [start, setStart] = useState(event.start);\n    const [end, setEnd] = useState(event.end);\n    const handleSave = () => {\n      onSave({\n        ...event,\n        title,\n        start,\n        end\n      });\n      onClose();\n    };\n    const handleRemove = () => {\n      onRemove(event);\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: start ? start.toISOString().slice(0, 16) : '',\n          onChange: e => setStart(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: end ? end.toISOString().slice(0, 16) : '',\n          onChange: e => setEnd(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemove,\n            className: \"px-4 py-2 bg-red-500 text-white rounded\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const newName = prompt('Enter new route name:', route.name);\n                          if (newName) handleEditRouteName(route._id, newName);\n                        },\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Edit Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 434,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleMapView(route._id),\n                        className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                        children: \"View Map\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this), jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                      \"data-event\": JSON.stringify({\n                        id: job._id,\n                        title: job.title,\n                        duration: '01:00',\n                        extendedProps: {\n                          type: 'job',\n                          jobId: job._id\n                        }\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 504,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"external-events\",\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), jobs.filter(job => !job.scheduledDate).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-event\": JSON.stringify({\n                  id: job._id,\n                  title: job.title,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'job',\n                    jobId: job._id\n                  }\n                }),\n                children: job.title\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this), routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-event\": JSON.stringify({\n                  id: route._id,\n                  title: route.name,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'route',\n                    routeId: route._id\n                  }\n                }),\n                children: route.name\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"dayGridMonth\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              editable: true,\n              droppable: true,\n              events: events,\n              eventDrop: handleEventDrop,\n              eventResize: handleEventResize,\n              eventReceive: handleEventReceive,\n              eventClick: handleEventClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n      event: selectedEvent,\n      onClose: () => setSelectedEvent(null),\n      onSave: handleEventUpdate,\n      onRemove: handleRemoveEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s2(BuildRoutes, \"/mgOEyCPwDw1FBBjYTr4nO/qRds=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s2","_s","$RefreshSig$","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","navigate","fetchData","jobsData","routesData","Promise","all","generateEvents","err","console","jobEvents","map","job","id","_id","title","start","Date","scheduledDate","end","scheduledEndDate","color","extendedProps","type","jobId","filter","event","routeEvents","flatMap","route","customers","customer","name","routeId","customerId","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","JSON","parse","getAttribute","create","setTimeout","handleEventDrop","info","log","handleEventUpdate","revert","handleEventReceive","startDate","endDate","getTime","prevEvents","onDragEnd","result","source","destination","droppableId","startsWith","draggableId","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","find","j","updatedRoute","$push","prevJobs","prevRoutes","r","$pull","updatedJob","updatedDestRoute","c","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","length","handleDeleteRoute","handleEventClick","handleEventResize","Error","e","handleRemoveEvent","EventModal","onClose","onSave","onRemove","setTitle","setStart","setEnd","handleSave","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","toISOString","slice","onClick","role","tab","charAt","toUpperCase","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","duration","description","status","toLocaleString","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","_c2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = jobsData.map(job => ({\r\n      id: job._id,\r\n      title: job.title,\r\n      start: new Date(job.scheduledDate),\r\n      end: new Date(job.scheduledEndDate),\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = routesData.flatMap(route => \r\n      route.customers.map(customer => ({\r\n        id: `${route._id}-${customer._id}`,\r\n        title: `${route.name}: ${customer.name}`,\r\n        start: new Date(customer.scheduledDate),\r\n        end: new Date(customer.scheduledEndDate),\r\n        color: '#2196F3',\r\n        extendedProps: { type: 'route', routeId: route._id, customerId: customer._id }\r\n      }))\r\n    ).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      new FcDraggable(elem, {\r\n        eventData: function() {\r\n          const eventData = JSON.parse(elem.getAttribute('data-event'));\r\n          return {\r\n            ...eventData,\r\n            create: true // Add this line\r\n          };\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n    try {\r\n      if (event.extendedProps && (event.extendedProps.type === 'job' || event.extendedProps.type === 'route')) {\r\n        await handleEventUpdate(event);\r\n        setSuccessMessage('Event updated successfully!');\r\n      } else {\r\n        console.error('Unrecognized event type:', event);\r\n        info.revert();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const startDate = event.start || new Date();\r\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\r\n    \r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || { type: 'job' }\r\n    };\r\n  \r\n    if (eventData.extendedProps.type === 'job' || eventData.extendedProps.type === 'route') {\r\n      try {\r\n        await handleEventUpdate(eventData);\r\n        setEvents(prevEvents => [...prevEvents, eventData]);\r\n        setSuccessMessage('Event scheduled successfully!');\r\n      } catch (error) {\r\n        console.error('Error scheduling event:', error);\r\n        setError('Failed to schedule event. Please try again.');\r\n        info.revert();\r\n      }\r\n    } else {\r\n      console.error('Unrecognized event type:', eventData);\r\n      info.revert();\r\n    }\r\n  };\r\n  \r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedRoute = await updateRoute(routeId, { $push: { customers: job._id } });\r\n      await updateJob(jobId, { route: routeId });\r\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { customers: jobId } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      await updateRoute(sourceRouteId, { $pull: { customers: jobId } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, { $push: { customers: jobId } });\r\n      await updateJob(jobId, { route: destRouteId });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, customers: route.customers.filter(c => c._id !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      }));\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    console.log('Event clicked:', event);\r\n  \r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n    try {\r\n      if (event.extendedProps && (event.extendedProps.type === 'job' || event.extendedProps.type === 'route')) {\r\n        await handleEventUpdate(event);\r\n        setSuccessMessage('Event resized successfully!');\r\n      } else {\r\n        console.error('Unrecognized event type:', event);\r\n        info.revert();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n  \r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n      setJobs(prevJobs => prevJobs.map(job => \r\n        job._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      const [routeId, customerId] = event.id.split('-');\r\n      await updateRoute(routeId, {\r\n        customers: [{ customer: customerId, scheduledDate: null, scheduledEndDate: null }]\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => \r\n        route._id === routeId ? {\r\n          ...route,\r\n          customers: route.customers.map(customer => \r\n            customer._id === customerId \r\n              ? { ...customer, scheduledDate: null, scheduledEndDate: null }\r\n              : customer\r\n          )\r\n        } : route\r\n      ));\r\n    }\r\n    setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n  };\r\n\r\n  const EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n    const [title, setTitle] = useState(event.title);\r\n    const [start, setStart] = useState(event.start);\r\n    const [end, setEnd] = useState(event.end);\r\n\r\n    const handleSave = () => {\r\n      onSave({ ...event, title, start, end });\r\n      onClose();\r\n    };\r\n\r\n    const handleRemove = () => {\r\n      onRemove(event);\r\n      onClose();\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white p-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Edit Event</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={start ? start.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setStart(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={end ? end.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEnd(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n            <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n            <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n  \r\n          <div className=\"mb-6\">\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  const newName = prompt('Enter new route name:', route.name);\r\n                                  if (newName) handleEditRouteName(route._id, newName);\r\n                                }}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Edit Name\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMapView(route._id)}\r\n                                className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                              >\r\n                                View Map\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job._id }\r\n                              })}\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                              <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n  \r\n            {activeTab === 'calendar' && (\r\n              <div className=\"calendar-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Schedule</h2>\r\n                <div id=\"external-events\" className=\"mb-4\">\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Jobs</h4>\r\n                  {jobs.filter(job => !job.scheduledDate).map(job => (\r\n                    <div\r\n                      key={job._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-event={JSON.stringify({\r\n                        id: job._id,\r\n                        title: job.title,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'job', jobId: job._id }\r\n                      })}\r\n                    >\r\n                      {job.title}\r\n                    </div>\r\n                  ))}\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Routes</h4>\r\n                  {routes.filter(route => !route.scheduledDate).map(route => (\r\n                    <div\r\n                      key={route._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-event={JSON.stringify({\r\n                        id: route._id,\r\n                        title: route.name,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'route', routeId: route._id }\r\n                      })}\r\n                    >\r\n                      {route.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <MemoizedFullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  initialView=\"dayGridMonth\"\r\n                  headerToolbar={{\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                  }}\r\n                  editable={true}\r\n                  droppable={true}\r\n                  events={events}\r\n                  eventDrop={handleEventDrop}\r\n                  eventResize={handleEventResize}\r\n                  eventReceive={handleEventReceive}\r\n                  eventClick={handleEventClick}\r\n                />\r\n              </div>\r\n            )}\r\n  \r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {selectedEvent && (\r\n        <EventModal\r\n          event={selectedEvent}\r\n          onClose={() => setSelectedEvent(null)}\r\n          onSave={handleEventUpdate}\r\n          onRemove={handleRemoveEvent}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}