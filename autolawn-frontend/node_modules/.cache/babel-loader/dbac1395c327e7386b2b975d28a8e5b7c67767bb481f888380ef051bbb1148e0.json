{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute, scheduleRoute, calculateRouteTotal, fetchCalendarEvents, createCalendarEvent, updateCalendarEvent, deleteCalendarEvent } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst EventModal = ({\n  event,\n  onClose,\n  onSave,\n  onRemove\n}) => {\n  _s();\n  const [title, setTitle] = useState(event.title);\n  const [start, setStart] = useState(event.start);\n  const [end, setEnd] = useState(event.end);\n  const handleSave = () => {\n    onSave({\n      ...event,\n      title,\n      start,\n      end\n    });\n    onClose();\n  };\n  const handleRemove = () => {\n    onRemove(event);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-gray-800\",\n        children: \"Edit Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: start ? start.toISOString().slice(0, 16) : '',\n        onChange: e => setStart(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: end ? end.toISOString().slice(0, 16) : '',\n        onChange: e => setEnd(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemove,\n          className: \"px-4 py-2 bg-red-500 text-white rounded\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n_c2 = EventModal;\nconst StartTimeModal = ({\n  onClose,\n  onSubmit\n}) => {\n  _s2();\n  const [startTime, setStartTime] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const [hours, minutes] = startTime.split(':');\n    const dateTime = new Date();\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    onSubmit(dateTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-gray-800\",\n        children: \"Set Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          className: \"w-full mb-4 p-2 border rounded text-gray-800\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Set Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(StartTimeModal, \"oNJ3KK/FuVmn7XQQd1o1dE13LZ8=\");\n_c3 = StartTimeModal;\nconst BuildRoutes = () => {\n  _s3();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const navigate = useNavigate();\n  const [routeTotals, setRouteTotals] = useState({});\n  const [routeDetails, setRouteDetails] = useState({});\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData, eventsData] = await Promise.all([fetchJobs(), fetchRoutes(), fetchCalendarEvents()]);\n      setJobs(jobsData.data);\n      setRoutes(routesData.data);\n      setEvents(eventsData.data);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n      // Optionally, you can add a retry mechanism here\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = useCallback((jobsData, routesData) => {\n    const routeEvents = routesData.map(route => ({\n      id: route._id,\n      title: route.name,\n      start: route.scheduledDate,\n      end: route.scheduledEndDate,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id\n      }\n    })).filter(event => event.start && event.end);\n    setEvents(routeEvents);\n  }, []);\n  useEffect(() => {\n    generateEvents(jobs, routes);\n  }, [jobs, routes, generateEvents]);\n  const handleScheduleRoute = async routeId => {\n    const route = routes.find(r => r._id === routeId);\n    if (!route) return;\n    const startDate = new Date(); // You might want to use a date picker here\n    startDate.setHours(8, 0, 0, 0); // Start at 8 AM\n\n    let currentTime = new Date(startDate);\n    const updatedJobs = [];\n    for (const jobItem of route.jobs) {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job._id);\n      if (!job) continue;\n      const estimatedDuration = job.estimatedDuration || 60; // Default to 60 minutes if not set\n      const bufferTime = 15; // 15 minutes buffer between jobs\n\n      const scheduledDate = new Date(currentTime);\n      updatedJobs.push({\n        jobId: job._id,\n        scheduledDate: scheduledDate\n      });\n\n      // Move to next job start time\n      currentTime = new Date(currentTime.getTime() + (estimatedDuration + bufferTime) * 60000);\n    }\n    try {\n      const updatedRoute = await scheduleRoute(routeId, {\n        scheduledDate: startDate,\n        jobs: updatedJobs\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling route:', error);\n      setError('Failed to schedule route. Please try again.');\n    }\n  };\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const job = jobs.find(j => j._id === jobId);\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? {\n          ...updatedJob,\n          route: null\n        } : j);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Update route total\n      const newTotal = await calculateRouteTotal(routeId);\n      setRouteTotals(prevTotals => ({\n        ...prevTotals,\n        [routeId]: newTotal\n      }));\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const updateRouteTotals = useCallback(async () => {\n    const totals = {};\n    const details = {};\n    for (const route of routes) {\n      try {\n        const data = await calculateRouteTotal(route._id);\n        totals[route._id] = data.total;\n        details[route._id] = {\n          jobs: data.jobs,\n          name: data.routeName,\n          status: data.routeStatus\n        };\n      } catch (error) {\n        console.error(`Error calculating total for route ${route._id}:`, error);\n        totals[route._id] = 0;\n        details[route._id] = {\n          jobs: [],\n          name: 'Error',\n          status: 'Error'\n        };\n      }\n    }\n    setRouteTotals(totals);\n    setRouteDetails(details);\n  }, [routes]);\n  useEffect(() => {\n    updateRouteTotals();\n  }, [updateRouteTotals]);\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (!job) {\n      console.error('Job not found');\n      info.revert();\n      setError('Job not found. Cannot schedule.');\n      return;\n    }\n    if (job.route) {\n      console.error('This job is already assigned to a route');\n      info.revert();\n      setError('This job is already assigned to a route. Please remove it from the route before scheduling.');\n      return;\n    }\n    if (job.status === 'Canceled' || job.status === 'Completed') {\n      info.revert();\n      setError('Canceled or completed jobs cannot be scheduled.');\n      return;\n    }\n    setPendingEvent(event);\n    setShowStartTimeModal(true);\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {}\n    };\n    try {\n      await handleRouteSchedule(eventData);\n      setEvents(prevEvents => [...prevEvents, eventData]);\n      setSuccessMessage('Route scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling route:', error);\n      setError('Failed to schedule route. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const handleJobSchedule = async eventData => {\n    const jobId = eventData.extendedProps.jobId;\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n    if (job && job.route) {\n      throw new Error('This job is already assigned to a route');\n    }\n    try {\n      const updatedJob = await updateJob(jobId, {\n        scheduledDate: eventData.start,\n        scheduledEndDate: eventData.end\n      });\n      setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? {\n        ...j,\n        scheduledDate: eventData.start,\n        scheduledEndDate: eventData.end\n      } : j));\n      await createCalendarEvent({\n        ...eventData,\n        extendedProps: {\n          ...eventData.extendedProps,\n          createdBy: job.createdBy\n        }\n      });\n      return updatedJob;\n    } catch (error) {\n      console.error('Error scheduling job:', error);\n      throw error;\n    }\n  };\n  const handleRouteSchedule = async eventData => {\n    const routeId = eventData.extendedProps.routeId;\n    const existingRoute = routes.find(r => r._id === routeId);\n    if (!existingRoute) {\n      throw new Error('Route not found');\n    }\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        scheduledDate: eventData.start,\n        scheduledEndDate: eventData.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      await createCalendarEvent({\n        ...eventData,\n        extendedProps: {\n          ...eventData.extendedProps,\n          createdBy: existingRoute.createdBy\n        }\n      });\n      return updatedRoute;\n    } catch (error) {\n      console.error('Error scheduling route:', error);\n      throw error;\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const jobId = result.draggableId;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const updateLocalStorage = (jobs, routes) => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n    localStorage.setItem('routes', JSON.stringify(routes));\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      console.log('Moving job', jobId, 'to route', routeId);\n      const job = jobs.find(j => j._id === jobId);\n      console.log('Job to move:', job);\n      if (job.status === 'Canceled' || job.status === 'Completed') {\n        setError('Canceled or completed jobs cannot be added to routes.');\n        return;\n      }\n\n      // Check if the job is already in the route\n      const route = routes.find(r => r._id === routeId);\n      if (route && route.jobs.some(j => j.job._id === jobId)) {\n        setError('This job is already in the route.');\n        return;\n      }\n      const updatedRoute = await updateRoute(routeId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job.scheduledDate,\n            scheduledEndDate: job.scheduledEndDate\n          }\n        }\n      });\n      console.log('Updated route:', updatedRoute);\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      console.log('Updated job:', updatedJob);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        console.log('New routes state:', newRoutes);\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? {\n          ...updatedJob,\n          route: routeId\n        } : j);\n        console.log('New jobs state:', newJobs);\n        return newJobs;\n      });\n\n      // Update route total\n      const newTotal = await calculateRouteTotal(routeId);\n      setRouteTotals(prevTotals => ({\n        ...prevTotals,\n        [routeId]: newTotal\n      }));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      const updatedRoutes = routes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          jobs: route.jobs.filter(j => j.job !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      });\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRouteName = `New Route ${routes.length + 1}`;\n      const newRoute = await saveRoute({\n        name: newRouteName,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    if (!routeId) {\n      setError('Invalid route ID');\n      return;\n    }\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventUpdate = async event => {\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\n    }\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          title: event.title,\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          title: event.title,\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        } : job));\n      } else if (event.extendedProps.type === 'route') {\n        await updateRoute(event.extendedProps.routeId, {\n          name: event.title,\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === event.extendedProps.routeId ? {\n          ...route,\n          name: event.title,\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        } : route));\n      } else {\n        throw new Error('Unrecognized event type');\n      }\n      await updateCalendarEvent(event.id, event);\n      setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n        ...e,\n        title: event.title,\n        start: event.start,\n        end: event.end\n      } : e));\n    } catch (error) {\n      console.error('Error updating event:', error);\n      throw error;\n    }\n  };\n  const handleRemoveEvent = async event => {\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n      } else if (event.extendedProps.type === 'route') {\n        const routeId = event.extendedProps.routeId;\n        await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n      }\n      await deleteCalendarEvent(event.id);\n      setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n      setSuccessMessage('Event removed successfully!');\n    } catch (error) {\n      console.error('Error removing event:', error);\n      setError('Failed to remove event. Please try again.');\n    }\n  };\n  const renderRouteTimeline = () => {\n    const formatAddress = address => {\n      if (!address) return 'Address not available';\n      if (typeof address === 'string') return address;\n      const {\n        street,\n        city,\n        state,\n        zipCode\n      } = address;\n      return `${street || ''}, ${city || ''}, ${state || ''} ${zipCode || ''}`.trim();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => {\n        const routeTotal = routeTotals[route._id] || 0;\n        const detail = routeDetails[route._id] || {\n          jobs: [],\n          name: route.name,\n          status: route.status\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-container bg-gray-800 p-4 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2 text-white\",\n            children: detail.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-bold mb-4\",\n            children: [\"Total: $\", routeTotal.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white mb-2\",\n            children: [\"Status: \", detail.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this), !route.scheduledDate && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleScheduleRoute(route._id),\n            className: \"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: \"Schedule Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list space-y-2 max-h-96 overflow-y-auto\",\n            children: detail.jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-item bg-gray-700 rounded p-2 text-white text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold\",\n                children: job === null || job === void 0 ? void 0 : job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Customer: \", job.customerName || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address: \", formatAddress(job.customerAddress)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: $\", (job === null || job === void 0 ? void 0 : job.price) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                className: \"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 21\n              }, this)]\n            }, job === null || job === void 0 ? void 0 : job._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), detail.jobs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 italic\",\n            children: \"No jobs assigned to this route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this)]\n        }, route === null || route === void 0 ? void 0 : route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this);\n  };\n  const orderJobsByScheduledTime = route => {\n    return [...route.jobs].sort((a, b) => {\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\n      return dateA - dateB;\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 745,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 746,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route === null || route === void 0 ? void 0 : route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route === null || route === void 0 ? void 0 : route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 804,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route === null || route === void 0 ? void 0 : route.name);\n                            if (newName) handleEditRouteName(route === null || route === void 0 ? void 0 : route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 806,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 815,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 821,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 803,\n                      columnNumber: 29\n                    }, this), route.jobs && route.jobs.map((jobItem, index) => {\n                      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                      if (!job) return null;\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job === null || job === void 0 ? void 0 : job._id,\n                        index: index,\n                        children: provided => {\n                          var _job$customer;\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            className: \"bg-white p-2 mb-2 rounded shadow\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"font-semibold\",\n                              children: job === null || job === void 0 ? void 0 : job.title\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 841,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: job === null || job === void 0 ? void 0 : job.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 842,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 843,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 844,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Scheduled: \", jobItem !== null && jobItem !== void 0 && jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 845,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                              className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                              children: \"Remove from Route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 846,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 835,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 833,\n                        columnNumber: 33\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 27\n                  }, this)\n                }, route === null || route === void 0 ? void 0 : route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job === null || job === void 0 ? void 0 : job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer2;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 886,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job === null || job === void 0 ? void 0 : job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 887,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 888,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 889,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 890,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 874,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job === null || job === void 0 ? void 0 : job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 908,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 921,\n                          columnNumber: 31\n                        }, this)\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 911,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 909,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 925,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route === null || route === void 0 ? void 0 : route._id,\n                          title: route === null || route === void 0 ? void 0 : route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route === null || route === void 0 ? void 0 : route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route === null || route === void 0 ? void 0 : route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 938,\n                          columnNumber: 31\n                        }, this)\n                      }, route === null || route === void 0 ? void 0 : route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 928,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 926,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 907,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 906,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 946,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 945,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold mb-2\",\n                  children: route === null || route === void 0 ? void 0 : route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                  jobs: route.jobs.map(jobItem => {\n                    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                    return job ? {\n                      ...job,\n                      scheduledDate: jobItem.scheduledDate,\n                      scheduledEndDate: jobItem.scheduledEndDate\n                    } : null;\n                  }).filter(Boolean),\n                  route: route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 23\n                }, this)]\n              }, route === null || route === void 0 ? void 0 : route._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this), activeTab === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Timelines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 19\n              }, this), renderRouteTimeline()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 749,\n    columnNumber: 5\n  }, this);\n};\n_s3(BuildRoutes, \"dzy7rZdCMoKn5QSn8gRYfNVWPcc=\", false, function () {\n  return [useNavigate];\n});\n_c4 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"EventModal\");\n$RefreshReg$(_c3, \"StartTimeModal\");\n$RefreshReg$(_c4, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","scheduleRoute","calculateRouteTotal","fetchCalendarEvents","createCalendarEvent","updateCalendarEvent","deleteCalendarEvent","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","EventModal","event","onClose","onSave","onRemove","_s","title","setTitle","start","setStart","end","setEnd","handleSave","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toISOString","slice","Date","onClick","_c2","StartTimeModal","onSubmit","_s2","startTime","setStartTime","handleSubmit","preventDefault","hours","minutes","split","dateTime","setHours","parseInt","required","_c3","BuildRoutes","_s3","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","navigate","routeTotals","setRouteTotals","routeDetails","setRouteDetails","fetchData","jobsData","routesData","eventsData","Promise","all","data","err","console","generateEvents","routeEvents","map","route","id","_id","name","scheduledDate","scheduledEndDate","color","extendedProps","routeId","filter","handleScheduleRoute","find","r","startDate","currentTime","updatedJobs","jobItem","job","j","estimatedDuration","bufferTime","push","jobId","getTime","updatedRoute","prevRoutes","handleRemoveJobFromRoute","$pull","updatedJob","newRoutes","localStorage","setItem","JSON","stringify","prevJobs","newJobs","newTotal","prevTotals","updateRouteTotals","totals","details","total","routeName","status","routeStatus","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","parse","setTimeout","handleEventDrop","info","log","revert","handleEventUpdate","handleEventReceive","handleStartTimeSubmit","getHours","getMinutes","endDate","handleRouteSchedule","prevEvents","handleJobSchedule","Error","createdBy","existingRoute","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updateLocalStorage","some","$addToSet","updatedRoutes","updatedDestRoute","handleEditRouteName","newName","handleMapView","handleAddRoute","newRouteName","length","newRoute","customers","handleDeleteRoute","handleEventClick","handleEventResize","handleRemoveEvent","renderRouteTimeline","formatAddress","address","street","city","state","zipCode","trim","routeTotal","detail","toFixed","index","customerName","customerAddress","price","toLocaleString","orderJobsByScheduledTime","sort","a","b","dateA","dateB","role","tab","charAt","toUpperCase","provided","ref","innerRef","droppableProps","prompt","_job$customer","draggableProps","dragHandleProps","description","customer","placeholder","_job$customer2","duration","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","Boolean","_c4","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs,fetchRoutes,saveRoute,deleteRoute,updateJob,updateRoute,scheduleRoute,calculateRouteTotal,fetchCalendarEvents,createCalendarEvent,updateCalendarEvent,deleteCalendarEvent } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n  const [title, setTitle] = useState(event.title);\r\n  const [start, setStart] = useState(event.start);\r\n  const [end, setEnd] = useState(event.end);\r\n\r\n  const handleSave = () => {\r\n    onSave({ ...event, title, start, end });\r\n    onClose();\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    onRemove(event);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Edit Event</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={start ? start.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setStart(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={end ? end.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setEnd(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n        />\r\n        <div className=\"flex justify-end\">\r\n          <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\">Cancel</button>\r\n          <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n          <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StartTimeModal = ({ onClose, onSubmit }) => {\r\n  const [startTime, setStartTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const [hours, minutes] = startTime.split(':');\r\n    const dateTime = new Date();\r\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n    onSubmit(dateTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Set Start Time</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            className=\"w-full mb-4 p-2 border rounded text-gray-800\"\r\n            required\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"button\" onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\">Cancel</button>\r\n            <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded\">Set Time</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [routeTotals, setRouteTotals] = useState({});\r\n  const [routeDetails, setRouteDetails] = useState({});\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData, eventsData] = await Promise.all([\r\n        fetchJobs(),\r\n        fetchRoutes(),\r\n        fetchCalendarEvents()\r\n      ]);\r\n\r\n      setJobs(jobsData.data);\r\n      setRoutes(routesData.data);\r\n      setEvents(eventsData.data);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n      // Optionally, you can add a retry mechanism here\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = useCallback((jobsData, routesData) => {\r\n    const routeEvents = routesData.map(route => ({\r\n      id: route._id,\r\n      title: route.name,\r\n      start: route.scheduledDate,\r\n      end: route.scheduledEndDate,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents(routeEvents);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    generateEvents(jobs, routes);\r\n  }, [jobs, routes, generateEvents]);\r\n\r\n  const handleScheduleRoute = async (routeId) => {\r\n    const route = routes.find(r => r._id === routeId);\r\n    if (!route) return;\r\n  \r\n    const startDate = new Date(); // You might want to use a date picker here\r\n    startDate.setHours(8, 0, 0, 0); // Start at 8 AM\r\n  \r\n    let currentTime = new Date(startDate);\r\n    const updatedJobs = [];\r\n  \r\n    for (const jobItem of route.jobs) {\r\n      const job = jobs.find(j => j?._id === jobItem.job._id);\r\n      if (!job) continue;\r\n  \r\n      const estimatedDuration = job.estimatedDuration || 60; // Default to 60 minutes if not set\r\n      const bufferTime = 15; // 15 minutes buffer between jobs\r\n  \r\n      const scheduledDate = new Date(currentTime);\r\n      updatedJobs.push({\r\n        jobId: job._id,\r\n        scheduledDate: scheduledDate\r\n      });\r\n  \r\n      // Move to next job start time\r\n      currentTime = new Date(currentTime.getTime() + (estimatedDuration + bufferTime) * 60000);\r\n    }\r\n  \r\n    try {\r\n      const updatedRoute = await scheduleRoute(routeId, {\r\n        scheduledDate: startDate,\r\n        jobs: updatedJobs\r\n      });\r\n  \r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling route:', error);\r\n      setError('Failed to schedule route. Please try again.');\r\n    }\r\n  };\r\n\r\n\r\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? {...updatedJob, route: null} : j);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Update route total\r\n      const newTotal = await calculateRouteTotal(routeId);\r\n      setRouteTotals(prevTotals => ({\r\n        ...prevTotals,\r\n        [routeId]: newTotal\r\n      }));\r\n  \r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const updateRouteTotals = useCallback(async () => {\r\n  const totals = {};\r\n  const details = {};\r\n  for (const route of routes) {\r\n    try {\r\n      const data = await calculateRouteTotal(route._id);\r\n      totals[route._id] = data.total;\r\n      details[route._id] = {\r\n        jobs: data.jobs,\r\n        name: data.routeName,\r\n        status: data.routeStatus\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error calculating total for route ${route._id}:`, error);\r\n      totals[route._id] = 0;\r\n      details[route._id] = { jobs: [], name: 'Error', status: 'Error' };\r\n    }\r\n  }\r\n  setRouteTotals(totals);\r\n  setRouteDetails(details);\r\n}, [routes]);\r\n  \r\nuseEffect(() => {\r\n  updateRouteTotals();\r\n}, [updateRouteTotals]);\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (!job) {\r\n      console.error('Job not found');\r\n      info.revert();\r\n      setError('Job not found. Cannot schedule.');\r\n      return;\r\n    }\r\n    \r\n    if (job.route) {\r\n      console.error('This job is already assigned to a route');\r\n      info.revert();\r\n      setError('This job is already assigned to a route. Please remove it from the route before scheduling.');\r\n      return;\r\n    }\r\n  \r\n    if (job.status === 'Canceled' || job.status === 'Completed') {\r\n      info.revert();\r\n      setError('Canceled or completed jobs cannot be scheduled.');\r\n      return;\r\n    }\r\n  \r\n    setPendingEvent(event);\r\n    setShowStartTimeModal(true);\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || {}\r\n    };\r\n\r\n    try {\r\n      await handleRouteSchedule(eventData);\r\n      setEvents(prevEvents => [...prevEvents, eventData]);\r\n      setSuccessMessage('Route scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling route:', error);\r\n      setError('Failed to schedule route. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const handleJobSchedule = async (eventData) => {\r\n    const jobId = eventData.extendedProps.jobId;\r\n    const job = jobs.find(j => j?._id === jobId);\r\n  \r\n    if (job && job.route) {\r\n      throw new Error('This job is already assigned to a route');\r\n    }\r\n  \r\n    try {\r\n      const updatedJob = await updateJob(jobId, {\r\n        scheduledDate: eventData.start,\r\n        scheduledEndDate: eventData.end\r\n      });\r\n    \r\n      setJobs(prevJobs => prevJobs.map(j =>\r\n        j._id === jobId ? { ...j, scheduledDate: eventData.start, scheduledEndDate: eventData.end } : j\r\n      ));\r\n\r\n      await createCalendarEvent({\r\n        ...eventData,\r\n        extendedProps: { ...eventData.extendedProps, createdBy: job.createdBy }\r\n      });\r\n    \r\n      return updatedJob;\r\n    } catch (error) {\r\n      console.error('Error scheduling job:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleRouteSchedule = async (eventData) => {\r\n    const routeId = eventData.extendedProps.routeId;\r\n    const existingRoute = routes.find(r => r._id === routeId);\r\n\r\n    if (!existingRoute) {\r\n      throw new Error('Route not found');\r\n    }\r\n\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, {\r\n        scheduledDate: eventData.start,\r\n        scheduledEndDate: eventData.end\r\n      });\r\n\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n\r\n      await createCalendarEvent({\r\n        ...eventData,\r\n        extendedProps: { ...eventData.extendedProps, createdBy: existingRoute.createdBy }\r\n      });\r\n\r\n      return updatedRoute;\r\n    } catch (error) {\r\n      console.error('Error scheduling route:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const jobId = result.draggableId;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const updateLocalStorage = (jobs, routes) => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs));\r\n    localStorage.setItem('routes', JSON.stringify(routes));\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      console.log('Moving job', jobId, 'to route', routeId);\r\n  \r\n      const job = jobs.find(j => j._id === jobId);\r\n      console.log('Job to move:', job);\r\n  \r\n      if (job.status === 'Canceled' || job.status === 'Completed') {\r\n        setError('Canceled or completed jobs cannot be added to routes.');\r\n        return;\r\n      }\r\n  \r\n      // Check if the job is already in the route\r\n      const route = routes.find(r => r._id === routeId);\r\n      if (route && route.jobs.some(j => j.job._id === jobId)) {\r\n        setError('This job is already in the route.');\r\n        return;\r\n      }\r\n  \r\n      const updatedRoute = await updateRoute(routeId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job.scheduledDate, scheduledEndDate: job.scheduledEndDate } }\r\n      });\r\n      console.log('Updated route:', updatedRoute);\r\n  \r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n      console.log('Updated job:', updatedJob);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        console.log('New routes state:', newRoutes);\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? {...updatedJob, route: routeId} : j);\r\n        console.log('New jobs state:', newJobs);\r\n        return newJobs;\r\n      });\r\n  \r\n      // Update route total\r\n      const newTotal = await calculateRouteTotal(routeId);\r\n      setRouteTotals(prevTotals => ({\r\n        ...prevTotals,\r\n        [routeId]: newTotal\r\n      }));\r\n  \r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const job = jobs.find(j => j?._id === jobId);\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, jobs: route.jobs.filter(j => j.job !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      });\r\n\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRouteName = `New Route ${routes.length + 1}`;\r\n      const newRoute = await saveRoute({ name: newRouteName, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    if (!routeId) {\r\n      setError('Invalid route ID');\r\n      return;\r\n    }\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\r\n    }\r\n\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, {\r\n          title: event.title,\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n        setJobs(prevJobs => prevJobs.map(job =>\r\n          job?._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n        ));\r\n      } else if (event.extendedProps.type === 'route') {\r\n        await updateRoute(event.extendedProps.routeId, {\r\n          name: event.title,\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n        setRoutes(prevRoutes => prevRoutes.map(route =>\r\n          route?._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n        ));\r\n      } else {\r\n        throw new Error('Unrecognized event type');\r\n      }\r\n\r\n      await updateCalendarEvent(event.id, event);\r\n      setEvents(prevEvents =>\r\n        prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs =>\r\n          prevJobs.map(job =>\r\n            job?._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n      } else if (event.extendedProps.type === 'route') {\r\n        const routeId = event.extendedProps.routeId;\r\n        await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route =>\r\n          route?._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n      }\r\n\r\n      await deleteCalendarEvent(event.id);\r\n      setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n      setSuccessMessage('Event removed successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing event:', error);\r\n      setError('Failed to remove event. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderRouteTimeline = () => {\r\n    const formatAddress = (address) => {\r\n      if (!address) return 'Address not available';\r\n      if (typeof address === 'string') return address;\r\n      const { street, city, state, zipCode } = address;\r\n      return `${street || ''}, ${city || ''}, ${state || ''} ${zipCode || ''}`.trim();\r\n    };\r\n  \r\n    return (\r\n      <div className=\"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => {\r\n          const routeTotal = routeTotals[route._id] || 0;\r\n          const detail = routeDetails[route._id] || { jobs: [], name: route.name, status: route.status };\r\n          \r\n          return (\r\n            <div key={route?._id} className=\"route-container bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-2 text-white\">{detail.name}</h3>\r\n              <p className=\"text-green-400 font-bold mb-4\">Total: ${routeTotal.toFixed(2)}</p>\r\n              <p className=\"text-white mb-2\">Status: {detail.status}</p>\r\n              {!route.scheduledDate && (\r\n                <button\r\n                  onClick={() => handleScheduleRoute(route._id)}\r\n                  className=\"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Schedule Route\r\n                </button>\r\n              )}\r\n              <div className=\"job-list space-y-2 max-h-96 overflow-y-auto\">\r\n                {detail.jobs.map((job, index) => (\r\n                  <div\r\n                    key={job?._id}\r\n                    className=\"job-item bg-gray-700 rounded p-2 text-white text-sm\"\r\n                  >\r\n                    <p className=\"font-semibold\">{job?.title}</p>\r\n                    <p>Customer: {job.customerName || 'N/A'}</p>\r\n                    <p>Address: {formatAddress(job.customerAddress)}</p>\r\n                    <p>Price: ${job?.price || 0}</p>\r\n                    <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                    <button\r\n                      onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                      className=\"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              {(detail.jobs.length === 0) && (\r\n                <p className=\"text-gray-400 italic\">No jobs assigned to this route.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const orderJobsByScheduledTime = (route) => {\r\n    return [...route.jobs].sort((a, b) => {\r\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\r\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\r\n      return dateA - dateB;\r\n    });\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n  \r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route?._id} droppableId={`route-${route?._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route?.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route?.name);\r\n                                    if (newName) handleEditRouteName(route?._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route?._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route?._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.jobs && route.jobs.map((jobItem, index) => {\r\n                              const job = jobs.find(j => j?._id === jobItem.job);\r\n                              if (!job) return null;\r\n                              return (\r\n                                <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                    >\r\n                                      <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                      <p>{job?.description}</p>\r\n                                      <p>Status: {job?.status}</p>\r\n                                      <p>Customer: {job.customer?.name}</p>\r\n                                      <p>Scheduled: {jobItem?.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                                      <button\r\n                                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                                        className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                                      >\r\n                                        Remove from Route\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => (\r\n                          <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job?._id,\r\n                                  title: job?.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job?._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                <p>{job?.description}</p>\r\n                                <p>Status: {job?.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job?.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n\r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => (\r\n                            <div\r\n                              key={job?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job?._id,\r\n                                title: job?.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job?.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route?._id,\r\n                                title: route?.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route?.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                      <MemoizedFullCalendar\r\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                        initialView=\"dayGridMonth\"\r\n                        headerToolbar={{\r\n                          left: 'prev,next today',\r\n                          center: 'title',\r\n                          right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                        }}\r\n                        editable={true}\r\n                        droppable={true}\r\n                        events={events}\r\n                        eventDrop={handleEventDrop}\r\n                        eventResize={handleEventResize}\r\n                        eventReceive={handleEventReceive}\r\n                        eventClick={handleEventClick}\r\n                        height=\"auto\"\r\n                        aspectRatio={1.8}\r\n                        dayMaxEvents={3}\r\n                        eventTimeFormat={{\r\n                          hour: 'numeric',\r\n                          minute: '2-digit',\r\n                          meridiem: 'short'\r\n                        }}\r\n                        eventClassNames=\"rounded-md shadow-sm\"\r\n                        slotLabelFormat={{\r\n                          hour: 'numeric',\r\n                          minute: '2-digit',\r\n                          hour12: true\r\n                        }}\r\n                      />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  {routes.map(route => (\r\n                    <div key={route?._id} className=\"mb-8\">\r\n                      <h3 className=\"text-xl font-semibold mb-2\">{route?.name}</h3>\r\n                      <CustomerMap \r\n                        jobs={route.jobs.map(jobItem => {\r\n                          const job = jobs.find(j => j?._id === jobItem.job);\r\n                          return job ? { ...job, scheduledDate: jobItem.scheduledDate, scheduledEndDate: jobItem.scheduledEndDate } : null;\r\n                        }).filter(Boolean)}\r\n                        route={route}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'timeline' && (\r\n                <div className=\"timeline-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Timelines</h2>\r\n                  {renderRouteTimeline()}\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}