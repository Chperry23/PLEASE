{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Header from '../../components/Header';\nimport MapView from './MapView';\nimport CalendarView from './CalendarView';\nimport Scheduling from './Scheduling';\nimport { fetchJobs, fetchRoutes, saveRoute } from './api';\nimport { geocodeCustomers } from './utils';\nimport RouteBuilder from './RouteBuilder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [showAddressWarning, setShowAddressWarning] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      const validCustomers = jobsData.map(job => job.customer).filter(customer => customer != null);\n      const geocodedCustomers = await geocodeCustomers(validCustomers);\n      setJobs(jobsData.map((job, index) => ({\n        ...job,\n        customer: geocodedCustomers.find(geocodedCustomer => geocodedCustomer._id === job.customer._id) || job.customer\n      })));\n      setRoutes(routesData.filter(route => !route.isSaved));\n      checkIncompleteAddresses(geocodedCustomers);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const [tabLoading, setTabLoading] = useState({\n    routes: false,\n    map: false,\n    calendar: false,\n    scheduling: false\n  });\n  const switchTab = async tab => {\n    setTabLoading(prev => ({\n      ...prev,\n      [tab]: true\n    }));\n    setActiveTab(tab);\n    await new Promise(resolve => setTimeout(resolve, 500));\n    setTabLoading(prev => ({\n      ...prev,\n      [tab]: false\n    }));\n  };\n  const checkIncompleteAddresses = customers => {\n    const incompleteAddresses = customers.some(customer => !customer.address || !customer.address.street || !customer.address.city || !customer.address.state || !customer.address.zipCode);\n    setShowAddressWarning(incompleteAddresses);\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'customersList' && destination.droppableId.startsWith('route-')) {\n      moveCustomerToRoute(source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'customersList') {\n      moveCustomerToPool(parseInt(source.droppableId.split('-')[1]), source.index);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      moveCustomerBetweenRoutes(parseInt(source.droppableId.split('-')[1]), source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\n    }\n  };\n  const moveCustomerToRoute = (customerIndex, routeIndex, destinationIndex) => {\n    const customer = jobs[customerIndex].customer;\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      if (!newRoutes[routeIndex].customers.some(c => c._id === customer._id)) {\n        newRoutes[routeIndex].customers.splice(destinationIndex, 0, customer);\n        setJobs(prevJobs => prevJobs.filter(job => job.customer._id !== customer._id));\n      }\n      return newRoutes;\n    });\n  };\n  const moveCustomerToPool = (routeIndex, customerIndex) => {\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      const [customer] = newRoutes[routeIndex].customers.splice(customerIndex, 1);\n      setJobs(prevJobs => [...prevJobs, {\n        customer\n      }]);\n      return newRoutes.filter(route => route.customers.length > 0);\n    });\n  };\n  const moveCustomerBetweenRoutes = (sourceRouteIndex, sourceIndex, destRouteIndex, destIndex) => {\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      const [customer] = newRoutes[sourceRouteIndex].customers.splice(sourceIndex, 1);\n      if (!newRoutes[destRouteIndex].customers.some(c => c._id === customer._id)) {\n        newRoutes[destRouteIndex].customers.splice(destIndex, 0, customer);\n      }\n      return newRoutes.filter(route => route.customers.length > 0);\n    });\n  };\n  const addNewRoute = () => {\n    const newRouteName = `Route ${routes.length + 1}`;\n    if (!routes.some(route => route.name === newRouteName)) {\n      setRoutes(prevRoutes => [...prevRoutes, {\n        _id: Date.now().toString(),\n        name: newRouteName,\n        customers: []\n      }]);\n    } else {\n      setSuccessMessage('A route with this name already exists.');\n    }\n  };\n  const handleSaveRoute = async route => {\n    try {\n      const routeToSave = {\n        _id: route._id,\n        name: route.name,\n        customers: route.customers.map(customer => customer._id)\n      };\n      console.log('Saving route:', routeToSave);\n      const savedRoute = await saveRoute(routeToSave);\n      console.log('Saved route response:', savedRoute);\n      setRoutes(prevRoutes => prevRoutes.filter(r => r._id !== route._id));\n      setSuccessMessage('Route saved successfully!');\n    } catch (error) {\n      console.error('Error saving route:', error);\n      setSuccessMessage('Failed to save route. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-background text-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold\",\n              children: \"Route Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/route-manager'),\n              className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n              children: \"Go to Route Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), showAddressWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold\",\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some customer addresses are incomplete. This may affect the accuracy of the map view and route optimization.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('routes'),\n              className: `px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${activeTab === 'routes' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: \"Route Builder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('map'),\n              className: `px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${activeTab === 'map' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: \"Map View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('calendar'),\n              className: `px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${activeTab === 'calendar' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('scheduling'),\n              className: `px-4 py-2 rounded-tl-lg rounded-tr-lg ${activeTab === 'scheduling' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: \"Scheduling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-4 rounded-b-lg rounded-tr-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(RouteBuilder, {\n              customers: jobs.map(job => job.customer),\n              setCustomers: updatedCustomers => setJobs(jobs.map(job => ({\n                ...job,\n                customer: updatedCustomers.find(customer => customer._id === job.customer._id) || job.customer\n              }))),\n              routes: routes,\n              setRoutes: setRoutes,\n              setSuccessMessage: setSuccessMessage,\n              handleSaveRoute: handleSaveRoute\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(MapView, {\n              customers: jobs.map(job => job.customer),\n              routes: routes,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 39\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(CalendarView, {\n              routes: routes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 44\n            }, this), activeTab === 'scheduling' && /*#__PURE__*/_jsxDEV(Scheduling, {\n              routes: routes,\n              setSuccessMessage: setSuccessMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 bg-blue-100 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: [\"Your Subscription: \", user.subscriptionTier]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [user.subscriptionTier === 'Free' && 'Upgrade to access more features like route optimization and advanced analytics.', user.subscriptionTier === 'Basic' && 'Enjoy basic features. Upgrade to Pro for advanced route optimization.', user.subscriptionTier === 'Pro' && 'You have access to advanced features including route optimization.', user.subscriptionTier === 'Enterprise' && 'You have full access to all features including custom solutions.']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), user.subscriptionTier !== 'Enterprise' && /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/pricing\",\n              className: \"mt-2 inline-block bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n              children: \"Upgrade Subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"z7dCyJAk635DUDk+RePolhYScyw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useAuth","Header","MapView","CalendarView","Scheduling","fetchJobs","fetchRoutes","saveRoute","geocodeCustomers","RouteBuilder","jsxDEV","_jsxDEV","BuildRoutes","_s","user","navigate","jobs","setJobs","routes","setRoutes","loading","setLoading","error","setError","activeTab","setActiveTab","showAddressWarning","setShowAddressWarning","successMessage","setSuccessMessage","fetchData","jobsData","routesData","Promise","all","validCustomers","map","job","customer","filter","geocodedCustomers","index","find","geocodedCustomer","_id","route","isSaved","checkIncompleteAddresses","err","console","tabLoading","setTabLoading","calendar","scheduling","switchTab","tab","prev","resolve","setTimeout","customers","incompleteAddresses","some","address","street","city","state","zipCode","onDragEnd","result","source","destination","droppableId","startsWith","moveCustomerToRoute","parseInt","split","moveCustomerToPool","moveCustomerBetweenRoutes","customerIndex","routeIndex","destinationIndex","prevRoutes","newRoutes","c","splice","prevJobs","length","sourceRouteIndex","sourceIndex","destRouteIndex","destIndex","addNewRoute","newRouteName","name","Date","now","toString","handleSaveRoute","routeToSave","log","savedRoute","r","className","children","fileName","_jsxFileName","lineNumber","columnNumber","DragDropContext","onClick","role","setCustomers","updatedCustomers","subscriptionTier","to","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Header from '../../components/Header';\r\nimport MapView from './MapView';\r\nimport CalendarView from './CalendarView';\r\nimport Scheduling from './Scheduling';\r\nimport { fetchJobs, fetchRoutes, saveRoute } from './api';\r\nimport { geocodeCustomers } from './utils';\r\nimport RouteBuilder from './RouteBuilder';\r\n\r\nconst BuildRoutes = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [showAddressWarning, setShowAddressWarning] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      const validCustomers = jobsData.map(job => job.customer).filter(customer => customer != null);\r\n      const geocodedCustomers = await geocodeCustomers(validCustomers);\r\n      setJobs(jobsData.map((job, index) => ({\r\n        ...job,\r\n        customer: geocodedCustomers.find(geocodedCustomer => geocodedCustomer._id === job.customer._id) || job.customer\r\n      })));\r\n      setRoutes(routesData.filter(route => !route.isSaved));\r\n      checkIncompleteAddresses(geocodedCustomers);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const [tabLoading, setTabLoading] = useState({\r\n    routes: false,\r\n    map: false,\r\n    calendar: false,\r\n    scheduling: false,\r\n  });\r\n\r\n  const switchTab = async (tab) => {\r\n    setTabLoading((prev) => ({ ...prev, [tab]: true }));\r\n    setActiveTab(tab);\r\n    await new Promise((resolve) => setTimeout(resolve, 500));\r\n    setTabLoading((prev) => ({ ...prev, [tab]: false }));\r\n  };\r\n\r\n  const checkIncompleteAddresses = (customers) => {\r\n    const incompleteAddresses = customers.some(\r\n      (customer) =>\r\n        !customer.address ||\r\n        !customer.address.street ||\r\n        !customer.address.city ||\r\n        !customer.address.state ||\r\n        !customer.address.zipCode\r\n    );\r\n    setShowAddressWarning(incompleteAddresses);\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n    if (source.droppableId === 'customersList' && destination.droppableId.startsWith('route-')) {\r\n      moveCustomerToRoute(source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'customersList') {\r\n      moveCustomerToPool(parseInt(source.droppableId.split('-')[1]), source.index);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      moveCustomerBetweenRoutes(\r\n        parseInt(source.droppableId.split('-')[1]),\r\n        source.index,\r\n        parseInt(destination.droppableId.split('-')[1]),\r\n        destination.index\r\n      );\r\n    }\r\n  };\r\n\r\n  const moveCustomerToRoute = (customerIndex, routeIndex, destinationIndex) => {\r\n    const customer = jobs[customerIndex].customer;\r\n    setRoutes((prevRoutes) => {\r\n      const newRoutes = [...prevRoutes];\r\n      if (!newRoutes[routeIndex].customers.some((c) => c._id === customer._id)) {\r\n        newRoutes[routeIndex].customers.splice(destinationIndex, 0, customer);\r\n        setJobs((prevJobs) => prevJobs.filter((job) => job.customer._id !== customer._id));\r\n      }\r\n      return newRoutes;\r\n    });\r\n  };\r\n\r\n  const moveCustomerToPool = (routeIndex, customerIndex) => {\r\n    setRoutes((prevRoutes) => {\r\n      const newRoutes = [...prevRoutes];\r\n      const [customer] = newRoutes[routeIndex].customers.splice(customerIndex, 1);\r\n      setJobs((prevJobs) => [...prevJobs, { customer }]);\r\n      return newRoutes.filter((route) => route.customers.length > 0);\r\n    });\r\n  };\r\n\r\n  const moveCustomerBetweenRoutes = (sourceRouteIndex, sourceIndex, destRouteIndex, destIndex) => {\r\n    setRoutes((prevRoutes) => {\r\n      const newRoutes = [...prevRoutes];\r\n      const [customer] = newRoutes[sourceRouteIndex].customers.splice(sourceIndex, 1);\r\n      if (!newRoutes[destRouteIndex].customers.some((c) => c._id === customer._id)) {\r\n        newRoutes[destRouteIndex].customers.splice(destIndex, 0, customer);\r\n      }\r\n      return newRoutes.filter((route) => route.customers.length > 0);\r\n    });\r\n  };\r\n\r\n  const addNewRoute = () => {\r\n    const newRouteName = `Route ${routes.length + 1}`;\r\n    if (!routes.some((route) => route.name === newRouteName)) {\r\n      setRoutes((prevRoutes) => [\r\n        ...prevRoutes,\r\n        { _id: Date.now().toString(), name: newRouteName, customers: [] },\r\n      ]);\r\n    } else {\r\n      setSuccessMessage('A route with this name already exists.');\r\n    }\r\n  };\r\n\r\n  const handleSaveRoute = async (route) => {\r\n    try {\r\n      const routeToSave = {\r\n        _id: route._id,\r\n        name: route.name,\r\n        customers: route.customers.map((customer) => customer._id),\r\n      };\r\n      console.log('Saving route:', routeToSave);\r\n      const savedRoute = await saveRoute(routeToSave);\r\n      console.log('Saved route response:', savedRoute);\r\n      setRoutes((prevRoutes) => prevRoutes.filter((r) => r._id !== route._id));\r\n      setSuccessMessage('Route saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving route:', error);\r\n      setSuccessMessage('Failed to save route. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"min-h-screen bg-background text-gray-800\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h1 className=\"text-2xl font-bold\">Route Management</h1>\r\n              <button\r\n                onClick={() => navigate('/route-manager')}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n              >\r\n                Go to Route Manager\r\n              </button>\r\n            </div>\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n            {showAddressWarning && (\r\n              <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\" role=\"alert\">\r\n                <p className=\"font-bold\">Warning</p>\r\n                <p>\r\n                  Some customer addresses are incomplete. This may affect the accuracy of the map view and route\r\n                  optimization.\r\n                </p>\r\n              </div>\r\n            )}\r\n            <div className=\"mb-4\">\r\n              <button\r\n                onClick={() => setActiveTab('routes')}\r\n                className={`px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${\r\n                  activeTab === 'routes' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\r\n                }`}\r\n              >\r\n                Route Builder\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('map')}\r\n                className={`px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${\r\n                  activeTab === 'map' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\r\n                }`}\r\n              >\r\n                Map View\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('calendar')}\r\n                className={`px-4 py-2 rounded-tl-lg rounded-tr-lg mr-1 ${\r\n                  activeTab === 'calendar' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\r\n                }`}\r\n              >\r\n                Calendar\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('scheduling')}\r\n                className={`px-4 py-2 rounded-tl-lg rounded-tr-lg ${\r\n                  activeTab === 'scheduling' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\r\n                }`}\r\n              >\r\n                Scheduling\r\n              </button>\r\n            </div>\r\n            <div className=\"bg-surface p-4 rounded-b-lg rounded-tr-lg\">\r\n              {activeTab === 'routes' && (\r\n                <RouteBuilder\r\n                  customers={jobs.map(job => job.customer)}\r\n                  setCustomers={(updatedCustomers) => setJobs(jobs.map(job => ({\r\n                    ...job,\r\n                    customer: updatedCustomers.find(customer => customer._id === job.customer._id) || job.customer\r\n                  })))}\r\n                  routes={routes}\r\n                  setRoutes={setRoutes}\r\n                  setSuccessMessage={setSuccessMessage}\r\n                  handleSaveRoute={handleSaveRoute}\r\n                />\r\n              )}\r\n              {activeTab === 'map' && <MapView customers={jobs.map(job => job.customer)} routes={routes} user={user} />}\r\n              {activeTab === 'calendar' && <CalendarView routes={routes} />}\r\n              {activeTab === 'scheduling' && <Scheduling routes={routes} setSuccessMessage={setSuccessMessage} />}\r\n            </div>\r\n            <div className=\"mt-6 bg-blue-100 p-4 rounded-lg\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">Your Subscription: {user.subscriptionTier}</h3>\r\n              <p>\r\n                {user.subscriptionTier === 'Free' && 'Upgrade to access more features like route optimization and advanced analytics.'}\r\n                {user.subscriptionTier === 'Basic' && 'Enjoy basic features. Upgrade to Pro for advanced route optimization.'}\r\n                {user.subscriptionTier === 'Pro' && 'You have access to advanced features including route optimization.'}\r\n                {user.subscriptionTier === 'Enterprise' && 'You have full access to all features including custom solutions.'}\r\n              </p>\r\n              {user.subscriptionTier !== 'Enterprise' && (\r\n                <Link to=\"/pricing\" className=\"mt-2 inline-block bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\">\r\n                  Upgrade Subscription\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}