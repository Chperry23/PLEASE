{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Header from '../components/Header';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState({\n    Monday: [[]],\n    Tuesday: [[]],\n    Wednesday: [[]],\n    Thursday: [[]],\n    Friday: [[]],\n    Saturday: [[]],\n    Sunday: [[]]\n  });\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('Monday');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [visibleRoutes, setVisibleRoutes] = useState({\n    start: 0,\n    end: 3\n  });\n  const fetchRouteAndJobs = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [routesResponse, jobsResponse] = await Promise.all([axios.get(`${API_BASE_URL}/routes`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }), axios.get(`${API_BASE_URL}/routes/jobs/available`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })]);\n      const fetchedRoutes = routesResponse.data.reduce((acc, route) => {\n        acc[route.day] = [route.jobs]; // Wrap route.jobs in an array\n        return acc;\n      }, {\n        Monday: [[]],\n        Tuesday: [[]],\n        Wednesday: [[]],\n        Thursday: [[]],\n        Friday: [[]],\n        Saturday: [[]],\n        Sunday: [[]]\n      });\n      setRoutes(fetchedRoutes);\n      setJobPool(jobsResponse.data || []);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load routes and jobs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRouteAndJobs();\n  }, [fetchRouteAndJobs]);\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceList = source.droppableId.split('-')[0];\n    const destList = destination.droppableId.split('-')[0];\n    const sourceIndex = parseInt(source.droppableId.split('-')[1]);\n    const destIndex = parseInt(destination.droppableId.split('-')[1]);\n    let updatedRoutes = {\n      ...routes\n    };\n    let updatedJobPool = [...jobPool];\n    let movedJob;\n    if (sourceList === 'jobPool') {\n      [movedJob] = updatedJobPool.splice(source.index, 1);\n      updatedRoutes[destList][destIndex].splice(destination.index, 0, movedJob);\n    } else if (destList === 'jobPool') {\n      [movedJob] = updatedRoutes[sourceList][sourceIndex].splice(source.index, 1);\n      updatedJobPool.splice(destination.index, 0, movedJob);\n    } else {\n      [movedJob] = updatedRoutes[sourceList][sourceIndex].splice(source.index, 1);\n      updatedRoutes[destList][destIndex].splice(destination.index, 0, movedJob);\n    }\n    setRoutes(updatedRoutes);\n    setJobPool(updatedJobPool);\n    try {\n      if (destList !== 'jobPool') {\n        await axios.put(`${API_BASE_URL}/routes/${destList}`, {\n          jobs: updatedRoutes[destList][destIndex].map(job => job._id)\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      if (sourceList !== 'jobPool') {\n        await axios.put(`${API_BASE_URL}/routes/${sourceList}`, {\n          jobs: updatedRoutes[sourceList][sourceIndex].map(job => job._id)\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error updating route:', error);\n      setError('Failed to update route. Please try again.');\n      fetchRouteAndJobs(); // Revert changes if update fails\n    }\n  };\n  const handleCompleteRoute = async routeIndex => {\n    try {\n      await axios.post(`${API_BASE_URL}/routes/${selectedDay}/${routeIndex}/complete`, null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      fetchRouteAndJobs(); // Refresh the data after completing the route\n    } catch (error) {\n      console.error('Error completing route:', error);\n      setError('Failed to complete route. Please try again.');\n    }\n  };\n  const addNewRoute = () => {\n    setRoutes(prevRoutes => ({\n      ...prevRoutes,\n      [selectedDay]: [...prevRoutes[selectedDay], []]\n    }));\n  };\n  const deleteRoute = index => {\n    setRoutes(prevRoutes => ({\n      ...prevRoutes,\n      [selectedDay]: prevRoutes[selectedDay].filter((_, i) => i !== index)\n    }));\n  };\n  const cycleRoutes = direction => {\n    const totalRoutes = routes[selectedDay].length;\n    setVisibleRoutes(prev => {\n      const newStart = (prev.start + direction + totalRoutes) % totalRoutes;\n      return {\n        start: newStart,\n        end: Math.min(newStart + 3, totalRoutes)\n      };\n    });\n  };\n  const renderJobList = (listId, jobs, isRoute = false, routeIndex = 0) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: `${listId}-${routeIndex}`,\n    direction: isRoute ? \"vertical\" : \"horizontal\",\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      className: `bg-gray-800 p-4 rounded-lg shadow-lg ${isRoute ? 'h-[400px] overflow-y-auto' : 'overflow-x-auto'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-white\",\n        children: isRoute ? `Route ${routeIndex + 1}` : 'Job Pool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${isRoute ? 'space-y-2' : 'flex flex-wrap gap-2'}`,\n        children: renderJobs(jobs, isRoute)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n  const renderJobs = (jobs, isRoute) => Array.isArray(jobs) && jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: job._id,\n    index: index,\n    children: provided => {\n      var _job$customer, _job$location;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: `p-2 rounded-md shadow-md transition-colors duration-200 \n              ${job.isRecurring ? 'bg-green-700 hover:bg-green-600' : 'bg-blue-700 hover:bg-blue-600'}\n              ${isRoute ? 'text-xs' : 'text-sm'} ${isRoute ? 'w-full' : 'w-48'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: (_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this);\n    }\n  }, job._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 7\n  }, this));\n  const chunkArray = (array, size) => {\n    const chunked = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunked.push(array.slice(i, i + size));\n    }\n    return chunked;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-white\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-red-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRouteAndJobs,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-blue-600 transition-colors duration-200\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Build Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDay(prev => {\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n            const currentIndex = days.indexOf(prev);\n            return days[(currentIndex - 1 + 7) % 7];\n          }),\n          className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDay(prev => {\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n            const currentIndex = days.indexOf(prev);\n            return days[(currentIndex + 1) % 7];\n          }),\n          className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cycleRoutes(-1),\n              className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewRoute,\n              className: \"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors duration-200 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n                className: \"h-5 w-5 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), \"Add Route\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cycleRoutes(1),\n              className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-4\",\n            children: routes[selectedDay].slice(visibleRoutes.start, visibleRoutes.end).map((route, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-bold\",\n                  children: [\"Route \", visibleRoutes.start + index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleCompleteRoute(visibleRoutes.start + index),\n                    className: \"bg-green-500 text-white px-3 py-1 rounded-md hover:bg-green-600 transition-colors duration-200 mr-2\",\n                    children: \"Complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteRoute(visibleRoutes.start + index),\n                    className: \"bg-red-500 text-white p-1 rounded-md hover:bg-red-600 transition-colors duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                      className: \"h-5 w-5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), renderJobList(selectedDay, route, true, visibleRoutes.start + index)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Job Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), renderJobList('jobPool', jobPool)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"CBK+fmeNqK3ys3YGLyB/E/+kKM8=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","DragDropContext","Droppable","Draggable","Header","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","jsxDEV","_jsxDEV","API_BASE_URL","BuildRoutes","_s","routes","setRoutes","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","visibleRoutes","setVisibleRoutes","start","end","fetchRouteAndJobs","routesResponse","jobsResponse","Promise","all","get","headers","Authorization","localStorage","getItem","fetchedRoutes","data","reduce","acc","route","day","jobs","console","onDragEnd","result","source","destination","sourceList","droppableId","split","destList","sourceIndex","parseInt","destIndex","updatedRoutes","updatedJobPool","movedJob","splice","index","put","map","job","_id","handleCompleteRoute","routeIndex","post","addNewRoute","prevRoutes","deleteRoute","filter","_","i","cycleRoutes","direction","totalRoutes","length","prev","newStart","Math","min","renderJobList","listId","isRoute","children","provided","droppableProps","ref","innerRef","className","fileName","_jsxFileName","lineNumber","columnNumber","renderJobs","placeholder","Array","isArray","draggableId","_job$customer","_job$location","draggableProps","dragHandleProps","isRecurring","title","customer","name","location","address","price","chunkArray","array","size","chunked","push","slice","onClick","days","currentIndex","indexOf","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Header from '../components/Header';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState({\r\n    Monday: [[]],\r\n    Tuesday: [[]],\r\n    Wednesday: [[]],\r\n    Thursday: [[]],\r\n    Friday: [[]],\r\n    Saturday: [[]],\r\n    Sunday: [[]],\r\n  });\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('Monday');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutes, setVisibleRoutes] = useState({ start: 0, end: 3 });\r\n\r\n  const fetchRouteAndJobs = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [routesResponse, jobsResponse] = await Promise.all([\r\n        axios.get(`${API_BASE_URL}/routes`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        }),\r\n        axios.get(`${API_BASE_URL}/routes/jobs/available`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        })\r\n      ]);\r\n\r\n      const fetchedRoutes = routesResponse.data.reduce((acc, route) => {\r\n        acc[route.day] = [route.jobs]; // Wrap route.jobs in an array\r\n        return acc;\r\n      }, {\r\n        Monday: [[]],\r\n        Tuesday: [[]],\r\n        Wednesday: [[]],\r\n        Thursday: [[]],\r\n        Friday: [[]],\r\n        Saturday: [[]],\r\n        Sunday: [[]],\r\n      });\r\n\r\n      setRoutes(fetchedRoutes);\r\n      setJobPool(jobsResponse.data || []);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Failed to load routes and jobs. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchRouteAndJobs();\r\n  }, [fetchRouteAndJobs]);\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceList = source.droppableId.split('-')[0];\r\n    const destList = destination.droppableId.split('-')[0];\r\n    const sourceIndex = parseInt(source.droppableId.split('-')[1]);\r\n    const destIndex = parseInt(destination.droppableId.split('-')[1]);\r\n\r\n    let updatedRoutes = { ...routes };\r\n    let updatedJobPool = [...jobPool];\r\n    let movedJob;\r\n\r\n    if (sourceList === 'jobPool') {\r\n      [movedJob] = updatedJobPool.splice(source.index, 1);\r\n      updatedRoutes[destList][destIndex].splice(destination.index, 0, movedJob);\r\n    } else if (destList === 'jobPool') {\r\n      [movedJob] = updatedRoutes[sourceList][sourceIndex].splice(source.index, 1);\r\n      updatedJobPool.splice(destination.index, 0, movedJob);\r\n    } else {\r\n      [movedJob] = updatedRoutes[sourceList][sourceIndex].splice(source.index, 1);\r\n      updatedRoutes[destList][destIndex].splice(destination.index, 0, movedJob);\r\n    }\r\n\r\n    setRoutes(updatedRoutes);\r\n    setJobPool(updatedJobPool);\r\n\r\n    try {\r\n      if (destList !== 'jobPool') {\r\n        await axios.put(`${API_BASE_URL}/routes/${destList}`, { jobs: updatedRoutes[destList][destIndex].map(job => job._id) }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n      }\r\n      if (sourceList !== 'jobPool') {\r\n        await axios.put(`${API_BASE_URL}/routes/${sourceList}`, { jobs: updatedRoutes[sourceList][sourceIndex].map(job => job._id) }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating route:', error);\r\n      setError('Failed to update route. Please try again.');\r\n      fetchRouteAndJobs(); // Revert changes if update fails\r\n    }\r\n  };\r\n\r\n  const handleCompleteRoute = async (routeIndex) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/routes/${selectedDay}/${routeIndex}/complete`, null, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      fetchRouteAndJobs(); // Refresh the data after completing the route\r\n    } catch (error) {\r\n      console.error('Error completing route:', error);\r\n      setError('Failed to complete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const addNewRoute = () => {\r\n    setRoutes(prevRoutes => ({\r\n      ...prevRoutes,\r\n      [selectedDay]: [...prevRoutes[selectedDay], []]\r\n    }));\r\n  };\r\n\r\n  const deleteRoute = (index) => {\r\n    setRoutes(prevRoutes => ({\r\n      ...prevRoutes,\r\n      [selectedDay]: prevRoutes[selectedDay].filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const cycleRoutes = (direction) => {\r\n    const totalRoutes = routes[selectedDay].length;\r\n    setVisibleRoutes(prev => {\r\n      const newStart = (prev.start + direction + totalRoutes) % totalRoutes;\r\n      return {\r\n        start: newStart,\r\n        end: Math.min(newStart + 3, totalRoutes)\r\n      };\r\n    });\r\n  };\r\n\r\n  const renderJobList = (listId, jobs, isRoute = false, routeIndex = 0) => (\r\n    <Droppable droppableId={`${listId}-${routeIndex}`} direction={isRoute ? \"vertical\" : \"horizontal\"}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className={`bg-gray-800 p-4 rounded-lg shadow-lg ${isRoute ? 'h-[400px] overflow-y-auto' : 'overflow-x-auto'}`}\r\n        >\r\n          <h2 className=\"text-xl font-bold mb-4 text-white\">\r\n            {isRoute ? `Route ${routeIndex + 1}` : 'Job Pool'}\r\n          </h2>\r\n          <div className={`${isRoute ? 'space-y-2' : 'flex flex-wrap gap-2'}`}>\r\n            {renderJobs(jobs, isRoute)}\r\n          </div>\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  const renderJobs = (jobs, isRoute) => (\r\n    Array.isArray(jobs) && jobs.map((job, index) => (\r\n      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className={`p-2 rounded-md shadow-md transition-colors duration-200 \r\n              ${job.isRecurring ? 'bg-green-700 hover:bg-green-600' : 'bg-blue-700 hover:bg-blue-600'}\r\n              ${isRoute ? 'text-xs' : 'text-sm'} ${isRoute ? 'w-full' : 'w-48'}`}\r\n          >\r\n            <p className=\"font-bold text-white\">{job.title}</p>\r\n            <p className=\"text-gray-300\">{job.customer?.name}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.price}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    ))\r\n  );\r\n\r\n  const chunkArray = (array, size) => {\r\n    const chunked = [];\r\n    for (let i = 0; i < array.length; i += size) {\r\n      chunked.push(array.slice(i, i + size));\r\n    }\r\n    return chunked;\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-8 text-white\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center mt-8 text-red-500\">\r\n        <p>{error}</p>\r\n        <button\r\n          onClick={fetchRouteAndJobs}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-blue-600 transition-colors duration-200\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Build Routes</h1>\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <button onClick={() => setSelectedDay(prev => {\r\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n            const currentIndex = days.indexOf(prev);\r\n            return days[(currentIndex - 1 + 7) % 7];\r\n          })} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n            <ChevronLeftIcon className=\"h-5 w-5\" />\r\n          </button>\r\n          <h2 className=\"text-2xl font-semibold\">{selectedDay}</h2>\r\n          <button onClick={() => setSelectedDay(prev => {\r\n            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n            const currentIndex = days.indexOf(prev);\r\n            return days[(currentIndex + 1) % 7];\r\n          })} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n            <ChevronRightIcon className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"mb-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <button onClick={() => cycleRoutes(-1)} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n                <ChevronLeftIcon className=\"h-5 w-5\" />\r\n              </button>\r\n              <button onClick={addNewRoute} className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors duration-200 flex items-center\">\r\n                <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n                Add Route\r\n              </button>\r\n              <button onClick={() => cycleRoutes(1)} className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition-colors duration-200\">\r\n                <ChevronRightIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n              {routes[selectedDay].slice(visibleRoutes.start, visibleRoutes.end).map((route, index) => (\r\n                <div key={index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3 className=\"text-xl font-bold\">Route {visibleRoutes.start + index + 1}</h3>\r\n                    <div>\r\n                      <button\r\n                        onClick={() => handleCompleteRoute(visibleRoutes.start + index)}\r\n                        className=\"bg-green-500 text-white px-3 py-1 rounded-md hover:bg-green-600 transition-colors duration-200 mr-2\"\r\n                      >\r\n                        Complete\r\n                      </button>\r\n                      <button\r\n                        onClick={() => deleteRoute(visibleRoutes.start + index)}\r\n                        className=\"bg-red-500 text-white p-1 rounded-md hover:bg-red-600 transition-colors duration-200\"\r\n                      >\r\n                        <TrashIcon className=\"h-5 w-5\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {renderJobList(selectedDay, route, true, visibleRoutes.start + index)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <h3 className=\"text-xl font-bold mb-4\">Job Pool</h3>\r\n            {renderJobList('jobPool', jobPool)}\r\n          </div>\r\n        </DragDropContext>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}