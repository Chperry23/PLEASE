{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob, fetchCalendarEvents } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      console.log('Fetched jobs:', jobsData);\n      console.log('Fetched routes:', routesData);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      await loadEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const loadEvents = async (jobsData, routesData) => {\n    try {\n      const calendarEvents = await fetchCalendarEvents();\n      const jobEvents = jobsData.map(job => ({\n        id: job._id,\n        title: job.title,\n        start: job.scheduledDate || new Date(),\n        end: job.scheduledEndDate || new Date(new Date().getTime() + 60 * 60 * 1000),\n        color: '#4CAF50',\n        extendedProps: {\n          type: 'job',\n          jobId: job._id\n        }\n      }));\n      const routeEvents = routesData.flatMap(route => route.customers.map(customer => ({\n        id: `${route._id}-${customer._id}`,\n        title: `${route.name}: ${customer.name}`,\n        start: customer.scheduledDate || new Date(),\n        end: customer.scheduledEndDate || new Date(new Date().getTime() + 60 * 60 * 1000),\n        color: '#2196F3',\n        extendedProps: {\n          type: 'route',\n          routeId: route._id,\n          customerId: customer._id\n        }\n      })));\n      setEvents([...calendarEvents, ...jobEvents, ...routeEvents]);\n    } catch (error) {\n      console.error('Error loading events:', error);\n      setError('Failed to load calendar events. Please try refreshing the page.');\n    }\n  };\n  const initializeExternalEvents = () => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    if (draggableElems.length === 0) {\n      console.warn('No draggable elements found');\n      return;\n    }\n    draggableElems.forEach(elem => {\n      new FcDraggable(elem, {\n        eventData: function () {\n          return {\n            id: elem.getAttribute('data-id'),\n            title: elem.innerText,\n            duration: '01:00',\n            extendedProps: JSON.parse(elem.getAttribute('data-event')).extendedProps\n          };\n        }\n      });\n    });\n    console.log('Draggable elements initialized:', draggableElems.length);\n  };\n  useEffect(() => {\n    setTimeout(initializeExternalEvents, 1000); // Add a delay to ensure elements are rendered\n  }, [jobs, routes]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    try {\n      const updatedEvent = await updateCalendarEvent({\n        id: event.id,\n        start: event.start,\n        end: event.end\n      });\n      setEvents(prevEvents => prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e));\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n      } else if (event.extendedProps.type === 'route') {\n        const [routeId, customerId] = event.id.split('-');\n        const updatedRoutes = routes.map(route => {\n          if (route._id === routeId) {\n            return {\n              ...route,\n              customers: route.customers.map(customer => customer._id === customerId ? {\n                ...customer,\n                scheduledDate: event.start,\n                scheduledEndDate: event.end\n              } : customer)\n            };\n          }\n          return route;\n        });\n        setRoutes(updatedRoutes);\n        await saveRoute(updatedRoutes.find(r => r._id === routeId));\n      }\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const id = event.id;\n    const startDate = event.start;\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Default 1-hour duration\n\n    try {\n      if (event.extendedProps.type === 'job') {\n        console.log('Scheduling job:', id);\n        const updatedJob = await updateJob(id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === id ? {\n          ...job,\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        } : job));\n        console.log('Job scheduled:', updatedJob);\n      } else if (event.extendedProps.type === 'route') {\n        console.log('Scheduling route customer:', event.extendedProps);\n        const routeId = event.extendedProps.routeId;\n        const customerId = event.extendedProps.customerId;\n        const updatedRoute = await updateRoute(routeId, {\n          customers: [{\n            customer: customerId,\n            scheduledDate: startDate,\n            scheduledEndDate: endDate\n          }]\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n          ...route,\n          customers: route.customers.map(customer => customer._id === customerId ? {\n            ...customer,\n            scheduledDate: startDate,\n            scheduledEndDate: endDate\n          } : customer)\n        } : route));\n        console.log('Route customer scheduled:', updatedRoute);\n      }\n      setEvents(prevEvents => [...prevEvents, {\n        id: id,\n        title: event.title,\n        start: startDate,\n        end: endDate,\n        color: event.extendedProps.type === 'job' ? '#4CAF50' : '#2196F3',\n        extendedProps: event.extendedProps\n      }]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n      info.revert();\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    const job = jobs.find(j => j._id === jobId);\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n      ...route,\n      customers: [...route.customers, job]\n    } : route));\n    await updateJobRoute(jobId, routeId);\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    const route = routes.find(r => r._id === routeId);\n    const job = route.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? {\n      ...r,\n      customers: r.customers.filter(j => j._id !== jobId)\n    } : r));\n    setJobs(prevJobs => [...prevJobs, job]);\n    await updateJobRoute(jobId, null);\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\n    const job = sourceRoute.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(route => {\n      if (route._id === sourceRouteId) {\n        return {\n          ...route,\n          customers: route.customers.filter(j => j._id !== jobId)\n        };\n      }\n      if (route._id === destRouteId) {\n        return {\n          ...route,\n          customers: [...route.customers, job]\n        };\n      }\n      return route;\n    }));\n    await updateJobRoute(jobId, destRouteId);\n  };\n  const updateJobRoute = async (jobId, routeId) => {\n    try {\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setSuccessMessage('Job updated successfully!');\n    } catch (error) {\n      console.error('Error updating job route:', error);\n      setError('Failed to update job route. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await saveRoute({\n        ...routes.find(r => r._id === routeId),\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    alert(`Event: ${event.title}\\nStart: ${event.start}\\nEnd: ${event.end}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes([...routes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(routes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setActiveTab(e.target.value),\n              className: \"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"routes\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"jobs\",\n                children: \"Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"calendar\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"map\",\n                children: \"Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'jobs', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const newName = prompt('Enter new route name:', route.name);\n                          if (newName) handleEditRouteName(route._id, newName);\n                        },\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Edit Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleMapView(route._id),\n                        className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                        children: \"View Map\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                      \"data-id\": job._id,\n                      \"data-event\": JSON.stringify({\n                        id: job._id,\n                        title: job.title,\n                        duration: '01:00',\n                        extendedProps: {\n                          type: 'job',\n                          jobId: job._id\n                        }\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), activeTab === 'jobs' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobs-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: jobs.map(job => {\n                var _job$customer2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold\",\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: job.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Status: \", job.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 23\n                  }, this)]\n                }, job._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"external-events\",\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-id\": job._id,\n                \"data-event\": JSON.stringify({\n                  id: job._id,\n                  title: job.title,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'job',\n                    jobId: job._id\n                  }\n                }),\n                children: job.title\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Draggable Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\",\n                \"data-id\": route._id,\n                \"data-event\": JSON.stringify({\n                  id: route._id,\n                  title: route.name,\n                  duration: '01:00',\n                  extendedProps: {\n                    type: 'route',\n                    routeId: route._id\n                  }\n                }),\n                children: route.name\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"dayGridMonth\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              editable: true,\n              droppable: true,\n              events: events,\n              eventDrop: handleEventDrop,\n              eventReceive: handleEventReceive,\n              eventClick: handleEventClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"HVF/HEpmh9MbssAPE2lyokvaywY=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateCalendarEvent","updateJob","fetchCalendarEvents","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","fetchData","jobsData","routesData","Promise","all","console","log","loadEvents","err","calendarEvents","jobEvents","map","job","id","_id","title","start","scheduledDate","Date","end","scheduledEndDate","getTime","color","extendedProps","type","jobId","routeEvents","flatMap","route","customers","customer","name","routeId","customerId","initializeExternalEvents","draggableElems","document","querySelectorAll","length","warn","forEach","elem","eventData","getAttribute","innerText","duration","JSON","parse","setTimeout","handleEventDrop","info","event","updatedEvent","prevEvents","e","split","updatedRoutes","find","r","revert","handleEventReceive","startDate","endDate","updatedJob","prevJobs","updatedRoute","updateRoute","prevRoutes","onDragEnd","result","source","destination","droppableId","startsWith","draggableId","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","j","filter","updateJobRoute","sourceRoute","handleEditRouteName","newName","handleMapView","handleEventClick","alert","handleAddRoute","newRoute","handleDeleteRoute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onChange","target","value","tab","onClick","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","description","status","toLocaleString","_job$customer2","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","eventClick","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateCalendarEvent, updateJob, fetchCalendarEvents } from './api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      console.log('Fetched jobs:', jobsData);\r\n      console.log('Fetched routes:', routesData);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      await loadEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const loadEvents = async (jobsData, routesData) => {\r\n    try {\r\n      const calendarEvents = await fetchCalendarEvents();\r\n      const jobEvents = jobsData.map(job => ({\r\n        id: job._id,\r\n        title: job.title,\r\n        start: job.scheduledDate || new Date(),\r\n        end: job.scheduledEndDate || new Date(new Date().getTime() + 60*60*1000),\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'job', jobId: job._id }\r\n      }));\r\n      const routeEvents = routesData.flatMap(route => \r\n        route.customers.map(customer => ({\r\n          id: `${route._id}-${customer._id}`,\r\n          title: `${route.name}: ${customer.name}`,\r\n          start: customer.scheduledDate || new Date(),\r\n          end: customer.scheduledEndDate || new Date(new Date().getTime() + 60*60*1000),\r\n          color: '#2196F3',\r\n          extendedProps: { type: 'route', routeId: route._id, customerId: customer._id }\r\n        }))\r\n      );\r\n      setEvents([...calendarEvents, ...jobEvents, ...routeEvents]);\r\n    } catch (error) {\r\n      console.error('Error loading events:', error);\r\n      setError('Failed to load calendar events. Please try refreshing the page.');\r\n    }\r\n  };\r\n\r\n  const initializeExternalEvents = () => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    if (draggableElems.length === 0) {\r\n      console.warn('No draggable elements found');\r\n      return;\r\n    }\r\n    \r\n    draggableElems.forEach(elem => {\r\n      new FcDraggable(elem, {\r\n        eventData: function() {\r\n          return {\r\n            id: elem.getAttribute('data-id'),\r\n            title: elem.innerText,\r\n            duration: '01:00',\r\n            extendedProps: JSON.parse(elem.getAttribute('data-event')).extendedProps\r\n          };\r\n        }\r\n      });\r\n    });\r\n    console.log('Draggable elements initialized:', draggableElems.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(initializeExternalEvents, 1000); // Add a delay to ensure elements are rendered\r\n  }, [jobs, routes]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n    try {\r\n      const updatedEvent = await updateCalendarEvent({\r\n        id: event.id,\r\n        start: event.start,\r\n        end: event.end,\r\n      });\r\n      setEvents(prevEvents => \r\n        prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e)\r\n      );\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, { scheduledDate: event.start, scheduledEndDate: event.end });\r\n      } else if (event.extendedProps.type === 'route') {\r\n        const [routeId, customerId] = event.id.split('-');\r\n        const updatedRoutes = routes.map(route => {\r\n          if (route._id === routeId) {\r\n            return {\r\n              ...route,\r\n              customers: route.customers.map(customer => \r\n                customer._id === customerId \r\n                  ? { ...customer, scheduledDate: event.start, scheduledEndDate: event.end }\r\n                  : customer\r\n              )\r\n            };\r\n          }\r\n          return route;\r\n        });\r\n        setRoutes(updatedRoutes);\r\n        await saveRoute(updatedRoutes.find(r => r._id === routeId));\r\n      }\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n    const id = event.id;\r\n    const startDate = event.start;\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Default 1-hour duration\r\n  \r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        console.log('Scheduling job:', id);\r\n        const updatedJob = await updateJob(id, { scheduledDate: startDate, scheduledEndDate: endDate });\r\n        setJobs(prevJobs => prevJobs.map(job => \r\n          job._id === id ? { ...job, scheduledDate: startDate, scheduledEndDate: endDate } : job\r\n        ));\r\n        console.log('Job scheduled:', updatedJob);\r\n      } else if (event.extendedProps.type === 'route') {\r\n        console.log('Scheduling route customer:', event.extendedProps);\r\n        const routeId = event.extendedProps.routeId;\r\n        const customerId = event.extendedProps.customerId;\r\n        const updatedRoute = await updateRoute(routeId, {\r\n          customers: [{ customer: customerId, scheduledDate: startDate, scheduledEndDate: endDate }]\r\n        });\r\n        setRoutes(prevRoutes => prevRoutes.map(route => \r\n          route._id === routeId ? {\r\n            ...route,\r\n            customers: route.customers.map(customer => \r\n              customer._id === customerId \r\n                ? { ...customer, scheduledDate: startDate, scheduledEndDate: endDate }\r\n                : customer\r\n            )\r\n          } : route\r\n        ));\r\n        console.log('Route customer scheduled:', updatedRoute);\r\n      }\r\n  \r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: id,\r\n        title: event.title,\r\n        start: startDate,\r\n        end: endDate,\r\n        color: event.extendedProps.type === 'job' ? '#4CAF50' : '#2196F3',\r\n        extendedProps: event.extendedProps\r\n      }]);\r\n  \r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    const job = jobs.find(j => j._id === jobId);\r\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => \r\n      route._id === routeId \r\n        ? { ...route, customers: [...route.customers, job] }\r\n        : route\r\n    ));\r\n    await updateJobRoute(jobId, routeId);\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    const route = routes.find(r => r._id === routeId);\r\n    const job = route.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(r => \r\n      r._id === routeId \r\n        ? { ...r, customers: r.customers.filter(j => j._id !== jobId) }\r\n        : r\r\n    ));\r\n    setJobs(prevJobs => [...prevJobs, job]);\r\n    await updateJobRoute(jobId, null);\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\r\n    const job = sourceRoute.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(route => {\r\n      if (route._id === sourceRouteId) {\r\n        return { ...route, customers: route.customers.filter(j => j._id !== jobId) };\r\n      }\r\n      if (route._id === destRouteId) {\r\n        return { ...route, customers: [...route.customers, job] };\r\n      }\r\n      return route;\r\n    }));\r\n    await updateJobRoute(jobId, destRouteId);\r\n  };\r\n\r\n  const updateJobRoute = async (jobId, routeId) => {\r\n    try {\r\n      await updateJob(jobId, { route: routeId });\r\n      setSuccessMessage('Job updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating job route:', error);\r\n      setError('Failed to update job route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await saveRoute({ ...routes.find(r => r._id === routeId), name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    alert(`Event: ${event.title}\\nStart: ${event.start}\\nEnd: ${event.end}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes([...routes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(routes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6\">\r\n            <div className=\"sm:hidden\">\r\n              <select\r\n                onChange={(e) => setActiveTab(e.target.value)}\r\n                className=\"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"routes\">Routes</option>\r\n                <option value=\"jobs\">Jobs</option>\r\n                <option value=\"calendar\">Calendar</option>\r\n                <option value=\"map\">Map</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'jobs', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  const newName = prompt('Enter new route name:', route.name);\r\n                                  if (newName) handleEditRouteName(route._id, newName);\r\n                                }}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Edit Name\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMapView(route._id)}\r\n                                className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                              >\r\n                                View Map\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                              data-id={job._id}\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job._id }\r\n                              })}\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                              <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n\r\n            {activeTab === 'jobs' && (\r\n              <div className=\"jobs-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Jobs</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {jobs.map(job => (\r\n                    <div key={job._id} className=\"bg-gray-100 p-4 rounded-lg text-black\">\r\n                      <h3 className=\"font-semibold\">{job.title}</h3>\r\n                      <p>{job.description}</p>\r\n                      <p>Status: {job.status}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'calendar' && (\r\n              <div className=\"calendar-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Schedule</h2>\r\n                <div id=\"external-events\" className=\"mb-4\">\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Jobs</h4>\r\n                  {jobs.map(job => (\r\n                    <div\r\n                      key={job._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-id={job._id}\r\n                      data-event={JSON.stringify({\r\n                        id: job._id,\r\n                        title: job.title,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'job', jobId: job._id }\r\n                      })}\r\n                    >\r\n                      {job.title}\r\n                    </div>\r\n                  ))}\r\n                  <h4 className=\"font-semibold mb-2\">Draggable Routes</h4>\r\n                  {routes.map(route => (\r\n                    <div\r\n                      key={route._id}\r\n                      className=\"fc-event bg-white p-2 mb-2 rounded shadow cursor-move\"\r\n                      data-id={route._id}\r\n                      data-event={JSON.stringify({\r\n                        id: route._id,\r\n                        title: route.name,\r\n                        duration: '01:00',\r\n                        extendedProps: { type: 'route', routeId: route._id }\r\n                      })}\r\n                    >\r\n                      {route.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <FullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  initialView=\"dayGridMonth\"\r\n                  headerToolbar={{\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                  }}\r\n                  editable={true}\r\n                  droppable={true}\r\n                  events={events}\r\n                  eventDrop={handleEventDrop}\r\n                  eventReceive={handleEventReceive}\r\n                  eventClick={handleEventClick}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}