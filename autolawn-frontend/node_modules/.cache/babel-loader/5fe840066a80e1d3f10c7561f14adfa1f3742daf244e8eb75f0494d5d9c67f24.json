{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst StartTimeModal = ({\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [startTime, setStartTime] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const [hours, minutes] = startTime.split(':');\n    const dateTime = new Date();\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    onSubmit(dateTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-gray-800\",\n        children: \"Set Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          className: \"w-full mb-4 p-2 border rounded text-gray-800\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Set Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(StartTimeModal, \"oNJ3KK/FuVmn7XQQd1o1dE13LZ8=\");\n_c2 = StartTimeModal;\nconst BuildRoutes = () => {\n  _s2();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const navigate = useNavigate();\n  const [routeTotals, setRouteTotals] = useState({});\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let jobsData = [];\n      let routesData = [];\n      const storedJobs = localStorage.getItem('jobs');\n      const storedRoutes = localStorage.getItem('routes');\n      console.log('Stored jobs:', storedJobs);\n      console.log('Stored routes:', storedRoutes);\n      if (storedJobs && storedJobs !== 'undefined') {\n        try {\n          jobsData = JSON.parse(storedJobs);\n          console.log('Jobs loaded from localStorage:', jobsData);\n        } catch (parseError) {\n          console.error('Error parsing stored jobs:', parseError);\n        }\n      }\n      if (storedRoutes && storedRoutes !== 'undefined') {\n        try {\n          routesData = JSON.parse(storedRoutes);\n          console.log('Routes loaded from localStorage:', routesData);\n        } catch (parseError) {\n          console.error('Error parsing stored routes:', parseError);\n        }\n      }\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\n        console.log('Fetching fresh jobs data from API');\n        const jobsResponse = await fetchJobs();\n        console.log('Jobs response from API:', jobsResponse);\n        if (Array.isArray(jobsResponse)) {\n          jobsData = jobsResponse;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else if (Array.isArray(jobsResponse.data)) {\n          jobsData = jobsResponse.data;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else {\n          console.warn('No jobs data returned from API or data is invalid');\n        }\n      }\n      if (!Array.isArray(routesData) || routesData.length === 0) {\n        console.log('Fetching fresh routes data from API');\n        const routesResponse = await fetchRoutes();\n        console.log('Routes response from API:', routesResponse);\n        if (Array.isArray(routesResponse)) {\n          routesData = routesResponse;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else if (Array.isArray(routesResponse.data)) {\n          routesData = routesResponse.data;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else {\n          console.warn('No routes data returned from API or data is invalid');\n        }\n      }\n      console.log('Final jobsData:', jobsData);\n      console.log('Final routesData:', routesData);\n      setJobs(prevJobs => {\n        console.log('Updating jobs state:', jobsData);\n        return jobsData;\n      });\n      setRoutes(prevRoutes => {\n        console.log('Updating routes state:', routesData);\n        return routesData;\n      });\n      generateEvents(jobsData, routesData);\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  useEffect(() => {\n    console.log('Current jobs:', jobs);\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\n  }, [jobs]);\n  useEffect(() => {\n    console.log('Current routes:', routes);\n    console.log('Current jobs:', jobs);\n  }, [routes, jobs]);\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\n  console.log('Stored routes:', localStorage.getItem('routes'));\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = (jobsData || []).map(job => ({\n      id: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id',\n      title: (job === null || job === void 0 ? void 0 : job.title) || 'No Title',\n      start: job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate) : null,\n      end: job !== null && job !== void 0 && job.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = (routesData || []).map(route => ({\n      id: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id',\n      title: (route === null || route === void 0 ? void 0 : route.name) || 'Unnamed Route',\n      start: route !== null && route !== void 0 && route.scheduledDate ? new Date(route.scheduledDate) : null,\n      end: route !== null && route !== void 0 && route.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const handleScheduleRoute = async routeId => {\n    const route = routes.find(r => r._id === routeId);\n    if (!route) return;\n    const startDate = new Date(); // You might want to use a date picker here\n    startDate.setHours(8, 0, 0, 0); // Start at 8 AM\n\n    let currentTime = new Date(startDate);\n    const updatedJobs = [];\n    for (const jobItem of route.jobs) {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job._id);\n      if (!job) continue;\n      const estimatedDuration = job.estimatedDuration || 60; // Default to 60 minutes if not set\n      const bufferTime = 15; // 15 minutes buffer between jobs\n\n      const scheduledDate = new Date(currentTime);\n      updatedJobs.push({\n        jobId: job._id,\n        scheduledDate: scheduledDate\n      });\n\n      // Move to next job start time\n      currentTime = new Date(currentTime.getTime() + (estimatedDuration + bufferTime) * 60000);\n    }\n    try {\n      const updatedRoute = await scheduleRoute(routeId, {\n        scheduledDate: startDate,\n        jobs: updatedJobs\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling route:', error);\n      setError('Failed to schedule route. Please try again.');\n    }\n  };\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const job = jobs.find(j => j._id === jobId);\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? {\n          ...updatedJob,\n          route: null\n        } : j);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Update route total\n      const newTotal = await calculateRouteTotal(routeId);\n      setRouteTotals(prevTotals => ({\n        ...prevTotals,\n        [routeId]: newTotal\n      }));\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const updateRouteTotals = useCallback(async () => {\n    const totals = {};\n    for (const route of routes) {\n      try {\n        const total = await calculateRouteTotal(route._id);\n        totals[route._id] = total;\n      } catch (error) {\n        console.error(`Error calculating total for route ${route._id}:`, error);\n      }\n    }\n    setRouteTotals(totals);\n  }, [routes]);\n  useEffect(() => {\n    updateRouteTotals();\n  }, [updateRouteTotals]);\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\n      info.revert();\n      setError('Canceled or completed jobs cannot be scheduled.');\n      return;\n    }\n    setPendingEvent(event);\n    setShowStartTimeModal(true);\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {}\n    };\n    try {\n      if (eventData.extendedProps.type === 'job') {\n        await handleJobSchedule(eventData);\n      } else if (eventData.extendedProps.type === 'route') {\n        await handleRouteSchedule(eventData);\n      }\n      setEvents(prevEvents => [...prevEvents, eventData]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const handleJobSchedule = async eventData => {\n    const jobId = eventData.extendedProps.jobId;\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n    if (job && job.route) {\n      throw new Error('This job is already assigned to a route');\n    }\n    const updatedJob = await updateJob(jobId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? {\n      ...j,\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    } : j));\n    return updatedJob;\n  };\n  const handleRouteSchedule = async eventData => {\n    const routeId = eventData.extendedProps.routeId;\n    const existingRoute = routes.find(r => (r === null || r === void 0 ? void 0 : r._id) === routeId);\n    if (!existingRoute) {\n      throw new Error('Route not found');\n    }\n    const updatedRoute = await updateRoute(routeId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setRoutes(prevRoutes => prevRoutes.map(r => (r === null || r === void 0 ? void 0 : r._id) === routeId ? updatedRoute : r));\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const jobId = result.draggableId;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const updateLocalStorage = (jobs, routes) => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n    localStorage.setItem('routes', JSON.stringify(routes));\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      console.log('Moving job', jobId, 'to route', routeId);\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      console.log('Job to move:', job);\n      if (job.status === 'Canceled' || job.status === 'Completed') {\n        setError('Canceled or completed jobs cannot be added to routes.');\n        return;\n      }\n      const updatedRoute = await updateRoute(routeId, {\n        $addToSet: {\n          jobs: {\n            job: {\n              _id: jobId\n            },\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      console.log('Updated route:', updatedRoute);\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      console.log('Updated job:', updatedJob);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        console.log('New routes state:', newRoutes);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? {\n          ...updatedJob,\n          route: routeId\n        } : j);\n        console.log('New jobs state:', newJobs);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Update route total\n      const newTotal = await calculateRouteTotal(routeId);\n      setRouteTotals(prevTotals => ({\n        ...prevTotals,\n        [routeId]: newTotal\n      }));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      const updatedRoutes = routes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          jobs: route.jobs.filter(j => j.job !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      });\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      const routeToDelete = routes.find(r => r._id === routeId);\n      await deleteRoute(routeId);\n\n      // Move jobs back to unassigned pool\n      const jobUpdates = routeToDelete.jobs.map(async jobItem => {\n        const job = jobs.find(j => j._id === jobItem.job._id);\n        if (job && job.status !== 'Canceled' && job.status !== 'Completed') {\n          return updateJob(job._id, {\n            route: null\n          });\n        }\n      });\n      await Promise.all(jobUpdates);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.filter(route => route._id !== routeId);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(job => {\n          if (job.route === routeId && job.status !== 'Canceled' && job.status !== 'Completed') {\n            return {\n              ...job,\n              route: null\n            };\n          }\n          return job;\n        });\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n\n      // Remove associated events from the calendar\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventUpdate = async event => {\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\n    }\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      try {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing job from calendar:', error);\n        setError('Failed to remove job. Please try again.');\n      }\n    } else if (event.extendedProps.type === 'route') {\n      try {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing route from calendar:', error);\n        setError('Failed to remove route. Please try again.');\n      }\n    }\n  };\n  const renderRouteTimeline = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => {\n        const routeTotal = routeTotals[route._id] || 0;\n        const orderedJobs = orderJobsByScheduledTime(route);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-container bg-gray-800 p-4 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2 text-white\",\n            children: route === null || route === void 0 ? void 0 : route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-bold mb-4\",\n            children: [\"Total: $\", routeTotal.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), !route.scheduledDate && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleScheduleRoute(route._id),\n            className: \"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: \"Schedule Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list space-y-2 max-h-96 overflow-y-auto\",\n            children: orderedJobs.map((jobItem, index) => {\n              var _job$customer;\n              const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job._id);\n              if (!job) return null;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job-item bg-gray-700 rounded p-2 text-white text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job === null || job === void 0 ? void 0 : job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Revenue: $\", (job === null || job === void 0 ? void 0 : job.cost) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Estimated Duration: \", (job === null || job === void 0 ? void 0 : job.estimatedDuration) || 60, \" minutes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Scheduled: \", jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                  className: \"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 23\n                }, this)]\n              }, job === null || job === void 0 ? void 0 : job._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), (!route.jobs || route.jobs.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 italic\",\n            children: \"No jobs assigned to this route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 17\n          }, this)]\n        }, route === null || route === void 0 ? void 0 : route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this);\n  };\n  const orderJobsByScheduledTime = route => {\n    return [...route.jobs].sort((a, b) => {\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\n      return dateA - dateB;\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 759,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 760,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route === null || route === void 0 ? void 0 : route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route === null || route === void 0 ? void 0 : route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 818,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route === null || route === void 0 ? void 0 : route.name);\n                            if (newName) handleEditRouteName(route === null || route === void 0 ? void 0 : route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 820,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 829,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 29\n                    }, this), route.jobs && route.jobs.map((jobItem, index) => {\n                      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                      if (!job) return null;\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job === null || job === void 0 ? void 0 : job._id,\n                        index: index,\n                        children: provided => {\n                          var _job$customer2;\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            className: \"bg-white p-2 mb-2 rounded shadow\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"font-semibold\",\n                              children: job === null || job === void 0 ? void 0 : job.title\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 855,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: job === null || job === void 0 ? void 0 : job.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 856,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 857,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 858,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Scheduled: \", jobItem !== null && jobItem !== void 0 && jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 859,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                              className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                              children: \"Remove from Route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 860,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 849,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 847,\n                        columnNumber: 33\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 27\n                  }, this)\n                }, route === null || route === void 0 ? void 0 : route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job === null || job === void 0 ? void 0 : job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer3;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 900,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job === null || job === void 0 ? void 0 : job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 901,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 902,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer3 = job.customer) === null || _job$customer3 === void 0 ? void 0 : _job$customer3.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 903,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 904,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 888,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job === null || job === void 0 ? void 0 : job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 922,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 935,\n                          columnNumber: 31\n                        }, this)\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 925,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 923,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route === null || route === void 0 ? void 0 : route._id,\n                          title: route === null || route === void 0 ? void 0 : route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route === null || route === void 0 ? void 0 : route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route === null || route === void 0 ? void 0 : route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 952,\n                          columnNumber: 31\n                        }, this)\n                      }, route === null || route === void 0 ? void 0 : route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 942,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 940,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 960,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold mb-2\",\n                  children: route === null || route === void 0 ? void 0 : route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                  jobs: route.jobs.map(jobItem => {\n                    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                    return job ? {\n                      ...job,\n                      scheduledDate: jobItem.scheduledDate,\n                      scheduledEndDate: jobItem.scheduledEndDate\n                    } : null;\n                  }).filter(Boolean),\n                  route: route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1002,\n                  columnNumber: 23\n                }, this)]\n              }, route === null || route === void 0 ? void 0 : route._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this), activeTab === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Timelines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 19\n              }, this), renderRouteTimeline()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 763,\n    columnNumber: 5\n  }, this);\n};\n_s2(BuildRoutes, \"b+Xh9tAaBG+djkhTBnwltDYQK3s=\", false, function () {\n  return [useNavigate];\n});\n_c3 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"StartTimeModal\");\n$RefreshReg$(_c3, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","StartTimeModal","onClose","onSubmit","_s","startTime","setStartTime","handleSubmit","e","preventDefault","hours","minutes","split","dateTime","Date","setHours","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","_c2","BuildRoutes","_s2","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","navigate","routeTotals","setRouteTotals","fetchData","jobsData","routesData","storedJobs","localStorage","getItem","storedRoutes","console","log","JSON","parse","parseError","Array","isArray","length","jobsResponse","setItem","stringify","data","warn","routesResponse","prevJobs","prevRoutes","generateEvents","filter","job","route","err","jobEvents","map","id","_id","title","start","scheduledDate","end","scheduledEndDate","color","extendedProps","jobId","event","routeEvents","name","routeId","handleScheduleRoute","find","r","startDate","currentTime","updatedJobs","jobItem","j","estimatedDuration","bufferTime","push","getTime","updatedRoute","scheduleRoute","handleRemoveJobFromRoute","$pull","updatedJob","newRoutes","newJobs","newTotal","calculateRouteTotal","prevTotals","updateRouteTotals","totals","total","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","setTimeout","handleEventDrop","info","revert","handleEventUpdate","handleEventReceive","status","handleStartTimeSubmit","getHours","getMinutes","endDate","handleJobSchedule","handleRouteSchedule","prevEvents","Error","existingRoute","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updateLocalStorage","$addToSet","updatedRoutes","updatedDestRoute","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","customers","handleDeleteRoute","routeToDelete","jobUpdates","Promise","all","handleEventClick","handleEventResize","handleRemoveEvent","renderRouteTimeline","routeTotal","orderedJobs","orderJobsByScheduledTime","toFixed","index","_job$customer","customer","cost","toLocaleString","sort","a","b","dateA","dateB","role","tab","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","_job$customer2","draggableProps","dragHandleProps","description","placeholder","_job$customer3","duration","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","Boolean","EventModal","onSave","onRemove","_c3","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\nconst StartTimeModal = ({ onClose, onSubmit }) => {\r\n  const [startTime, setStartTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const [hours, minutes] = startTime.split(':');\r\n    const dateTime = new Date();\r\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n    onSubmit(dateTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Set Start Time</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            className=\"w-full mb-4 p-2 border rounded text-gray-800\"\r\n            required\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"button\" onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\">Cancel</button>\r\n            <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded\">Set Time</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [routeTotals, setRouteTotals] = useState({});\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let jobsData = [];\r\n      let routesData = [];\r\n  \r\n      const storedJobs = localStorage.getItem('jobs');\r\n      const storedRoutes = localStorage.getItem('routes');\r\n  \r\n      console.log('Stored jobs:', storedJobs);\r\n      console.log('Stored routes:', storedRoutes);\r\n  \r\n      if (storedJobs && storedJobs !== 'undefined') {\r\n        try {\r\n          jobsData = JSON.parse(storedJobs);\r\n          console.log('Jobs loaded from localStorage:', jobsData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored jobs:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (storedRoutes && storedRoutes !== 'undefined') {\r\n        try {\r\n          routesData = JSON.parse(storedRoutes);\r\n          console.log('Routes loaded from localStorage:', routesData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored routes:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\r\n        console.log('Fetching fresh jobs data from API');\r\n        const jobsResponse = await fetchJobs();\r\n        console.log('Jobs response from API:', jobsResponse);\r\n  \r\n        if (Array.isArray(jobsResponse)) {\r\n          jobsData = jobsResponse;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else if (Array.isArray(jobsResponse.data)) {\r\n          jobsData = jobsResponse.data;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else {\r\n          console.warn('No jobs data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(routesData) || routesData.length === 0) {\r\n        console.log('Fetching fresh routes data from API');\r\n        const routesResponse = await fetchRoutes();\r\n        console.log('Routes response from API:', routesResponse);\r\n  \r\n        if (Array.isArray(routesResponse)) {\r\n          routesData = routesResponse;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else if (Array.isArray(routesResponse.data)) {\r\n          routesData = routesResponse.data;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else {\r\n          console.warn('No routes data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      console.log('Final jobsData:', jobsData);\r\n      console.log('Final routesData:', routesData);\r\n  \r\n      setJobs(prevJobs => {\r\n        console.log('Updating jobs state:', jobsData);\r\n        return jobsData;\r\n      });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        console.log('Updating routes state:', routesData);\r\n        return routesData;\r\n      });\r\n  \r\n      generateEvents(jobsData, routesData);\r\n  \r\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n  \r\n  useEffect(() => {\r\n    console.log('Current jobs:', jobs);\r\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\r\n  }, [jobs]);\r\n\r\n  useEffect(() => {\r\n    console.log('Current routes:', routes);\r\n    console.log('Current jobs:', jobs);\r\n  }, [routes, jobs]);\r\n\r\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\r\n  console.log('Stored routes:', localStorage.getItem('routes'));\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = (jobsData || []).map(job => ({\r\n      id: job?._id || 'unknown-id',\r\n      title: job?.title || 'No Title',\r\n      start: job?.scheduledDate ? new Date(job.scheduledDate) : null,\r\n      end: job?.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = (routesData || []).map(route => ({\r\n      id: route?._id || 'unknown-id',\r\n      title: route?.name || 'Unnamed Route',\r\n      start: route?.scheduledDate ? new Date(route.scheduledDate) : null,\r\n      end: route?.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const handleScheduleRoute = async (routeId) => {\r\n    const route = routes.find(r => r._id === routeId);\r\n    if (!route) return;\r\n  \r\n    const startDate = new Date(); // You might want to use a date picker here\r\n    startDate.setHours(8, 0, 0, 0); // Start at 8 AM\r\n  \r\n    let currentTime = new Date(startDate);\r\n    const updatedJobs = [];\r\n  \r\n    for (const jobItem of route.jobs) {\r\n      const job = jobs.find(j => j?._id === jobItem.job._id);\r\n      if (!job) continue;\r\n  \r\n      const estimatedDuration = job.estimatedDuration || 60; // Default to 60 minutes if not set\r\n      const bufferTime = 15; // 15 minutes buffer between jobs\r\n  \r\n      const scheduledDate = new Date(currentTime);\r\n      updatedJobs.push({\r\n        jobId: job._id,\r\n        scheduledDate: scheduledDate\r\n      });\r\n  \r\n      // Move to next job start time\r\n      currentTime = new Date(currentTime.getTime() + (estimatedDuration + bufferTime) * 60000);\r\n    }\r\n  \r\n    try {\r\n      const updatedRoute = await scheduleRoute(routeId, {\r\n        scheduledDate: startDate,\r\n        jobs: updatedJobs\r\n      });\r\n  \r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling route:', error);\r\n      setError('Failed to schedule route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? {...updatedJob, route: null} : j);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Update route total\r\n      const newTotal = await calculateRouteTotal(routeId);\r\n      setRouteTotals(prevTotals => ({\r\n        ...prevTotals,\r\n        [routeId]: newTotal\r\n      }));\r\n  \r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const updateRouteTotals = useCallback(async () => {\r\n    const totals = {};\r\n    for (const route of routes) {\r\n      try {\r\n        const total = await calculateRouteTotal(route._id);\r\n        totals[route._id] = total;\r\n      } catch (error) {\r\n        console.error(`Error calculating total for route ${route._id}:`, error);\r\n      }\r\n    }\r\n    setRouteTotals(totals);\r\n  }, [routes]);\r\n  \r\n  useEffect(() => {\r\n    updateRouteTotals();\r\n  }, [updateRouteTotals]);\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\r\n      info.revert();\r\n      setError('Canceled or completed jobs cannot be scheduled.');\r\n      return;\r\n    }\r\n  \r\n    setPendingEvent(event);\r\n    setShowStartTimeModal(true);\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || {}\r\n    };\r\n\r\n    try {\r\n      if (eventData.extendedProps.type === 'job') {\r\n        await handleJobSchedule(eventData);\r\n      } else if (eventData.extendedProps.type === 'route') {\r\n        await handleRouteSchedule(eventData);\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, eventData]);\r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const handleJobSchedule = async (eventData) => {\r\n    const jobId = eventData.extendedProps.jobId;\r\n    const job = jobs.find(j => j?._id === jobId);\r\n  \r\n    if (job && job.route) {\r\n      throw new Error('This job is already assigned to a route');\r\n    }\r\n  \r\n    const updatedJob = await updateJob(jobId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n  \r\n    setJobs(prevJobs => prevJobs.map(j =>\r\n      j._id === jobId ? { ...j, scheduledDate: eventData.start, scheduledEndDate: eventData.end } : j\r\n    ));\r\n  \r\n    return updatedJob;\r\n  };\r\n\r\n  const handleRouteSchedule = async (eventData) => {\r\n    const routeId = eventData.extendedProps.routeId;\r\n    const existingRoute = routes.find(r => r?._id === routeId);\r\n\r\n    if (!existingRoute) {\r\n      throw new Error('Route not found');\r\n    }\r\n\r\n    const updatedRoute = await updateRoute(routeId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n\r\n    setRoutes(prevRoutes => prevRoutes.map(r => r?._id === routeId ? updatedRoute : r));\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const jobId = result.draggableId;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const updateLocalStorage = (jobs, routes) => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs));\r\n    localStorage.setItem('routes', JSON.stringify(routes));\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      console.log('Moving job', jobId, 'to route', routeId);\r\n  \r\n      const job = jobs.find(j => j?._id === jobId);\r\n      console.log('Job to move:', job);\r\n  \r\n      if (job.status === 'Canceled' || job.status === 'Completed') {\r\n        setError('Canceled or completed jobs cannot be added to routes.');\r\n        return;\r\n      }\r\n  \r\n      const updatedRoute = await updateRoute(routeId, {\r\n        $addToSet: { jobs: { job: { _id: jobId }, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      console.log('Updated route:', updatedRoute);\r\n  \r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n      console.log('Updated job:', updatedJob);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        console.log('New routes state:', newRoutes);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? {...updatedJob, route: routeId} : j);\r\n        console.log('New jobs state:', newJobs);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Update route total\r\n      const newTotal = await calculateRouteTotal(routeId);\r\n      setRouteTotals(prevTotals => ({\r\n        ...prevTotals,\r\n        [routeId]: newTotal\r\n      }));\r\n  \r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const job = jobs.find(j => j?._id === jobId);\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, jobs: route.jobs.filter(j => j.job !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      });\r\n\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      const routeToDelete = routes.find(r => r._id === routeId);\r\n      await deleteRoute(routeId);\r\n  \r\n      // Move jobs back to unassigned pool\r\n      const jobUpdates = routeToDelete.jobs.map(async (jobItem) => {\r\n        const job = jobs.find(j => j._id === jobItem.job._id);\r\n        if (job && job.status !== 'Canceled' && job.status !== 'Completed') {\r\n          return updateJob(job._id, { route: null });\r\n        }\r\n      });\r\n  \r\n      await Promise.all(jobUpdates);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.filter(route => route._id !== routeId);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(job => {\r\n          if (job.route === routeId && job.status !== 'Canceled' && job.status !== 'Completed') {\r\n            return {...job, route: null};\r\n          }\r\n          return job;\r\n        });\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      // Remove associated events from the calendar\r\n      setEvents(prevEvents => prevEvents.filter(event =>\r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n  \r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\r\n    }\r\n\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job?._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route?._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      try {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs =>\r\n          prevJobs.map(job =>\r\n            job?._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing job from calendar:', error);\r\n        setError('Failed to remove job. Please try again.');\r\n      }\r\n    } else if (event.extendedProps.type === 'route') {\r\n      try {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route =>\r\n          route?._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing route from calendar:', error);\r\n        setError('Failed to remove route. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderRouteTimeline = () => {\r\n    return (\r\n      <div className=\"route-timeline grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => {\r\n          const routeTotal = routeTotals[route._id] || 0;\r\n          const orderedJobs = orderJobsByScheduledTime(route);\r\n  \r\n          return (\r\n            <div key={route?._id} className=\"route-container bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-2 text-white\">{route?.name}</h3>\r\n              <p className=\"text-green-400 font-bold mb-4\">Total: ${routeTotal.toFixed(2)}</p>\r\n              {!route.scheduledDate && (\r\n                <button\r\n                  onClick={() => handleScheduleRoute(route._id)}\r\n                  className=\"mb-4 bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Schedule Route\r\n                </button>\r\n              )}\r\n              <div className=\"job-list space-y-2 max-h-96 overflow-y-auto\">\r\n                {orderedJobs.map((jobItem, index) => {\r\n                  const job = jobs.find(j => j?._id === jobItem.job._id);\r\n                  if (!job) return null;\r\n                  return (\r\n                    <div\r\n                      key={job?._id}\r\n                      className=\"job-item bg-gray-700 rounded p-2 text-white text-sm\"\r\n                    >\r\n                      <p className=\"font-semibold\">{job?.title}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Status: {job?.status}</p>\r\n                      <p>Revenue: ${job?.cost || 0}</p>\r\n                      <p>Estimated Duration: {job?.estimatedDuration || 60} minutes</p>\r\n                      <p>Scheduled: {jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                      <button\r\n                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                        className=\"mt-1 bg-red-600 text-white px-2 py-1 rounded text-xs\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {(!route.jobs || route.jobs.length === 0) && (\r\n                <p className=\"text-gray-400 italic\">No jobs assigned to this route.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const orderJobsByScheduledTime = (route) => {\r\n    return [...route.jobs].sort((a, b) => {\r\n      const dateA = a.scheduledDate ? new Date(a.scheduledDate) : new Date(0);\r\n      const dateB = b.scheduledDate ? new Date(b.scheduledDate) : new Date(0);\r\n      return dateA - dateB;\r\n    });\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n  \r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route?._id} droppableId={`route-${route?._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route?.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route?.name);\r\n                                    if (newName) handleEditRouteName(route?._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route?._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route?._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.jobs && route.jobs.map((jobItem, index) => {\r\n                              const job = jobs.find(j => j?._id === jobItem.job);\r\n                              if (!job) return null;\r\n                              return (\r\n                                <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                    >\r\n                                      <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                      <p>{job?.description}</p>\r\n                                      <p>Status: {job?.status}</p>\r\n                                      <p>Customer: {job.customer?.name}</p>\r\n                                      <p>Scheduled: {jobItem?.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                                      <button\r\n                                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                                        className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                                      >\r\n                                        Remove from Route\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map((job, index) => (\r\n                          <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job?._id,\r\n                                  title: job?.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job?._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                <p>{job?.description}</p>\r\n                                <p>Status: {job?.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job?.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n\r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => (\r\n                            <div\r\n                              key={job?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job?._id,\r\n                                title: job?.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job?.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route?._id,\r\n                                title: route?.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route?.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                        <MemoizedFullCalendar\r\n                          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                          initialView=\"dayGridMonth\"\r\n                          headerToolbar={{\r\n                            left: 'prev,next today',\r\n                            center: 'title',\r\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                          }}\r\n                          editable={true}\r\n                          droppable={true}\r\n                          events={events}\r\n                          eventDrop={handleEventDrop}\r\n                          eventResize={handleEventResize}\r\n                          eventReceive={handleEventReceive}\r\n                          eventClick={handleEventClick}\r\n                          height=\"auto\"\r\n                          aspectRatio={1.8}\r\n                          dayMaxEvents={3}\r\n                          eventTimeFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            meridiem: 'short'\r\n                          }}\r\n                          eventClassNames=\"rounded-md shadow-sm\"\r\n                          slotLabelFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  {routes.map(route => (\r\n                    <div key={route?._id} className=\"mb-8\">\r\n                      <h3 className=\"text-xl font-semibold mb-2\">{route?.name}</h3>\r\n                      <CustomerMap \r\n                        jobs={route.jobs.map(jobItem => {\r\n                          const job = jobs.find(j => j?._id === jobItem.job);\r\n                          return job ? { ...job, scheduledDate: jobItem.scheduledDate, scheduledEndDate: jobItem.scheduledEndDate } : null;\r\n                        }).filter(Boolean)}\r\n                        route={route}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'timeline' && (\r\n                <div className=\"timeline-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Timelines</h2>\r\n                  {renderRouteTimeline()}\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}