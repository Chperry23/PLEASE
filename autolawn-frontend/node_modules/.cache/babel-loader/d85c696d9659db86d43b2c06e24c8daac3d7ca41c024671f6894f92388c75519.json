{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n      setRoutes(validatedRoutes);\n      setJobPool(fetchedJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => {\n          var _route$crew, _route$assignedTo;\n          return {\n            index: route.index,\n            jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id),\n            crew: (_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id,\n            assignedTo: (_route$assignedTo = route.assignedTo) === null || _route$assignedTo === void 0 ? void 0 : _route$assignedTo._id\n          };\n        });\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully:', routesToSave);\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log(\"Drag operation cancelled or no destination found.\");\n      return;\n    }\n    console.log(\"Drag started from:\", source.droppableId, \"to\", destination.droppableId);\n    console.log(\"Before moving jobs:\", {\n      jobPool,\n      routes\n    });\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n\n      // Moving from job pool to a route\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        console.log(\"Moving jobs from job pool to route:\", destRouteIndex);\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        console.log(\"Selected jobs to move from job pool:\", selectedJobsToMove);\n\n        // Add jobs to the route\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n          console.log(`Job added to route ${destRouteIndex}:`, job);\n        });\n\n        // Remove moved jobs from job pool\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          // If no jobs were selected, remove the single dragged job from the pool\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n        console.log(\"Updated job pool after move:\", updatedJobPool);\n      }\n\n      // Moving between routes or within the same route\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\n        selectedJobs.forEach((jobId, index) => {\n          // Find job in the source route\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n          console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\n\n          // Add job to destination route\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n            console.log(`Added job ${jobId} to route ${destRouteIndex}`);\n          }\n        });\n      }\n      console.log(\"After moving jobs:\", {\n        jobPool,\n        updatedRoutes\n      });\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const assignRoute = async (routeIndex, assigneeId) => {\n    const [type, id] = assigneeId.split('-');\n    try {\n      const updatedRoute = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\n        [type]: id\n      });\n      setRoutes(prevRoutes => ({\n        ...prevRoutes,\n        [selectedDay]: prevRoutes[selectedDay].map(route => {\n          var _employees$find, _crews$find;\n          return route.index === parseInt(routeIndex, 10) ? {\n            ...route,\n            [type]: {\n              _id: id,\n              name: type === 'employee' ? (_employees$find = employees.find(e => e._id === id)) === null || _employees$find === void 0 ? void 0 : _employees$find.name : (_crews$find = crews.find(c => c._id === id)) === null || _crews$find === void 0 ? void 0 : _crews$find.name\n            }\n          } : route;\n        })\n      }));\n      await saveRoutes(); // Save routes after assignment\n    } catch (error) {\n      console.error('Error assigning route:', error);\n      setError('Failed to assign route. Please try again.');\n    }\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null; // Safeguard against undefined jobs\n\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      // Color for one-time jobs\n      recurring: 'bg-blue-600 hover:bg-blue-700' // Color for recurring jobs\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n      children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 bg-gray-700 text-white rounded\",\n          onChange: e => assignRoute(id.split('-')[1], e.target.value),\n          value: routes[selectedDay][parseInt(id.split('-')[1], 10)].assignedTo ? `employee-${routes[selectedDay][parseInt(id.split('-')[1], 10)].assignedTo._id}` : routes[selectedDay][parseInt(id.split('-')[1], 10)].crew ? `crew-${routes[selectedDay][parseInt(id.split('-')[1], 10)].crew._id}` : '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Assign to...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Employees\",\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `employee-${employee._id}`,\n              children: employee.name\n            }, employee._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Crews\",\n            children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `crew-${crew._id}`,\n              children: crew.name\n            }, crew._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this), jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJobs([]),\n              className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"LfuitYkxD3tPOfdr1Jcjeeni9h8=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","err","console","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","_route$crew","_route$assignedTo","index","jobs","job","_id","crew","assignedTo","log","debouncedSaveRoutes","onDragEnd","result","source","destination","droppableId","prevRoutes","sourceId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","length","filter","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","addNewRoute","newRouteState","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","handleJobSelection","prevSelectedJobs","id","toggleJobExpansion","prev","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","Math","min","assignRoute","assigneeId","type","updatedRoute","_employees$find","_crews$find","name","find","e","c","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","isSelected","jobColors","oneTime","recurring","jobStyle","backgroundColor","isRecurring","border","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","stopPropagation","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","onChange","target","value","label","employee","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      setRoutes(validatedRoutes);\r\n      setJobPool(fetchedJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)),\r\n          crew: route.crew?._id,\r\n          assignedTo: route.assignedTo?._id\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('Routes saved successfully:', routesToSave);\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes]);\r\n  \r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      console.log(\"Drag operation cancelled or no destination found.\");\r\n      return;\r\n    }\r\n  \r\n    console.log(\"Drag started from:\", source.droppableId, \"to\", destination.droppableId);\r\n    console.log(\"Before moving jobs:\", { jobPool, routes });\r\n\r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n  \r\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n        console.log(\"Moving jobs from job pool to route:\", destRouteIndex);\r\n  \r\n        const selectedJobsToMove = selectedJobs.length > 0 \r\n          ? jobPool.filter(job => selectedJobs.includes(job._id)) \r\n          : [jobPool[source.index]];  // Only the single dragged job\r\n  \r\n        console.log(\"Selected jobs to move from job pool:\", selectedJobsToMove);\r\n  \r\n        // Add jobs to the route\r\n        selectedJobsToMove.forEach((job, index) => {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\r\n          console.log(`Job added to route ${destRouteIndex}:`, job);\r\n        });\r\n  \r\n        // Remove moved jobs from job pool\r\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\r\n        if (selectedJobs.length === 0) {\r\n          // If no jobs were selected, remove the single dragged job from the pool\r\n          updatedJobPool.splice(source.index, 1);\r\n        }\r\n        setJobPool(updatedJobPool);\r\n  \r\n        console.log(\"Updated job pool after move:\", updatedJobPool);\r\n      }\r\n  \r\n      // Moving between routes or within the same route\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\r\n  \r\n        selectedJobs.forEach((jobId, index) => {\r\n          // Find job in the source route\r\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\r\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\r\n  \r\n          console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\r\n  \r\n          // Add job to destination route\r\n          if (removedJob) {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\r\n            console.log(`Added job ${jobId} to route ${destRouteIndex}`);\r\n          }\r\n        });\r\n      }\r\n  \r\n      console.log(\"After moving jobs:\", { jobPool, updatedRoutes });\r\n  \r\n      setSelectedJobs([]); // Clear selected jobs after moving\r\n      return updatedRoutes;\r\n    });\r\n\r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\r\n\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [\r\n        ...routes[selectedDay],\r\n        { index: routes[selectedDay].length, jobs: [] },\r\n      ],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n        \r\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n        \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n        \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);\r\n\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs\r\n      });\r\n  \r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs(prev => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const assignRoute = async (routeIndex, assigneeId) => {\r\n    const [type, id] = assigneeId.split('-');\r\n    try {\r\n      const updatedRoute = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\r\n        [type]: id\r\n      });\r\n      setRoutes(prevRoutes => ({\r\n        ...prevRoutes,\r\n        [selectedDay]: prevRoutes[selectedDay].map(route => \r\n          route.index === parseInt(routeIndex, 10) ? {...route, [type]: {_id: id, name: type === 'employee' ? employees.find(e => e._id === id)?.name : crews.find(c => c._id === id)?.name}} : route\r\n        )\r\n      }));\r\n      await saveRoutes(); // Save routes after assignment\r\n    } catch (error) {\r\n      console.error('Error assigning route:', error);\r\n      setError('Failed to assign route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    if (!job) return null; // Safeguard against undefined jobs\r\n\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const isSelected = selectedJobs.includes(job._id);\r\n\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700', // Color for one-time jobs\r\n      recurring: 'bg-blue-600 hover:bg-blue-700' // Color for recurring jobs\r\n    };\r\n\r\n    const jobStyle = {\r\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\r\n      border: isSelected ? '2px solid yellow' : 'none',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => (\r\n    <Droppable droppableId={id}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n        >\r\n          {!isJobPool && (\r\n            <div className=\"mb-4\">\r\n              <select\r\n                className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                onChange={(e) => assignRoute(id.split('-')[1], e.target.value)}\r\n                value={routes[selectedDay][parseInt(id.split('-')[1], 10)].assignedTo ? \r\n                  `employee-${routes[selectedDay][parseInt(id.split('-')[1], 10)].assignedTo._id}` : \r\n                  routes[selectedDay][parseInt(id.split('-')[1], 10)].crew ? \r\n                  `crew-${routes[selectedDay][parseInt(id.split('-')[1], 10)].crew._id}` : ''}\r\n              >\r\n                <option value=\"\">Assign to...</option>\r\n                <optgroup label=\"Employees\">\r\n                  {employees.map(employee => (\r\n                    <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                  ))}\r\n                </optgroup>\r\n                <optgroup label=\"Crews\">\r\n                  {crews.map(crew => (\r\n                    <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                  ))}\r\n                </optgroup>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white text-center\">No jobs available</p>\r\n          )}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <button\r\n                  onClick={() => setSelectedJobs([])}\r\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                >\r\n                  Clear Selection\r\n                </button>            \r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">Click on jobs to select multiple, then drag to a route.</p>\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}