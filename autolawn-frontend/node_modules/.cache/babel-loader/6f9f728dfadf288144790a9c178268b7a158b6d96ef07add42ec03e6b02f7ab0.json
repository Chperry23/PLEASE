{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = jobsData.map(job => ({\n      id: job._id,\n      title: job.title,\n      start: new Date(job.scheduledDate),\n      end: new Date(job.scheduledEndDate),\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: job._id\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = routesData.flatMap(route => route.customers.map(customer => ({\n      id: `${route._id}-${customer._id}`,\n      title: `${route.name}: ${customer.name}`,\n      start: new Date(customer.scheduledDate),\n      end: new Date(customer.scheduledEndDate),\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id,\n        customerId: customer._id\n      }\n    }))).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const startDate = event.start || new Date();\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {\n        type: 'job'\n      }\n    };\n    if (eventData.extendedProps.type === 'job' || eventData.extendedProps.type === 'route') {\n      try {\n        await handleEventUpdate(eventData);\n        setEvents(prevEvents => [...prevEvents, eventData]);\n        setSuccessMessage('Event scheduled successfully!');\n      } catch (error) {\n        console.error('Error scheduling event:', error);\n        setError('Failed to schedule event. Please try again.');\n        info.revert();\n      }\n    } else {\n      console.error('Unrecognized event type:', eventData);\n      info.revert();\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      const job = jobs.find(j => j._id === jobId);\n      const updatedRoute = await updateRoute(routeId, {\n        $push: {\n          jobs: jobId\n        },\n        scheduledDate: job.scheduledDate\n      });\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $push: {\n          customers: jobId\n        }\n      });\n      await updateJob(jobId, {\n        route: destRouteId\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          customers: route.customers.filter(c => c._id !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      }));\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventUpdate = async event => {\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      try {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing job from calendar:', error);\n        setError('Failed to remove job. Please try again.');\n      }\n    } else if (event.extendedProps.type === 'route') {\n      try {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing route from calendar:', error);\n        setError('Failed to remove route. Please try again.');\n      }\n    }\n  };\n  const EventModal = ({\n    event,\n    onClose,\n    onSave,\n    onRemove\n  }) => {\n    _s();\n    const [title, setTitle] = useState(event.title);\n    const [start, setStart] = useState(event.start);\n    const [end, setEnd] = useState(event.end);\n    const handleSave = () => {\n      onSave({\n        ...event,\n        title,\n        start,\n        end\n      });\n      onClose();\n    };\n    const handleRemove = () => {\n      onRemove(event);\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: start ? start.toISOString().slice(0, 16) : '',\n          onChange: e => setStart(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: end ? end.toISOString().slice(0, 16) : '',\n          onChange: e => setEnd(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemove,\n            className: \"px-4 py-2 bg-red-500 text-white rounded\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-background text-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route.name);\n                            if (newName) handleEditRouteName(route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 441,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 29\n                    }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: customer._id,\n                      index: index,\n                      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow\",\n                        children: customer.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 35\n                      }, this)\n                    }, customer._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 31\n                    }, this)), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this)\n                }, route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job._id,\n                          title: job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 498,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 499,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 501,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 502,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.scheduledDate).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job._id,\n                          title: job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 533,\n                          columnNumber: 31\n                        }, this)\n                      }, job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route._id,\n                          title: route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 31\n                        }, this)\n                      }, route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold mb-2\",\n                  children: route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                  customers: route.customers,\n                  route: route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 23\n                }, this)]\n              }, route._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n};\n_s2(BuildRoutes, \"/mgOEyCPwDw1FBBjYTr4nO/qRds=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s2","_s","$RefreshSig$","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","navigate","fetchData","jobsData","routesData","Promise","all","generateEvents","err","console","jobEvents","map","job","id","_id","title","start","Date","scheduledDate","end","scheduledEndDate","color","extendedProps","type","jobId","filter","event","routeEvents","flatMap","route","customers","customer","name","routeId","customerId","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","JSON","parse","setTimeout","handleEventDrop","info","log","handleEventUpdate","revert","handleEventReceive","startDate","endDate","getTime","prevEvents","onDragEnd","result","source","destination","droppableId","startsWith","draggableId","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","find","j","updatedRoute","$push","prevRoutes","r","prevJobs","$pull","updatedJob","updatedDestRoute","c","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","length","handleDeleteRoute","handleEventClick","handleEventResize","Error","e","handleRemoveEvent","EventModal","onClose","onSave","onRemove","setTitle","setStart","setEnd","handleSave","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","toISOString","slice","onClick","role","tab","charAt","toUpperCase","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","duration","description","status","toLocaleString","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","_c2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = jobsData.map(job => ({\r\n      id: job._id,\r\n      title: job.title,\r\n      start: new Date(job.scheduledDate),\r\n      end: new Date(job.scheduledEndDate),\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = routesData.flatMap(route => \r\n      route.customers.map(customer => ({\r\n        id: `${route._id}-${customer._id}`,\r\n        title: `${route.name}: ${customer.name}`,\r\n        start: new Date(customer.scheduledDate),\r\n        end: new Date(customer.scheduledEndDate),\r\n        color: '#2196F3',\r\n        extendedProps: { type: 'route', routeId: route._id, customerId: customer._id }\r\n      }))\r\n    ).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const startDate = event.start || new Date();\r\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\r\n    \r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || { type: 'job' }\r\n    };\r\n  \r\n    if (eventData.extendedProps.type === 'job' || eventData.extendedProps.type === 'route') {\r\n      try {\r\n        await handleEventUpdate(eventData);\r\n        setEvents(prevEvents => [...prevEvents, eventData]);\r\n        setSuccessMessage('Event scheduled successfully!');\r\n      } catch (error) {\r\n        console.error('Error scheduling event:', error);\r\n        setError('Failed to schedule event. Please try again.');\r\n        info.revert();\r\n      }\r\n    } else {\r\n      console.error('Unrecognized event type:', eventData);\r\n      info.revert();\r\n    }\r\n  };\r\n  \r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedRoute = await updateRoute(routeId, { \r\n        $push: { jobs: jobId },\r\n        scheduledDate: job.scheduledDate\r\n      });\r\n      await updateJob(jobId, { route: routeId });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { customers: jobId } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      await updateRoute(sourceRouteId, { $pull: { customers: jobId } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, { $push: { customers: jobId } });\r\n      await updateJob(jobId, { route: destRouteId });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, customers: route.customers.filter(c => c._id !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      }));\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      try {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs => \r\n          prevJobs.map(job => \r\n            job._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing job from calendar:', error);\r\n        setError('Failed to remove job. Please try again.');\r\n      }\r\n    } else if (event.extendedProps.type === 'route') {\r\n      try {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route => \r\n          route._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing route from calendar:', error);\r\n        setError('Failed to remove route. Please try again.');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n    const [title, setTitle] = useState(event.title);\r\n    const [start, setStart] = useState(event.start);\r\n    const [end, setEnd] = useState(event.end);\r\n\r\n    const handleSave = () => {\r\n      onSave({ ...event, title, start, end });\r\n      onClose();\r\n    };\r\n\r\n    const handleRemove = () => {\r\n      onRemove(event);\r\n      onClose();\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white p-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Edit Event</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={start ? start.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setStart(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={end ? end.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEnd(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n            <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n            <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-background text-gray-800\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n            \r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n    \r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n    \r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route.name);\r\n                                    if (newName) handleEditRouteName(route._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.customers && route.customers.map((customer, index) => (\r\n                              <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                                {(provided) => (\r\n                                  <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                  >\r\n                                    {customer.name}\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => (\r\n                          <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job._id,\r\n                                  title: job.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job.title}</h4>\r\n                                <p>{job.description}</p>\r\n                                <p>Status: {job.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n    \r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.scheduledDate).map(job => (\r\n                            <div\r\n                              key={job._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route._id,\r\n                                title: route.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                        <MemoizedFullCalendar\r\n                          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                          initialView=\"dayGridMonth\"\r\n                          headerToolbar={{\r\n                            left: 'prev,next today',\r\n                            center: 'title',\r\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                          }}\r\n                          editable={true}\r\n                          droppable={true}\r\n                          events={events}\r\n                          eventDrop={handleEventDrop}\r\n                          eventResize={handleEventResize}\r\n                          eventReceive={handleEventReceive}\r\n                          eventClick={handleEventClick}\r\n                          height=\"auto\"\r\n                          aspectRatio={1.8}\r\n                          dayMaxEvents={3}\r\n                          eventTimeFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            meridiem: 'short'\r\n                          }}\r\n                          eventClassNames=\"rounded-md shadow-sm\"\r\n                          slotLabelFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n    \r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  {routes.map(route => (\r\n                    <div key={route._id} className=\"mb-8\">\r\n                      <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                      <CustomerMap \r\n                        customers={route.customers}\r\n                        route={route}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}