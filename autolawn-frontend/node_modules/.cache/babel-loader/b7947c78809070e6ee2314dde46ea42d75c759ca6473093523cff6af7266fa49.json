{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n      setRoutes(validatedRoutes);\n      setJobPool(fetchedJobs);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes and jobs. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => ({\n          index: route.index,\n          jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id) // Ensure you're saving the correct job IDs\n        }));\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      }); // Save updated routes\n      await initializeData(); // Reinitialize data after saving\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    }\n  }, [routes, initializeData]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log(\"Drag operation cancelled or no destination found.\");\n      return;\n    }\n    console.log(\"Drag started from:\", source.droppableId, \"to\", destination.droppableId);\n    console.log(\"Before moving jobs:\", {\n      jobPool,\n      routes\n    });\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n\n      // Moving from job pool to a route\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        console.log(\"Moving jobs from job pool to route:\", destRouteIndex);\n\n        // If no jobs are selected, move the single job being dragged\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        console.log(\"Selected jobs to move from job pool:\", selectedJobsToMove);\n\n        // Add jobs to the route\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n          console.log(`Job added to route ${destRouteIndex}:`, job);\n        });\n\n        // Remove moved jobs from job pool\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          // If no jobs were selected, remove the single dragged job from the pool\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n        console.log(\"Updated job pool after move:\", updatedJobPool);\n      }\n\n      // Moving between routes or within the same route\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\n        selectedJobs.forEach((jobId, index) => {\n          // Find job in the source route\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n          console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\n\n          // Add job to destination route\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n            console.log(`Added job ${jobId} to route ${destRouteIndex}`);\n          }\n        });\n      }\n      console.log(\"After moving jobs:\", {\n        jobPool,\n        updatedRoutes\n      });\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const clearSelectedJobs = () => {\n    setSelectedJobs([]);\n  };\n\n  // Function to toggle the expansion of job details\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n\n  // Function to change the selected day\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n\n  // Function to cycle through visible routes\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null; // Safeguard against undefined jobs\n\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      // Color for one-time jobs\n      recurring: 'bg-blue-600 hover:bg-blue-700' // Color for recurring jobs\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n      children: [jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 3\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJobs([]) // This will clear the selected jobs\n              ,\n              className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 11\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 3\n  }, this);\n};\n_s(BuildRoutes, \"ItR/xhfes8uIueuN9JxK7ZTciZU=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","initializeData","fetchedRoutesResponse","fetchedJobsResponse","Promise","all","fetchedRoutes","fetchedJobs","validatedRoutes","err","console","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","index","jobs","job","_id","debouncedSaveRoutes","onDragEnd","result","source","destination","log","droppableId","prevRoutes","sourceId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","length","filter","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","addNewRoute","newRouteState","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","handleJobSelection","prevSelectedJobs","id","clearSelectedJobs","toggleJobExpansion","prev","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","Math","min","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","name","isSelected","jobColors","oneTime","recurring","jobStyle","backgroundColor","isRecurring","border","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n      ]);\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      setRoutes(validatedRoutes);\r\n      setJobPool(fetchedJobs);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes and jobs. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)), // Ensure you're saving the correct job IDs\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave }); // Save updated routes\r\n      await initializeData(); // Reinitialize data after saving\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    }\r\n  }, [routes, initializeData]);\r\n  \r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      console.log(\"Drag operation cancelled or no destination found.\");\r\n      return;\r\n    }\r\n  \r\n    console.log(\"Drag started from:\", source.droppableId, \"to\", destination.droppableId);\r\n    console.log(\"Before moving jobs:\", { jobPool, routes });\r\n  \r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n  \r\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n        console.log(\"Moving jobs from job pool to route:\", destRouteIndex);\r\n  \r\n        // If no jobs are selected, move the single job being dragged\r\n        const selectedJobsToMove = selectedJobs.length > 0 \r\n          ? jobPool.filter(job => selectedJobs.includes(job._id)) \r\n          : [jobPool[source.index]];  // Only the single dragged job\r\n  \r\n        console.log(\"Selected jobs to move from job pool:\", selectedJobsToMove);\r\n  \r\n        // Add jobs to the route\r\n        selectedJobsToMove.forEach((job, index) => {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\r\n          console.log(`Job added to route ${destRouteIndex}:`, job);\r\n        });\r\n  \r\n        // Remove moved jobs from job pool\r\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\r\n        if (selectedJobs.length === 0) {\r\n          // If no jobs were selected, remove the single dragged job from the pool\r\n          updatedJobPool.splice(source.index, 1);\r\n        }\r\n        setJobPool(updatedJobPool);\r\n  \r\n        console.log(\"Updated job pool after move:\", updatedJobPool);\r\n      }\r\n  \r\n      // Moving between routes or within the same route\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\r\n  \r\n        selectedJobs.forEach((jobId, index) => {\r\n          // Find job in the source route\r\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\r\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\r\n  \r\n          console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\r\n  \r\n          // Add job to destination route\r\n          if (removedJob) {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\r\n            console.log(`Added job ${jobId} to route ${destRouteIndex}`);\r\n          }\r\n        });\r\n      }\r\n  \r\n      console.log(\"After moving jobs:\", { jobPool, updatedRoutes });\r\n  \r\n      setSelectedJobs([]); // Clear selected jobs after moving\r\n      return updatedRoutes;\r\n    });\r\n  \r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\r\n  \r\n\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [\r\n        ...routes[selectedDay],\r\n        { index: routes[selectedDay].length, jobs: [] },\r\n      ],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n        \r\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n        \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n        \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);\r\n\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs\r\n      });\r\n  \r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n  \r\n  const clearSelectedJobs = () => {\r\n    setSelectedJobs([]);\r\n  };\r\n\r\n  // Function to toggle the expansion of job details\r\nconst toggleJobExpansion = (jobId) => {\r\n  setExpandedJobs(prev => ({ ...prev, [jobId]: !prev[jobId] }));\r\n};\r\n\r\n// Function to change the selected day\r\nconst changeSelectedDay = (direction) => {\r\n  setSelectedDay((prevDay) => {\r\n    const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n    const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n    return DAYS_OF_WEEK[newIndex];\r\n  });\r\n  setVisibleRoutesRange({ start: 0, end: 3 });\r\n};\r\n\r\n// Function to cycle through visible routes\r\nconst cycleVisibleRoutes = (direction) => {\r\n  setVisibleRoutesRange((prevRange) => {\r\n    const totalRoutes = routes[selectedDay].length;\r\n    const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n    const newEnd = Math.min(newStart + 3, totalRoutes);\r\n    return { start: newStart, end: newEnd };\r\n  });\r\n};\r\n\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n  if (!job) return null; // Safeguard against undefined jobs\r\n\r\n  const isExpanded = expandedJobs[job._id];\r\n  const customerName = job.customer?.name || 'No Customer';\r\n  const isSelected = selectedJobs.includes(job._id);\r\n\r\n  const jobColors = {\r\n    oneTime: 'bg-green-600 hover:bg-green-700', // Color for one-time jobs\r\n    recurring: 'bg-blue-600 hover:bg-blue-700' // Color for recurring jobs\r\n  };\r\n\r\n  const jobStyle = {\r\n    backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\r\n    border: isSelected ? '2px solid yellow' : 'none',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n      style={{ border: jobStyle.border }}\r\n      onClick={() => handleJobSelection(job)}\r\n    >\r\n      <div className=\"flex justify-between items-center\">\r\n        <p className=\"font-bold text-white\">{customerName}</p>\r\n        <div className=\"flex items-center\">\r\n          {isInRoute && (\r\n            <button\r\n              onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, jobIndex); }}\r\n              className=\"text-red-500 hover:text-red-700 mr-2\"\r\n            >\r\n              <TrashIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          )}\r\n          <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n            {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isExpanded && (\r\n        <div className=\"mt-2\">\r\n          <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n          <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n          <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n          <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderDroppableArea = (id, jobs, isJobPool = false) => (\r\n  <Droppable droppableId={id}>\r\n    {(provided) => (\r\n      <div\r\n        ref={provided.innerRef}\r\n        {...provided.droppableProps}\r\n        className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n      >\r\n        {jobs.length > 0 ? (\r\n          jobs.map((job, index) => (\r\n            <Draggable key={job._id} draggableId={job._id} index={index}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.draggableProps}\r\n                  {...provided.dragHandleProps}\r\n                >\r\n                  {renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)}\r\n                </div>\r\n              )}\r\n            </Draggable>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-white text-center\">No jobs available</p>\r\n        )}\r\n        {provided.placeholder}\r\n      </div>\r\n    )}\r\n  </Droppable>\r\n);\r\n\r\nif (loading) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n      <p className=\"text-white text-xl\">Loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nif (error) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n      <p className=\"text-red-500 text-xl\">{error}</p>\r\n      <button\r\n        onClick={() => window.location.reload()}\r\n        className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n      >\r\n        Refresh Page\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <div className=\"min-h-screen bg-gray-900 text-white\">\r\n    <Header />\r\n    <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <button\r\n          onClick={() => changeSelectedDay(-1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronLeftIcon className=\"w-6 h-6\" />\r\n        </button>\r\n        <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n        <button\r\n          onClick={() => changeSelectedDay(1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronRightIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <button\r\n          onClick={() => cycleVisibleRoutes(-1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronLeftIcon className=\"w-6 h-6\" />\r\n        </button>\r\n        <button\r\n          onClick={addNewRoute}\r\n          className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n        >\r\n          <PlusIcon className=\"w-5 h-5\" />\r\n          <span>Add Route</span>\r\n        </button>\r\n        <button\r\n          onClick={() => cycleVisibleRoutes(1)}\r\n          className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          <ChevronRightIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {routes[selectedDay]\r\n            .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n            .map((route) => (\r\n              <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                  <button\r\n                    onClick={() => deleteRoute(route.index)}\r\n                    className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                  >\r\n                    <TrashIcon className=\"w-5 w-5\" />\r\n                  </button>\r\n                </div>\r\n                {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"mt-8\">\r\n          <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n            Job Pool\r\n            {selectedJobs.length > 0 && (\r\n              <button\r\n                onClick={() => setSelectedJobs([])}  // This will clear the selected jobs\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n              >\r\n                Clear Selection\r\n              </button>            \r\n            )}\r\n          </h2>\r\n          <p className=\"text-sm text-gray-400 mb-2\">Click on jobs to select multiple, then drag to a route.</p>\r\n          {renderDroppableArea('jobPool-0', jobPool, true)}\r\n        </div>\r\n      </DragDropContext>\r\n    </main>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,aAAa,QAAQ,6BAA6B;AACpI,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SACEC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,uBAAuB,EACvBC,aAAa,QACR,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAACc,aAAa,CAAC;EACnD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAACa,YAAY,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlC,QAAQ,CAAC;IAAEmC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAClF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMyC,cAAc,GAAGvC,WAAW,CAAC,YAAY;IAC7C4B,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM,CAACY,qBAAqB,EAAEC,mBAAmB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACrE7B,aAAa,CAAC,SAAS,CAAC,EACxBA,aAAa,CAAC,wBAAwB,CAAC,CACxC,CAAC;MAEF,MAAM8B,aAAa,GAAG,CAAAJ,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEnB,MAAM,KAAIT,aAAa;MACpE,MAAMiC,WAAW,GAAGJ,mBAAmB,IAAI,EAAE;MAE7C,MAAMK,eAAe,GAAGjC,uBAAuB,CAAC+B,aAAa,CAAC;MAE9DtB,SAAS,CAACwB,eAAe,CAAC;MAC1BtB,UAAU,CAACqB,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEkB,GAAG,CAAC;MAC1CjB,QAAQ,CAAC,0DAA0D,CAAC;IACtE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACdwC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMU,UAAU,GAAGjD,WAAW,CAAC,OAAOkD,aAAa,GAAG7B,MAAM,KAAK;IAC/D,IAAI;MACF,MAAM8B,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACH,aAAa,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,GAAG,EAAEC,SAAS,CAAC,KAAK;QACnFF,GAAG,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACC,GAAG,CAACC,KAAK,KAAK;UACjCC,KAAK,EAAED,KAAK,CAACC,KAAK;UAClBC,IAAI,EAAEF,KAAK,CAACE,IAAI,CAACH,GAAG,CAACI,GAAG,IAAK,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGA,GAAG,CAACC,GAAI,CAAC,CAAE;QAC1E,CAAC,CAAC,CAAC;QACH,OAAOR,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,MAAMzC,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE;QAAEO,MAAM,EAAE8B;MAAa,CAAC,CAAC,CAAC,CAAC;MACjE,MAAMZ,cAAc,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEkB,GAAG,CAAC;MAC1CjB,QAAQ,CAAC,0CAA0C,CAAC;IACtD;EACF,CAAC,EAAE,CAACT,MAAM,EAAEkB,cAAc,CAAC,CAAC;EAE5B,MAAMyB,mBAAmB,GAAGhE,WAAW,CAACgB,QAAQ,CAACiC,UAAU,EAAE,IAAI,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEjF,MAAMgB,SAAS,GAAGjE,WAAW,CAAEkE,MAAM,IAAK;IACxC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IAEtC,IAAI,CAACE,WAAW,EAAE;MAChBpB,OAAO,CAACqB,GAAG,CAAC,mDAAmD,CAAC;MAChE;IACF;IAEArB,OAAO,CAACqB,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACG,WAAW,EAAE,IAAI,EAAEF,WAAW,CAACE,WAAW,CAAC;IACpFtB,OAAO,CAACqB,GAAG,CAAC,qBAAqB,EAAE;MAAE9C,OAAO;MAAEF;IAAO,CAAC,CAAC;IAEvDC,SAAS,CAAEiD,UAAU,IAAK;MACxB,MAAMrB,aAAa,GAAG;QAAE,GAAGqB;MAAW,CAAC;MACvC,MAAMC,QAAQ,GAAGL,MAAM,CAACG,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;MAC9C,MAAMC,MAAM,GAAGN,WAAW,CAACE,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;MAEjD,MAAME,gBAAgB,GAAGH,QAAQ,CAAC,CAAC,CAAC,KAAK,OAAO,GAAGI,QAAQ,CAACJ,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;MACnF,MAAMK,cAAc,GAAGH,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO,GAAGE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;;MAE7E;MACA,IAAIP,MAAM,CAACG,WAAW,KAAK,WAAW,IAAIO,cAAc,KAAK,IAAI,EAAE;QACjE7B,OAAO,CAACqB,GAAG,CAAC,qCAAqC,EAAEQ,cAAc,CAAC;;QAElE;QACA,MAAMC,kBAAkB,GAAGzC,YAAY,CAAC0C,MAAM,GAAG,CAAC,GAC9CxD,OAAO,CAACyD,MAAM,CAAClB,GAAG,IAAIzB,YAAY,CAAC4C,QAAQ,CAACnB,GAAG,CAACC,GAAG,CAAC,CAAC,GACrD,CAACxC,OAAO,CAAC4C,MAAM,CAACP,KAAK,CAAC,CAAC,CAAC,CAAE;;QAE9BZ,OAAO,CAACqB,GAAG,CAAC,sCAAsC,EAAES,kBAAkB,CAAC;;QAEvE;QACAA,kBAAkB,CAACI,OAAO,CAAC,CAACpB,GAAG,EAAEF,KAAK,KAAK;UACzCV,aAAa,CAACzB,WAAW,CAAC,CAACoD,cAAc,CAAC,CAAChB,IAAI,CAACsB,MAAM,CAACf,WAAW,CAACR,KAAK,GAAGA,KAAK,EAAE,CAAC,EAAEE,GAAG,CAAC;UACzFd,OAAO,CAACqB,GAAG,CAAC,sBAAsBQ,cAAc,GAAG,EAAEf,GAAG,CAAC;QAC3D,CAAC,CAAC;;QAEF;QACA,MAAMsB,cAAc,GAAG7D,OAAO,CAACyD,MAAM,CAAClB,GAAG,IAAI,CAACzB,YAAY,CAAC4C,QAAQ,CAACnB,GAAG,CAACC,GAAG,CAAC,CAAC;QAC7E,IAAI1B,YAAY,CAAC0C,MAAM,KAAK,CAAC,EAAE;UAC7B;UACAK,cAAc,CAACD,MAAM,CAAChB,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;QACxC;QACApC,UAAU,CAAC4D,cAAc,CAAC;QAE1BpC,OAAO,CAACqB,GAAG,CAAC,8BAA8B,EAAEe,cAAc,CAAC;MAC7D;;MAEA;MACA,IAAIT,gBAAgB,KAAK,IAAI,IAAIE,cAAc,KAAK,IAAI,EAAE;QACxD7B,OAAO,CAACqB,GAAG,CAAC,0BAA0BM,gBAAgB,aAAaE,cAAc,EAAE,CAAC;QAEpFxC,YAAY,CAAC6C,OAAO,CAAC,CAACG,KAAK,EAAEzB,KAAK,KAAK;UACrC;UACA,MAAM0B,QAAQ,GAAGpC,aAAa,CAACzB,WAAW,CAAC,CAACkD,gBAAgB,CAAC,CAACd,IAAI,CAAC0B,SAAS,CAACzB,GAAG,IAAIA,GAAG,CAACC,GAAG,KAAKsB,KAAK,CAAC;UACtG,MAAM,CAACG,UAAU,CAAC,GAAGtC,aAAa,CAACzB,WAAW,CAAC,CAACkD,gBAAgB,CAAC,CAACd,IAAI,CAACsB,MAAM,CAACG,QAAQ,EAAE,CAAC,CAAC;UAE1FtC,OAAO,CAACqB,GAAG,CAAC,eAAegB,KAAK,eAAeV,gBAAgB,EAAE,EAAEa,UAAU,CAAC;;UAE9E;UACA,IAAIA,UAAU,EAAE;YACdtC,aAAa,CAACzB,WAAW,CAAC,CAACoD,cAAc,CAAC,CAAChB,IAAI,CAACsB,MAAM,CAACf,WAAW,CAACR,KAAK,EAAE,CAAC,EAAE4B,UAAU,CAAC;YACxFxC,OAAO,CAACqB,GAAG,CAAC,aAAagB,KAAK,aAAaR,cAAc,EAAE,CAAC;UAC9D;QACF,CAAC,CAAC;MACJ;MAEA7B,OAAO,CAACqB,GAAG,CAAC,oBAAoB,EAAE;QAAE9C,OAAO;QAAE2B;MAAc,CAAC,CAAC;MAE7DZ,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACrB,OAAOY,aAAa;IACtB,CAAC,CAAC;IAEFc,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACzC,OAAO,EAAEc,YAAY,EAAEZ,WAAW,EAAEuC,mBAAmB,CAAC,CAAC;EAG7D,MAAMyB,WAAW,GAAGzF,WAAW,CAAC,YAAY;IAC1C,MAAM0F,aAAa,GAAG;MACpB,GAAGrE,MAAM;MACT,CAACI,WAAW,GAAG,CACb,GAAGJ,MAAM,CAACI,WAAW,CAAC,EACtB;QAAEmC,KAAK,EAAEvC,MAAM,CAACI,WAAW,CAAC,CAACsD,MAAM;QAAElB,IAAI,EAAE;MAAG,CAAC;IAEnD,CAAC;IACDvC,SAAS,CAACoE,aAAa,CAAC;IACxB,MAAMzC,UAAU,CAACyC,aAAa,CAAC;EACjC,CAAC,EAAE,CAACrE,MAAM,EAAEI,WAAW,EAAEwB,UAAU,CAAC,CAAC;EAErC,MAAM0C,WAAW,GAAG3F,WAAW,CAAC,MAAO4F,UAAU,IAAK;IACpD,IAAI;MACFtE,SAAS,CAACiD,UAAU,IAAI;QACtB,MAAMrB,aAAa,GAAG;UAAE,GAAGqB;QAAW,CAAC;QACvC,MAAMsB,YAAY,GAAG3C,aAAa,CAACzB,WAAW,CAAC,CAAC0D,MAAM,CAACS,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAExEpE,UAAU,CAACsE,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAE,GAAGD,YAAY,CAAChC,IAAI,CAAC,CAAC;QAEjEX,aAAa,CAACzB,WAAW,CAAC,GAAGyB,aAAa,CAACzB,WAAW,CAAC,CAACiC,GAAG,CAAC,CAACC,KAAK,EAAEoC,GAAG,MAAM;UAC3E,GAAGpC,KAAK;UACRC,KAAK,EAAEmC;QACT,CAAC,CAAC,CAAC;QAEH,OAAO7C,aAAa;MACtB,CAAC,CAAC;MAEF,MAAMpC,aAAa,CAAC,WAAWW,WAAW,IAAImE,UAAU,EAAE,EAAE,QAAQ,CAAC;MAErE,MAAM3C,UAAU,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,2CAA2C,CAAC;IACvD;EACF,CAAC,EAAE,CAACL,WAAW,EAAEwB,UAAU,CAAC,CAAC;EAE7B,MAAM+C,kBAAkB,GAAG,MAAAA,CAAOJ,UAAU,EAAEN,QAAQ,KAAK;IACzD,IAAI;MACFhE,SAAS,CAACiD,UAAU,IAAI;QACtB,MAAMrB,aAAa,GAAG;UAAE,GAAGqB;QAAW,CAAC;QACvC,MAAMiB,UAAU,GAAGtC,aAAa,CAACzB,WAAW,CAAC,CAACmE,UAAU,CAAC,CAAC/B,IAAI,CAACsB,MAAM,CAACG,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF9D,UAAU,CAACsE,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEN,UAAU,CAAC,CAAC;QACvD,OAAOtC,aAAa;MACtB,CAAC,CAAC;MAEF,MAAMpC,aAAa,CAAC,WAAWW,WAAW,IAAImE,UAAU,EAAE,EAAE,KAAK,EAAE;QACjEhC,KAAK,EAAEgC,UAAU;QACjB/B,IAAI,EAAExC,MAAM,CAACI,WAAW,CAAC,CAACmE,UAAU,CAAC,CAAC/B;MACxC,CAAC,CAAC;MAEF,MAAMZ,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDC,QAAQ,CAAC,oDAAoD,CAAC;IAChE;EACF,CAAC;EAED,MAAMmE,kBAAkB,GAAInC,GAAG,IAAK;IAClCxB,eAAe,CAAC4D,gBAAgB,IAAI;MAClC,IAAIA,gBAAgB,CAACjB,QAAQ,CAACnB,GAAG,CAACC,GAAG,CAAC,EAAE;QACtC,OAAOmC,gBAAgB,CAAClB,MAAM,CAACmB,EAAE,IAAIA,EAAE,KAAKrC,GAAG,CAACC,GAAG,CAAC;MACtD,CAAC,MAAM;QACL,OAAO,CAAC,GAAGmC,gBAAgB,EAAEpC,GAAG,CAACC,GAAG,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMqC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B9D,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;;EAED;EACF,MAAM+D,kBAAkB,GAAIhB,KAAK,IAAK;IACpCjD,eAAe,CAACkE,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACjB,KAAK,GAAG,CAACiB,IAAI,CAACjB,KAAK;IAAE,CAAC,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMkB,iBAAiB,GAAIC,SAAS,IAAK;IACvC9E,cAAc,CAAE+E,OAAO,IAAK;MAC1B,MAAMC,YAAY,GAAG/F,YAAY,CAACgG,OAAO,CAACF,OAAO,CAAC;MAClD,MAAMG,QAAQ,GAAG,CAACF,YAAY,GAAGF,SAAS,GAAG7F,YAAY,CAACoE,MAAM,IAAIpE,YAAY,CAACoE,MAAM;MACvF,OAAOpE,YAAY,CAACiG,QAAQ,CAAC;IAC/B,CAAC,CAAC;IACF5E,qBAAqB,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAM2E,kBAAkB,GAAIL,SAAS,IAAK;IACxCxE,qBAAqB,CAAE8E,SAAS,IAAK;MACnC,MAAMC,WAAW,GAAG1F,MAAM,CAACI,WAAW,CAAC,CAACsD,MAAM;MAC9C,MAAMiC,QAAQ,GAAG,CAACF,SAAS,CAAC7E,KAAK,GAAGuE,SAAS,GAAGO,WAAW,IAAIA,WAAW;MAC1E,MAAME,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACH,QAAQ,GAAG,CAAC,EAAED,WAAW,CAAC;MAClD,OAAO;QAAE9E,KAAK,EAAE+E,QAAQ;QAAE9E,GAAG,EAAE+E;MAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC;EAGC,MAAMG,aAAa,GAAGA,CAACtD,GAAG,EAAEuD,SAAS,GAAG,KAAK,EAAEzB,UAAU,EAAEN,QAAQ,KAAK;IAAA,IAAAgC,aAAA,EAAAC,aAAA;IACxE,IAAI,CAACzD,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC;;IAEvB,MAAM0D,UAAU,GAAGrF,YAAY,CAAC2B,GAAG,CAACC,GAAG,CAAC;IACxC,MAAM0D,YAAY,GAAG,EAAAH,aAAA,GAAAxD,GAAG,CAAC4D,QAAQ,cAAAJ,aAAA,uBAAZA,aAAA,CAAcK,IAAI,KAAI,aAAa;IACxD,MAAMC,UAAU,GAAGvF,YAAY,CAAC4C,QAAQ,CAACnB,GAAG,CAACC,GAAG,CAAC;IAEjD,MAAM8D,SAAS,GAAG;MAChBC,OAAO,EAAE,iCAAiC;MAAE;MAC5CC,SAAS,EAAE,+BAA+B,CAAC;IAC7C,CAAC;IAED,MAAMC,QAAQ,GAAG;MACfC,eAAe,EAAEnE,GAAG,CAACoE,WAAW,GAAGL,SAAS,CAACE,SAAS,GAAGF,SAAS,CAACC,OAAO;MAC1EK,MAAM,EAAEP,UAAU,GAAG,kBAAkB,GAAG;IAC5C,CAAC;IAED,oBACE1G,OAAA;MACEkH,SAAS,EAAE,4BAA4BJ,QAAQ,CAACC,eAAe,EAAG;MAClEI,KAAK,EAAE;QAAEF,MAAM,EAAEH,QAAQ,CAACG;MAAO,CAAE;MACnCG,OAAO,EAAEA,CAAA,KAAMrC,kBAAkB,CAACnC,GAAG,CAAE;MAAAyE,QAAA,gBAEvCrH,OAAA;QAAKkH,SAAS,EAAC,mCAAmC;QAAAG,QAAA,gBAChDrH,OAAA;UAAGkH,SAAS,EAAC,sBAAsB;UAAAG,QAAA,EAAEd;QAAY;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDzH,OAAA;UAAKkH,SAAS,EAAC,mBAAmB;UAAAG,QAAA,GAC/BlB,SAAS,iBACRnG,OAAA;YACEoH,OAAO,EAAGM,CAAC,IAAK;cAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;cAAE7C,kBAAkB,CAACJ,UAAU,EAAEN,QAAQ,CAAC;YAAE,CAAE;YACnF8C,SAAS,EAAC,sCAAsC;YAAAG,QAAA,eAEhDrH,OAAA,CAACd,SAAS;cAACgI,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CACT,eACDzH,OAAA;YAAQoH,OAAO,EAAGM,CAAC,IAAK;cAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;cAAExC,kBAAkB,CAACvC,GAAG,CAACC,GAAG,CAAC;YAAE,CAAE;YAAAwE,QAAA,EAC3Ef,UAAU,gBAAGtG,OAAA,CAACZ,aAAa;cAAC8H,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGzH,OAAA,CAACb,eAAe;cAAC+H,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACLnB,UAAU,iBACTtG,OAAA;QAAKkH,SAAS,EAAC,MAAM;QAAAG,QAAA,gBACnBrH,OAAA;UAAGkH,SAAS,EAAC,eAAe;UAAAG,QAAA,EAAEzE,GAAG,CAACgF,KAAK,IAAI;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DzH,OAAA;UAAGkH,SAAS,EAAC,eAAe;UAAAG,QAAA,EAAE,EAAAhB,aAAA,GAAAzD,GAAG,CAACiF,QAAQ,cAAAxB,aAAA,uBAAZA,aAAA,CAAcyB,OAAO,KAAI;QAAY;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxEzH,OAAA;UAAGkH,SAAS,EAAC,eAAe;UAAAG,QAAA,GAAC,YAAU,EAACzE,GAAG,CAACmF,IAAI,IAAI,UAAU;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnEzH,OAAA;UAAGkH,SAAS,EAAC,eAAe;UAAAG,QAAA,GAAC,QAAM,EAACzE,GAAG,CAACoE,WAAW,GAAG,WAAW,GAAG,UAAU;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EAED,MAAMO,mBAAmB,GAAGA,CAAC/C,EAAE,EAAEtC,IAAI,EAAEsF,SAAS,GAAG,KAAK,kBACtDjI,OAAA,CAACV,SAAS;IAAC8D,WAAW,EAAE6B,EAAG;IAAAoC,QAAA,EACvBa,QAAQ,iBACRlI,OAAA;MACEmI,GAAG,EAAED,QAAQ,CAACE,QAAS;MAAA,GACnBF,QAAQ,CAACG,cAAc;MAC3BnB,SAAS,EAAE,4CAA4Ce,SAAS,GAAG,wBAAwB,GAAG,WAAW,EAAG;MAAAZ,QAAA,GAE3G1E,IAAI,CAACkB,MAAM,GAAG,CAAC,GACdlB,IAAI,CAACH,GAAG,CAAC,CAACI,GAAG,EAAEF,KAAK,kBAClB1C,OAAA,CAACT,SAAS;QAAe+I,WAAW,EAAE1F,GAAG,CAACC,GAAI;QAACH,KAAK,EAAEA,KAAM;QAAA2E,QAAA,EACxDa,QAAQ,iBACRlI,OAAA;UACEmI,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACK,cAAc;UAAA,GACvBL,QAAQ,CAACM,eAAe;UAAAnB,QAAA,EAE3BnB,aAAa,CAACtD,GAAG,EAAE,CAACqF,SAAS,EAAEvE,QAAQ,CAACuB,EAAE,CAAC1B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEb,KAAK;QAAC;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE;MACN,GATa7E,GAAG,CAACC,GAAG;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ,CACZ,CAAC,gBAEFzH,OAAA;QAAGkH,SAAS,EAAC,wBAAwB;QAAAG,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3D,EACAS,QAAQ,CAACO,WAAW;IAAA;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CACZ;EAED,IAAIhH,OAAO,EAAE;IACX,oBACET,OAAA;MAAKkH,SAAS,EAAC,2DAA2D;MAAAG,QAAA,eACxErH,OAAA;QAAGkH,SAAS,EAAC,oBAAoB;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEV;EAEA,IAAI9G,KAAK,EAAE;IACT,oBACEX,OAAA;MAAKkH,SAAS,EAAC,8EAA8E;MAAAG,QAAA,gBAC3FrH,OAAA;QAAGkH,SAAS,EAAC,sBAAsB;QAAAG,QAAA,EAAE1G;MAAK;QAAA2G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CzH,OAAA;QACEoH,OAAO,EAAEA,CAAA,KAAMsB,MAAM,CAACb,QAAQ,CAACc,MAAM,CAAC,CAAE;QACxCzB,SAAS,EAAC,0EAA0E;QAAAG,QAAA,EACrF;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACEzH,OAAA;IAAKkH,SAAS,EAAC,qCAAqC;IAAAG,QAAA,gBAClDrH,OAAA,CAACH,MAAM;MAAAyH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzH,OAAA;MAAMkH,SAAS,EAAC,6BAA6B;MAAAG,QAAA,gBAC3CrH,OAAA;QAAKkH,SAAS,EAAC,wCAAwC;QAAAG,QAAA,gBACrDrH,OAAA;UACEoH,OAAO,EAAEA,CAAA,KAAM/B,iBAAiB,CAAC,CAAC,CAAC,CAAE;UACrC6B,SAAS,EAAC,yDAAyD;UAAAG,QAAA,eAEnErH,OAAA,CAACjB,eAAe;YAACmI,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACTzH,OAAA;UAAIkH,SAAS,EAAC,oBAAoB;UAAAG,QAAA,EAAE9G;QAAW;UAAA+G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrDzH,OAAA;UACEoH,OAAO,EAAEA,CAAA,KAAM/B,iBAAiB,CAAC,CAAC,CAAE;UACpC6B,SAAS,EAAC,yDAAyD;UAAAG,QAAA,eAEnErH,OAAA,CAAChB,gBAAgB;YAACkI,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENzH,OAAA;QAAKkH,SAAS,EAAC,wCAAwC;QAAAG,QAAA,gBACrDrH,OAAA;UACEoH,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAAC,CAAC,CAAC,CAAE;UACtCuB,SAAS,EAAC,yDAAyD;UAAAG,QAAA,eAEnErH,OAAA,CAACjB,eAAe;YAACmI,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACTzH,OAAA;UACEoH,OAAO,EAAE7C,WAAY;UACrB2C,SAAS,EAAC,6FAA6F;UAAAG,QAAA,gBAEvGrH,OAAA,CAACf,QAAQ;YAACiI,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChCzH,OAAA;YAAAqH,QAAA,EAAM;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACTzH,OAAA;UACEoH,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAAC,CAAC,CAAE;UACrCuB,SAAS,EAAC,yDAAyD;UAAAG,QAAA,eAEnErH,OAAA,CAAChB,gBAAgB;YAACkI,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENzH,OAAA,CAACX,eAAe;QAAC0D,SAAS,EAAEA,SAAU;QAAAsE,QAAA,gBACpCrH,OAAA;UAAKkH,SAAS,EAAC,sDAAsD;UAAAG,QAAA,EAClElH,MAAM,CAACI,WAAW,CAAC,CACjBqI,KAAK,CAAC/H,kBAAkB,CAACE,KAAK,EAAEF,kBAAkB,CAACG,GAAG,CAAC,CACvDwB,GAAG,CAAEC,KAAK,iBACTzC,OAAA;YAAuBkH,SAAS,EAAC,sCAAsC;YAAAG,QAAA,gBACrErH,OAAA;cAAKkH,SAAS,EAAC,wCAAwC;cAAAG,QAAA,gBACrDrH,OAAA;gBAAIkH,SAAS,EAAC,uBAAuB;gBAAAG,QAAA,GAAC,QAAM,EAAC5E,KAAK,CAACC,KAAK,GAAG,CAAC;cAAA;gBAAA4E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClEzH,OAAA;gBACEoH,OAAO,EAAEA,CAAA,KAAM3C,WAAW,CAAChC,KAAK,CAACC,KAAK,CAAE;gBACxCwE,SAAS,EAAC,uDAAuD;gBAAAG,QAAA,eAEjErH,OAAA,CAACd,SAAS;kBAACgI,SAAS,EAAC;gBAAS;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,EACLO,mBAAmB,CAAC,SAASvF,KAAK,CAACC,KAAK,EAAE,EAAED,KAAK,CAACE,IAAI,CAAC;UAAA,GAVhDF,KAAK,CAACC,KAAK;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWhB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENzH,OAAA;UAAKkH,SAAS,EAAC,MAAM;UAAAG,QAAA,gBACnBrH,OAAA;YAAIkH,SAAS,EAAC,+DAA+D;YAAAG,QAAA,GAAC,UAE5E,EAAClG,YAAY,CAAC0C,MAAM,GAAG,CAAC,iBACtB7D,OAAA;cACEoH,OAAO,EAAEA,CAAA,KAAMhG,eAAe,CAAC,EAAE,CAAE,CAAE;cAAA;cACrC8F,SAAS,EAAC,wEAAwE;cAAAG,QAAA,EACnF;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACLzH,OAAA;YAAGkH,SAAS,EAAC,4BAA4B;YAAAG,QAAA,EAAC;UAAuD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACpGO,mBAAmB,CAAC,WAAW,EAAE3H,OAAO,EAAE,IAAI,CAAC;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAER,CAAC;AAACvH,EAAA,CAhaID,WAAW;AAAA4I,EAAA,GAAX5I,WAAW;AAkajB,eAAeA,WAAW;AAAC,IAAA4I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}