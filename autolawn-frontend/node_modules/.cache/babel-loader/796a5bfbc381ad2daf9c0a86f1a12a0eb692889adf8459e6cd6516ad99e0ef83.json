{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckIcon } from '@heroicons/react/24/solid';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(''); // New state for success messages\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    routeIndex: null\n  });\n  const [showRouteNameModal, setShowRouteNameModal] = useState(false);\n  const [newRouteName, setNewRouteName] = useState('');\n  const [confirmCompleteJobsDialog, setConfirmCompleteJobsDialog] = useState({\n    isOpen: false,\n    activeJobIds: [],\n    inactiveJobIds: []\n  });\n  const [expandedRoutes, setExpandedRoutes] = useState({});\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/jobs'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n\n      // Create a job map for easy lookup\n      const jobMap = {};\n      fetchedJobs.forEach(job => {\n        jobMap[job._id] = job;\n      });\n\n      // Prepare current date\n      const now = new Date();\n      const normalizeDate = date => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const today = normalizeDate(now);\n\n      // Function to determine if a job is due for service\n      const isJobDue = job => {\n        // Filter out completed jobs\n        if (job.status === 'Completed') {\n          return false;\n        }\n\n        // Jobs without lastServiceDate are due\n        if (!job.lastServiceDate) {\n          return true;\n        }\n        const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\n        const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\n\n        // Apply recurrence pattern logic\n        if (job.isRecurring) {\n          switch (job.recurrencePattern) {\n            case 'Weekly':\n              return daysSinceLastService >= 7;\n            case 'Bi-weekly':\n              return daysSinceLastService >= 14;\n            case 'Monthly':\n              return daysSinceLastService >= 30;\n            default:\n              return false;\n          }\n        } else {\n          // One-time jobs are due if they haven't been serviced yet\n          return true;\n        }\n      };\n\n      // Update jobs in routes with full job data and determine if they are due\n      const processedRoutes = Object.fromEntries(Object.entries(validatedRoutes).map(([day, dayRoutes]) => [day, dayRoutes.map(route => {\n        // Initialize recurrence groups, including one-time jobs\n        const jobs = {\n          oneTime: [],\n          weekly: [],\n          biWeekly: [],\n          monthly: []\n        };\n        route.jobs.forEach(jobEntry => {\n          const jobId = typeof jobEntry === 'string' ? jobEntry : jobEntry._id;\n          const fullJob = jobMap[jobId];\n          if (fullJob) {\n            const isDue = isJobDue(fullJob);\n            const jobWithStatus = {\n              ...fullJob,\n              isDue\n            };\n\n            // Place the job into the correct recurrence group\n            if (fullJob.isRecurring) {\n              switch (fullJob.recurrencePattern) {\n                case 'Weekly':\n                  jobs.weekly.push(jobWithStatus);\n                  break;\n                case 'Bi-weekly':\n                  jobs.biWeekly.push(jobWithStatus);\n                  break;\n                case 'Monthly':\n                  jobs.monthly.push(jobWithStatus);\n                  break;\n                default:\n                  // Handle other recurrence patterns if necessary\n                  break;\n              }\n            } else {\n              // One-time jobs go into the oneTime group\n              jobs.oneTime.push(jobWithStatus);\n            }\n          }\n        });\n        return {\n          ...route,\n          name: route.name,\n          // Use the name directly from the database\n          jobs\n        };\n      })]));\n\n      // Prepare the job pool by including jobs not in any route\n      const jobsInRoutes = new Set(Object.values(processedRoutes).flatMap(dayRoutes => dayRoutes.flatMap(route => Object.values(route.jobs).flat().map(job => job._id))));\n      const jobPoolJobs = fetchedJobs.filter(job => {\n        // Exclude jobs that are already scheduled in routes\n        if (jobsInRoutes.has(job._id)) {\n          return false;\n        }\n        // Exclude jobs that are completed\n        if (job.status === 'Completed') {\n          return false;\n        }\n        return true; // Include all other jobs\n      }).map(job => ({\n        ...job,\n        isDue: isJobDue(job)\n      }));\n      setRoutes(processedRoutes);\n      setJobPool(jobPoolJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n      console.log('Initialized data:', {\n        routes: processedRoutes,\n        jobPool: jobPoolJobs,\n        employees: fetchedEmployees,\n        crews: fetchedCrews\n      });\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map((route, index) => {\n          var _route$employee, _route$crew;\n          return {\n            index: route.index,\n            name: route.name || `Route ${index + 1}`,\n            // Ensure name is always set\n            jobs: Object.values(route.jobs).flat().map(job => typeof job === 'string' ? job : job._id),\n            employee: ((_route$employee = route.employee) === null || _route$employee === void 0 ? void 0 : _route$employee._id) || null,\n            crew: ((_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id) || null\n          };\n        });\n        return acc;\n      }, {});\n      console.log('Saving routes:', JSON.stringify(routesToSave, null, 2));\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error saving routes:', err);\n      setError(`Failed to save routes: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    const sourceId = source.droppableId.split('-');\n    const destId = destination.droppableId.split('-');\n    const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n    const sourcePattern = sourceId[2];\n    const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n    const destPattern = destId[2];\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n\n      // Moving from job pool to a route\n      if (source.droppableId.startsWith('jobPool') && destRouteIndex !== null) {\n        const job = jobPool[source.index];\n        if (!job) return updatedRoutes;\n\n        // Determine the recurrence pattern of the job\n        const pattern = !job.isRecurring ? 'oneTime' : job.recurrencePattern === 'Weekly' ? 'weekly' : job.recurrencePattern === 'Bi-weekly' ? 'biWeekly' : job.recurrencePattern === 'Monthly' ? 'monthly' : null;\n        if (!pattern) return updatedRoutes;\n\n        // Add job to the destination route's recurrence group\n        updatedRoutes[selectedDay][destRouteIndex].jobs[pattern].splice(destination.index, 0, job);\n\n        // Remove from job pool\n        const updatedJobPool = [...jobPool];\n        updatedJobPool.splice(source.index, 1);\n        setJobPool(updatedJobPool);\n      }\n\n      // Moving within a route or between routes\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        const sourceJobs = updatedRoutes[selectedDay][sourceRouteIndex].jobs[sourcePattern];\n        const destJobs = updatedRoutes[selectedDay][destRouteIndex].jobs[destPattern];\n        const [movedJob] = sourceJobs.splice(source.index, 1);\n        destJobs.splice(destination.index, 0, movedJob);\n      }\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async routeName => {\n    if (!routeName) {\n      routeName = `Route ${routes[selectedDay].length + 1}`;\n    }\n    const newRoute = {\n      index: routes[selectedDay].length,\n      name: routeName,\n      // Ensure the name is set here\n      jobs: {\n        oneTime: [],\n        weekly: [],\n        biWeekly: [],\n        monthly: []\n      },\n      employee: null,\n      crew: null\n    };\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], newRoute]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const toggleRouteExpansion = routeIndex => {\n    setExpandedRoutes(prevState => ({\n      ...prevState,\n      [routeIndex]: !prevState[routeIndex]\n    }));\n  };\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n\n        // Collect all incomplete jobs from the deleted route's job groups\n        const incompleteJobs = Object.values(deletedRoute.jobs).flat().filter(job => job.status !== 'Completed');\n        setJobPool(prevJobPool => [...prevJobPool, ...incompleteJobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = (routeIndex, pattern, jobIndex) => {\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const route = updatedRoutes[selectedDay][routeIndex];\n\n      // Remove the job from the correct job group\n      const removedJob = route.jobs[pattern].splice(jobIndex, 1)[0];\n\n      // Add the removed job back to the job pool only if it's not completed\n      if (removedJob.status !== 'Completed') {\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n      }\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  };\n  const [assigningRoutes, setAssigningRoutes] = useState({});\n  const assignRoute = async (routeIndex, assigneeId) => {\n    const [type, id] = assigneeId.split('-');\n    setAssigningRoutes(prev => ({\n      ...prev,\n      [routeIndex]: true\n    }));\n    try {\n      console.log(`Assigning ${type} with ID: ${id} to route ${routeIndex} for day ${selectedDay}`);\n\n      // Sending the appropriate payload to the API\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\n        [type]: id\n      });\n\n      // Since fetchWithAuth returns parsed data directly, no need to check response.ok or status\n      console.log('Response from server:', response);\n\n      // Ensure the response contains the expected fields, otherwise consider it an error\n      if (!response || !response._id) {\n        throw new Error('Invalid response format');\n      }\n\n      // Assuming the response is valid and contains the updated route\n      const updatedRoute = response; // Use the response directly since fetchWithAuth returns the data\n      setRoutes(prevRoutes => {\n        const updatedDayRoutes = prevRoutes[selectedDay].map(route => {\n          if (route.index === routeIndex) {\n            var _employees$find, _crews$find;\n            return {\n              ...route,\n              employee: type === 'employee' ? {\n                _id: id,\n                name: (_employees$find = employees.find(e => e._id === id)) === null || _employees$find === void 0 ? void 0 : _employees$find.name\n              } : null,\n              crew: type === 'crew' ? {\n                _id: id,\n                name: (_crews$find = crews.find(c => c._id === id)) === null || _crews$find === void 0 ? void 0 : _crews$find.name\n              } : null\n            };\n          }\n          return route;\n        });\n        return {\n          ...prevRoutes,\n          [selectedDay]: updatedDayRoutes\n        };\n      });\n      console.log(`Route assigned successfully: day ${selectedDay}, index ${routeIndex}, ${type}: ${id}`);\n    } catch (error) {\n      console.error('Error assigning route:', error);\n      setError('Failed to assign route. Please try again.');\n    } finally {\n      setAssigningRoutes(prev => ({\n        ...prev,\n        [routeIndex]: false\n      }));\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const renderLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2 p-2 bg-gray-800 rounded-lg text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"Job Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), \" One-time job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), \" Weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-teal-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), \" Bi-weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), \" Monthly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-gray-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), \" Other recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-white opacity-100 mr-2 border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), \" Due for service\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-white opacity-50 mr-2 border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), \" Not due yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n  const shouldReturnToPool = (job, now) => {\n    if (!job.isRecurring) return false;\n    const normalizeDate = date => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\n    const today = normalizeDate(now);\n    const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\n    switch (job.recurrencePattern) {\n      case 'Weekly':\n        return daysSinceLastService >= 7;\n      case 'Bi-weekly':\n        return daysSinceLastService >= 14;\n      case 'Monthly':\n        return daysSinceLastService >= 30;\n      default:\n        return false;\n    }\n  };\n\n  // Updated handleCompleteJob function\n  const handleCompleteJob = async jobIds => {\n    // Collect all jobs from jobPool and routes\n    const allJobs = [...jobPool, ...Object.values(routes).flatMap(dayRoutes => dayRoutes.flatMap(route => Object.values(route.jobs).flat()))];\n\n    // Filter the selected jobs\n    const selectedJobs = allJobs.filter(job => jobIds.includes(job._id));\n\n    // Separate active and inactive jobs\n    const activeJobs = selectedJobs.filter(job => job.isDue);\n    const inactiveJobs = selectedJobs.filter(job => !job.isDue);\n    if (inactiveJobs.length > 0) {\n      // Open confirmation dialog\n      setConfirmCompleteJobsDialog({\n        isOpen: true,\n        activeJobIds: activeJobs.map(job => job._id),\n        inactiveJobIds: inactiveJobs.map(job => job._id)\n      });\n    } else {\n      // Proceed with completing active jobs\n      await completeJobs(jobIds);\n    }\n  };\n  const completeJobs = async jobIds => {\n    try {\n      await Promise.all(jobIds.map(async jobId => {\n        await fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {});\n      }));\n\n      // Re-fetch data to update the state\n      await initializeData();\n      setSelectedJobs([]);\n      setSuccessMessage(\"Jobs completed successfully!\");\n    } catch (error) {\n      console.error('Error completing jobs:', error);\n      setError(`Failed to complete jobs: ${error.message}`);\n    }\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, pattern, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null;\n    const isExpanded = expandedJobs[job._id];\n    const isSelected = selectedJobs.includes(job._id);\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const jobTitle = job.title || 'No Title';\n\n    // Calculate days since last service\n    const now = new Date();\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate) : null;\n    const daysSinceLastService = lastServiceDate ? Math.floor((now - lastServiceDate) / (1000 * 60 * 60 * 24)) : 'N/A';\n\n    // Prepare display text for days since last service\n    const daysSinceText = daysSinceLastService !== 'N/A' ? `${daysSinceLastService} day${daysSinceLastService !== 1 ? 's' : ''} ago` : 'No service yet';\n\n    // Determine job color based on recurrence pattern\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      weekly: 'bg-blue-600 hover:bg-blue-700',\n      biWeekly: 'bg-teal-600 hover:bg-teal-700',\n      monthly: 'bg-purple-600 hover:bg-purple-700'\n    };\n    const baseColor = jobColors[pattern] || 'bg-gray-600 hover:bg-gray-700';\n    const opacityClass = job.isDue ? 'opacity-100' : 'opacity-50';\n    const jobStyle = {\n      border: isSelected ? '2px solid white' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${baseColor} ${opacityClass}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-white\",\n            children: customerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-200\",\n            children: daysSinceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, pattern, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.price || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? job.recurrencePattern : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Last Service Date: \", lastServiceDate ? lastServiceDate.toLocaleDateString() : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Days Since Last Service: \", daysSinceText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Status: \", job.isDue ? 'Due for Service' : 'Not Due Yet']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCompleteRoute = async routeIndex => {\n    const route = routes[selectedDay][routeIndex];\n\n    // Collect all job IDs from the route\n    const jobIds = Object.values(route.jobs).flat().map(job => job._id);\n    if (jobIds.length === 0) {\n      setError('No jobs to complete in this route.');\n      return;\n    }\n    try {\n      await handleCompleteJob(jobIds);\n    } catch (error) {\n      console.error('Error completing route jobs:', error);\n      setError(`Failed to complete route jobs: ${error.message}`);\n    }\n  };\n  const renderDroppableArea = (id, route, isJobPool = false) => {\n    const routeIndex = parseInt(id.split('-')[1], 10);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg\",\n      children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 bg-gray-700 text-white rounded\",\n          onChange: e => assignRoute(routeIndex, e.target.value),\n          value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n          disabled: assigningRoutes[routeIndex],\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Assign to...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Employees\",\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `employee-${employee._id}`,\n              children: employee.name\n            }, employee._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Crews\",\n            children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `crew-${crew._id}`,\n              children: crew.name\n            }, crew._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this), ['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white capitalize\",\n          children: pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${id}-${pattern}`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"space-y-2 mt-2\",\n            children: [route.jobs[pattern].length > 0 ? route.jobs[pattern].map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: job._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: renderJobCard(job, true, routeIndex, pattern, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 27\n              }, this)\n            }, job._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: [\"No \", pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly'), \" jobs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 21\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this)]\n      }, pattern, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white p-4 rounded-lg mb-4\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-500 text-white p-4 rounded-lg mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowRouteNameModal(true),\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => {\n            // Calculate total revenue for weekly jobs\n            const weeklyJobs = route.jobs['weekly'] || [];\n            const totalWeeklyRevenue = weeklyJobs.reduce((sum, job) => {\n              const jobCost = parseFloat(job.cost || job.price || 0);\n              return sum + (isNaN(jobCost) ? 0 : jobCost);\n            }, 0);\n\n            // Calculate total revenue for bi-weekly jobs\n            const biWeeklyJobs = route.jobs['biWeekly'] || [];\n            const totalBiWeeklyRevenue = biWeeklyJobs.reduce((sum, job) => {\n              const jobCost = parseFloat(job.cost || job.price || 0);\n              return sum + (isNaN(jobCost) ? 0 : jobCost);\n            }, 0);\n\n            // Total revenue from weekly and bi-weekly jobs\n            const totalWeeklyAndBiWeeklyRevenue = totalWeeklyRevenue + totalBiWeeklyRevenue;\n\n            // Check if the route is expanded\n            const isExpanded = expandedRoutes[route.index];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleRouteExpansion(route.index),\n                    className: \"text-white mr-2 bg-blue-500 p-2 rounded-md flex items-center hover:bg-blue-600\",\n                    children: isExpanded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                        className: \"w-6 h-6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 856,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1\",\n                        children: \"Collapse\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 857,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                        className: \"w-6 h-6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 861,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1\",\n                        children: \"Expand\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 862,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 850,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold ml-2\",\n                    children: route.name || `Route ${route.index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteRoute(route.index),\n                  className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                  children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                    className: \"w-5 h-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full p-2 bg-gray-700 text-white rounded\",\n                  onChange: e => assignRoute(route.index, e.target.value),\n                  value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n                  disabled: assigningRoutes[route.index],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Assign to...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Employees\",\n                    children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: `employee-${employee._id}`,\n                      children: employee.name\n                    }, employee._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 891,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Crews\",\n                    children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: `crew-${crew._id}`,\n                      children: crew.name\n                    }, crew._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 896,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 21\n              }, this), isExpanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: ['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-semibold text-white capitalize\",\n                    children: pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                    droppableId: `route-${route.index}-${pattern}`,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.droppableProps,\n                      className: \"space-y-2 mt-2\",\n                      children: [route.jobs[pattern] && route.jobs[pattern].length > 0 ? route.jobs[pattern].map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job._id,\n                        index: index,\n                        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          children: renderJobCard(job, true, route.index, pattern, index)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 922,\n                          columnNumber: 43\n                        }, this)\n                      }, job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 920,\n                        columnNumber: 39\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-400\",\n                        children: [\"No \", pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly'), \" jobs\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 933,\n                        columnNumber: 37\n                      }, this), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 913,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 29\n                  }, this)]\n                }, pattern, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-white\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"WR: \", totalWeeklyRevenue.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD'\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"WBR: \", totalWeeklyAndBiWeeklyRevenue.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD'\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleCompleteRoute(route.index),\n                  className: \"bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-600 transition\",\n                  children: \"Complete Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 21\n              }, this)]\n            }, route.index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedJobs([]),\n                className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n                children: \"Clear Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCompleteJob(selectedJobs),\n                className: \"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\",\n                children: \"Complete Selected Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route or complete.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 p-2 bg-gray-800 rounded-lg text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Job Color Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"flex space-x-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 19\n                }, this), \" One-time job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 19\n                }, this), \" Weekly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-teal-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 19\n                }, this), \" Bi-weekly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 19\n                }, this), \" Monthly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"jobPool-0\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\",\n              children: [jobPool.length > 0 ? jobPool.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job._id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: renderJobCard(job)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 27\n                }, this)\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white text-center\",\n                children: \"No jobs available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 21\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 11\n      }, this), confirmCompleteJobsDialog.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Confirm Job Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4\",\n            children: [\"You have selected \", confirmCompleteJobsDialog.inactiveJobIds.length, \" inactive job(s). Are you sure you want to complete them?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setConfirmCompleteJobsDialog({\n                isOpen: false,\n                activeJobIds: [],\n                inactiveJobIds: []\n              }),\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                // Proceed with completing all jobs\n                await completeJobs([...confirmCompleteJobsDialog.activeJobIds, ...confirmCompleteJobsDialog.inactiveJobIds]);\n                setConfirmCompleteJobsDialog({\n                  isOpen: false,\n                  activeJobIds: [],\n                  inactiveJobIds: []\n                });\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 11\n      }, this), confirmDialog.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Confirm Route Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4\",\n            children: \"Are you sure you want to complete all jobs in this route? This includes inactive jobs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setConfirmDialog({\n                isOpen: false,\n                routeIndex: null\n              }),\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                await handleCompleteRoute(confirmDialog.routeIndex);\n                setConfirmDialog({\n                  isOpen: false,\n                  routeIndex: null\n                }); // Close after confirming\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 11\n      }, this), showRouteNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Create New Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Route Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full p-2 bg-gray-700 text-white rounded\",\n              value: newRouteName,\n              onChange: e => setNewRouteName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowRouteNameModal(false);\n                setNewRouteName('');\n              },\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                addNewRoute(newRouteName);\n                setShowRouteNameModal(false);\n                setNewRouteName('');\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 764,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"Ed4OC+aVqsrSiUo47e62LPiMIfU=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","CheckIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","successMessage","setSuccessMessage","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","confirmDialog","setConfirmDialog","isOpen","routeIndex","showRouteNameModal","setShowRouteNameModal","newRouteName","setNewRouteName","confirmCompleteJobsDialog","setConfirmCompleteJobsDialog","activeJobIds","inactiveJobIds","expandedRoutes","setExpandedRoutes","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","jobMap","forEach","job","_id","now","Date","normalizeDate","date","getFullYear","getMonth","getDate","today","isJobDue","status","lastServiceDate","daysSinceLastService","Math","floor","isRecurring","recurrencePattern","processedRoutes","Object","fromEntries","entries","map","day","dayRoutes","route","jobs","oneTime","weekly","biWeekly","monthly","jobEntry","jobId","fullJob","isDue","jobWithStatus","push","name","jobsInRoutes","Set","values","flatMap","flat","jobPoolJobs","filter","has","console","log","err","saveRoutes","updatedRoutes","routesToSave","reduce","acc","index","_route$employee","_route$crew","employee","crew","JSON","stringify","_err$response","_err$response$data","response","data","message","debouncedSaveRoutes","onDragEnd","result","source","destination","sourceId","droppableId","split","destId","sourceRouteIndex","parseInt","sourcePattern","destRouteIndex","destPattern","prevRoutes","startsWith","pattern","splice","updatedJobPool","sourceJobs","destJobs","movedJob","addNewRoute","routeName","length","newRoute","newRouteState","toggleRouteExpansion","prevState","deleteRoute","deletedRoute","incompleteJobs","prevJobPool","idx","removeJobFromRoute","jobIndex","removedJob","assigningRoutes","setAssigningRoutes","assignRoute","assigneeId","type","id","prev","Error","updatedRoute","updatedDayRoutes","_employees$find","_crews$find","find","e","c","handleJobSelection","prevSelectedJobs","includes","toggleJobExpansion","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","min","renderLegend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","shouldReturnToPool","handleCompleteJob","jobIds","allJobs","activeJobs","inactiveJobs","completeJobs","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","isSelected","customerName","customer","jobTitle","title","daysSinceText","jobColors","baseColor","opacityClass","jobStyle","border","style","onClick","stopPropagation","location","address","price","toLocaleDateString","handleCompleteRoute","renderDroppableArea","isJobPool","onChange","target","value","disabled","label","replace","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","weeklyJobs","totalWeeklyRevenue","sum","jobCost","parseFloat","cost","isNaN","biWeeklyJobs","totalBiWeeklyRevenue","totalWeeklyAndBiWeeklyRevenue","toLocaleString","currency","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { CheckIcon } from '@heroicons/react/24/solid';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n   const [successMessage, setSuccessMessage] = useState('');  // New state for success messages\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, routeIndex: null });\r\n  const [showRouteNameModal, setShowRouteNameModal] = useState(false);\r\n  const [newRouteName, setNewRouteName] = useState('');\r\n  const [confirmCompleteJobsDialog, setConfirmCompleteJobsDialog] = useState({\r\n    isOpen: false,\r\n    activeJobIds: [],\r\n    inactiveJobIds: [],\r\n  });\r\n  const [expandedRoutes, setExpandedRoutes] = useState({});\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [\r\n        fetchedRoutesResponse,\r\n        fetchedJobsResponse,\r\n        fetchedEmployeesResponse,\r\n        fetchedCrewsResponse,\r\n      ] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/jobs'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      // Create a job map for easy lookup\r\n      const jobMap = {};\r\n      fetchedJobs.forEach(job => {\r\n        jobMap[job._id] = job;\r\n      });\r\n  \r\n      // Prepare current date\r\n      const now = new Date();\r\n      const normalizeDate = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n      const today = normalizeDate(now);\r\n  \r\n      // Function to determine if a job is due for service\r\n      const isJobDue = (job) => {\r\n        // Filter out completed jobs\r\n        if (job.status === 'Completed') {\r\n          return false;\r\n        }\r\n  \r\n        // Jobs without lastServiceDate are due\r\n        if (!job.lastServiceDate) {\r\n          return true;\r\n        }\r\n  \r\n        const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\r\n        const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\r\n  \r\n        // Apply recurrence pattern logic\r\n        if (job.isRecurring) {\r\n          switch (job.recurrencePattern) {\r\n            case 'Weekly':\r\n              return daysSinceLastService >= 7;\r\n            case 'Bi-weekly':\r\n              return daysSinceLastService >= 14;\r\n            case 'Monthly':\r\n              return daysSinceLastService >= 30;\r\n            default:\r\n              return false;\r\n          }\r\n        } else {\r\n          // One-time jobs are due if they haven't been serviced yet\r\n          return true;\r\n        }\r\n      };\r\n  \r\n      // Update jobs in routes with full job data and determine if they are due\r\n      const processedRoutes = Object.fromEntries(\r\n        Object.entries(validatedRoutes).map(([day, dayRoutes]) => [\r\n          day,\r\n          dayRoutes.map(route => {\r\n            // Initialize recurrence groups, including one-time jobs\r\n            const jobs = {\r\n              oneTime: [],\r\n              weekly: [],\r\n              biWeekly: [],\r\n              monthly: [],\r\n            };\r\n      \r\n            route.jobs.forEach(jobEntry => {\r\n              const jobId = typeof jobEntry === 'string' ? jobEntry : jobEntry._id;\r\n              const fullJob = jobMap[jobId];\r\n              if (fullJob) {\r\n                const isDue = isJobDue(fullJob);\r\n                const jobWithStatus = { ...fullJob, isDue };\r\n      \r\n                // Place the job into the correct recurrence group\r\n                if (fullJob.isRecurring) {\r\n                  switch (fullJob.recurrencePattern) {\r\n                    case 'Weekly':\r\n                      jobs.weekly.push(jobWithStatus);\r\n                      break;\r\n                    case 'Bi-weekly':\r\n                      jobs.biWeekly.push(jobWithStatus);\r\n                      break;\r\n                    case 'Monthly':\r\n                      jobs.monthly.push(jobWithStatus);\r\n                      break;\r\n                    default:\r\n                      // Handle other recurrence patterns if necessary\r\n                      break;\r\n                  }\r\n                } else {\r\n                  // One-time jobs go into the oneTime group\r\n                  jobs.oneTime.push(jobWithStatus);\r\n                }\r\n              }\r\n            });\r\n      \r\n            return {\r\n              ...route,\r\n              name: route.name, // Use the name directly from the database\r\n              jobs,\r\n            };\r\n          }),\r\n        ])\r\n      );\r\n  \r\n      // Prepare the job pool by including jobs not in any route\r\n      const jobsInRoutes = new Set(\r\n        Object.values(processedRoutes).flatMap(dayRoutes =>\r\n          dayRoutes.flatMap(route =>\r\n            Object.values(route.jobs).flat().map(job => job._id)\r\n          )\r\n        )\r\n      );\r\n  \r\n      const jobPoolJobs = fetchedJobs\r\n        .filter(job => {\r\n          // Exclude jobs that are already scheduled in routes\r\n          if (jobsInRoutes.has(job._id)) {\r\n            return false;\r\n          }\r\n          // Exclude jobs that are completed\r\n          if (job.status === 'Completed') {\r\n            return false;\r\n          }\r\n          return true; // Include all other jobs\r\n        })\r\n        .map(job => ({\r\n          ...job,\r\n          isDue: isJobDue(job),\r\n        }));\r\n  \r\n      setRoutes(processedRoutes);\r\n      setJobPool(jobPoolJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n  \r\n      console.log('Initialized data:', {\r\n        routes: processedRoutes,\r\n        jobPool: jobPoolJobs,\r\n        employees: fetchedEmployees,\r\n        crews: fetchedCrews,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);  \r\n  \r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map((route, index) => ({\r\n          index: route.index,\r\n          name: route.name || `Route ${index + 1}`, // Ensure name is always set\r\n          jobs: Object.values(route.jobs)\r\n            .flat()\r\n            .map(job => (typeof job === 'string' ? job : job._id)),\r\n          employee: route.employee?._id || null,\r\n          crew: route.crew?._id || null,\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      console.log('Saving routes:', JSON.stringify(routesToSave, null, 2));\r\n  \r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('Routes saved successfully');\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError(`Failed to save routes: ${err.response?.data?.message || err.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes]);\r\n  \r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      return;\r\n    }\r\n  \r\n    const sourceId = source.droppableId.split('-');\r\n    const destId = destination.droppableId.split('-');\r\n  \r\n    const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n    const sourcePattern = sourceId[2];\r\n    const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n    const destPattern = destId[2];\r\n  \r\n    setRoutes(prevRoutes => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId.startsWith('jobPool') && destRouteIndex !== null) {\r\n        const job = jobPool[source.index];\r\n        if (!job) return updatedRoutes;\r\n  \r\n        // Determine the recurrence pattern of the job\r\n        const pattern = !job.isRecurring\r\n          ? 'oneTime'\r\n          : job.recurrencePattern === 'Weekly' ? 'weekly'\r\n          : job.recurrencePattern === 'Bi-weekly' ? 'biWeekly'\r\n          : job.recurrencePattern === 'Monthly' ? 'monthly'\r\n          : null;\r\n  \r\n        if (!pattern) return updatedRoutes;\r\n  \r\n        // Add job to the destination route's recurrence group\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs[pattern].splice(destination.index, 0, job);\r\n  \r\n        // Remove from job pool\r\n        const updatedJobPool = [...jobPool];\r\n        updatedJobPool.splice(source.index, 1);\r\n        setJobPool(updatedJobPool);\r\n      }\r\n  \r\n      // Moving within a route or between routes\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        const sourceJobs = updatedRoutes[selectedDay][sourceRouteIndex].jobs[sourcePattern];\r\n        const destJobs = updatedRoutes[selectedDay][destRouteIndex].jobs[destPattern];\r\n  \r\n        const [movedJob] = sourceJobs.splice(source.index, 1);\r\n        destJobs.splice(destination.index, 0, movedJob);\r\n      }\r\n  \r\n      return updatedRoutes;\r\n    });\r\n  \r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);  \r\n\r\n  const addNewRoute = useCallback(async (routeName) => {\r\n    if (!routeName) {\r\n      routeName = `Route ${routes[selectedDay].length + 1}`;\r\n    }\r\n    const newRoute = {\r\n      index: routes[selectedDay].length,\r\n      name: routeName, // Ensure the name is set here\r\n      jobs: {\r\n        oneTime: [],\r\n        weekly: [],\r\n        biWeekly: [],\r\n        monthly: [],\r\n      },\r\n      employee: null,\r\n      crew: null,\r\n    };\r\n    \r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [...routes[selectedDay], newRoute],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n  \r\n\r\n  const toggleRouteExpansion = (routeIndex) => {\r\n    setExpandedRoutes((prevState) => ({\r\n      ...prevState,\r\n      [routeIndex]: !prevState[routeIndex],\r\n    }));\r\n  };\r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n  \r\n        // Collect all incomplete jobs from the deleted route's job groups\r\n        const incompleteJobs = Object.values(deletedRoute.jobs)\r\n          .flat()\r\n          .filter(job => job.status !== 'Completed');\r\n  \r\n        setJobPool(prevJobPool => [...prevJobPool, ...incompleteJobs]);\r\n  \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n  \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);  \r\n\r\n  const removeJobFromRoute = (routeIndex, pattern, jobIndex) => {\r\n    setRoutes(prevRoutes => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const route = updatedRoutes[selectedDay][routeIndex];\r\n  \r\n      // Remove the job from the correct job group\r\n      const removedJob = route.jobs[pattern].splice(jobIndex, 1)[0];\r\n  \r\n      // Add the removed job back to the job pool only if it's not completed\r\n      if (removedJob.status !== 'Completed') {\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n      }\r\n  \r\n      return updatedRoutes;\r\n    });\r\n  \r\n    debouncedSaveRoutes();\r\n  };\r\n  \r\n  \r\n\r\n  const [assigningRoutes, setAssigningRoutes] = useState({});\r\n  const assignRoute = async (routeIndex, assigneeId) => {\r\n    const [type, id] = assigneeId.split('-');\r\n    setAssigningRoutes(prev => ({ ...prev, [routeIndex]: true }));\r\n  \r\n    try {\r\n      console.log(`Assigning ${type} with ID: ${id} to route ${routeIndex} for day ${selectedDay}`);\r\n      \r\n      // Sending the appropriate payload to the API\r\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\r\n        [type]: id,\r\n      });\r\n  \r\n      // Since fetchWithAuth returns parsed data directly, no need to check response.ok or status\r\n      console.log('Response from server:', response);\r\n  \r\n      // Ensure the response contains the expected fields, otherwise consider it an error\r\n      if (!response || !response._id) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n  \r\n      // Assuming the response is valid and contains the updated route\r\n      const updatedRoute = response; // Use the response directly since fetchWithAuth returns the data\r\n      setRoutes((prevRoutes) => {\r\n        const updatedDayRoutes = prevRoutes[selectedDay].map((route) => {\r\n          if (route.index === routeIndex) {\r\n            return {\r\n              ...route,\r\n              employee: type === 'employee' ? { _id: id, name: employees.find(e => e._id === id)?.name } : null,\r\n              crew: type === 'crew' ? { _id: id, name: crews.find(c => c._id === id)?.name } : null,\r\n            };\r\n          }\r\n          return route;\r\n        });\r\n  \r\n        return {\r\n          ...prevRoutes,\r\n          [selectedDay]: updatedDayRoutes,\r\n        };\r\n      });\r\n      console.log(`Route assigned successfully: day ${selectedDay}, index ${routeIndex}, ${type}: ${id}`);\r\n    } catch (error) {\r\n      console.error('Error assigning route:', error);\r\n      setError('Failed to assign route. Please try again.');\r\n    } finally {\r\n      setAssigningRoutes(prev => ({ ...prev, [routeIndex]: false }));\r\n    }\r\n  };\r\n  \r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs((prev) => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const renderLegend = () => (\r\n    <div className=\"mt-2 p-2 bg-gray-800 rounded-lg text-white\">\r\n      <h3 className=\"font-bold mb-2\">Job Legend</h3>\r\n      <ul className=\"space-y-1\">\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-teal-600 mr-2\" /> Bi-weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-gray-600 mr-2\" /> Other recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-white opacity-100 mr-2 border\" /> Due for service\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-white opacity-50 mr-2 border\" /> Not due yet\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n  \r\n\r\n  const shouldReturnToPool = (job, now) => {\r\n    if (!job.isRecurring) return false;\r\n    \r\n    const normalizeDate = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n    const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\r\n    const today = normalizeDate(now);\r\n    \r\n    const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    switch (job.recurrencePattern) {\r\n      case 'Weekly':\r\n        return daysSinceLastService >= 7;\r\n      case 'Bi-weekly':\r\n        return daysSinceLastService >= 14;\r\n      case 'Monthly':\r\n        return daysSinceLastService >= 30;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n  \r\n  \r\n  // Updated handleCompleteJob function\r\n  const handleCompleteJob = async (jobIds) => {\r\n    // Collect all jobs from jobPool and routes\r\n    const allJobs = [\r\n      ...jobPool,\r\n      ...Object.values(routes).flatMap(dayRoutes =>\r\n        dayRoutes.flatMap(route =>\r\n          Object.values(route.jobs).flat()\r\n        )\r\n      ),\r\n    ];\r\n  \r\n    // Filter the selected jobs\r\n    const selectedJobs = allJobs.filter(job => jobIds.includes(job._id));\r\n  \r\n    // Separate active and inactive jobs\r\n    const activeJobs = selectedJobs.filter(job => job.isDue);\r\n    const inactiveJobs = selectedJobs.filter(job => !job.isDue);\r\n  \r\n    if (inactiveJobs.length > 0) {\r\n      // Open confirmation dialog\r\n      setConfirmCompleteJobsDialog({\r\n        isOpen: true,\r\n        activeJobIds: activeJobs.map(job => job._id),\r\n        inactiveJobIds: inactiveJobs.map(job => job._id),\r\n      });\r\n    } else {\r\n      // Proceed with completing active jobs\r\n      await completeJobs(jobIds);\r\n    }\r\n  };\r\n  \r\n  const completeJobs = async (jobIds) => {\r\n    try {\r\n      await Promise.all(\r\n        jobIds.map(async (jobId) => {\r\n          await fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {});\r\n        })\r\n      );\r\n  \r\n      // Re-fetch data to update the state\r\n      await initializeData();\r\n  \r\n      setSelectedJobs([]);\r\n      setSuccessMessage(\"Jobs completed successfully!\");\r\n    } catch (error) {\r\n      console.error('Error completing jobs:', error);\r\n      setError(`Failed to complete jobs: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  \r\n  const renderJobCard = (job, isInRoute = false, routeIndex, pattern, jobIndex) => {\r\n    if (!job) return null;\r\n  \r\n    const isExpanded = expandedJobs[job._id];\r\n    const isSelected = selectedJobs.includes(job._id);\r\n  \r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const jobTitle = job.title || 'No Title';\r\n  \r\n    // Calculate days since last service\r\n    const now = new Date();\r\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate) : null;\r\n    const daysSinceLastService = lastServiceDate\r\n      ? Math.floor((now - lastServiceDate) / (1000 * 60 * 60 * 24))\r\n      : 'N/A';\r\n  \r\n    // Prepare display text for days since last service\r\n    const daysSinceText = daysSinceLastService !== 'N/A'\r\n      ? `${daysSinceLastService} day${daysSinceLastService !== 1 ? 's' : ''} ago`\r\n      : 'No service yet';\r\n  \r\n    // Determine job color based on recurrence pattern\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700',\r\n      weekly: 'bg-blue-600 hover:bg-blue-700',\r\n      biWeekly: 'bg-teal-600 hover:bg-teal-700',\r\n      monthly: 'bg-purple-600 hover:bg-purple-700',\r\n    };\r\n  \r\n    const baseColor = jobColors[pattern] || 'bg-gray-600 hover:bg-gray-700';\r\n  \r\n    const opacityClass = job.isDue ? 'opacity-100' : 'opacity-50';\r\n  \r\n    const jobStyle = {\r\n      border: isSelected ? '2px solid white' : 'none',\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${baseColor} ${opacityClass}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          {/* Display customer name and days since last service */}\r\n          <div>\r\n            <p className=\"font-bold text-white\">{customerName}</p>\r\n            <p className=\"text-sm text-gray-200\">{daysSinceText}</p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, pattern, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{jobTitle}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.price || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? job.recurrencePattern : 'One-time'}</p>\r\n            <p className=\"text-gray-400\">Last Service Date: {lastServiceDate ? lastServiceDate.toLocaleDateString() : 'N/A'}</p>\r\n            <p className=\"text-gray-400\">Days Since Last Service: {daysSinceText}</p>\r\n            <p className=\"text-gray-400\">\r\n              Status: {job.isDue ? 'Due for Service' : 'Not Due Yet'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };  \r\n  \r\n  const handleCompleteRoute = async (routeIndex) => {\r\n    const route = routes[selectedDay][routeIndex];\r\n  \r\n    // Collect all job IDs from the route\r\n    const jobIds = Object.values(route.jobs).flat().map(job => job._id);\r\n  \r\n    if (jobIds.length === 0) {\r\n      setError('No jobs to complete in this route.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      await handleCompleteJob(jobIds);\r\n    } catch (error) {\r\n      console.error('Error completing route jobs:', error);\r\n      setError(`Failed to complete route jobs: ${error.message}`);\r\n    }\r\n  };  \r\n  \r\n  const renderDroppableArea = (id, route, isJobPool = false) => {\r\n    const routeIndex = parseInt(id.split('-')[1], 10);\r\n  \r\n    return (\r\n      <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n        {!isJobPool && (\r\n          <div className=\"mb-4\">\r\n            <select\r\n              className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n              onChange={(e) => assignRoute(routeIndex, e.target.value)}\r\n              value={\r\n                route.employee ? `employee-${route.employee._id}` :\r\n                route.crew ? `crew-${route.crew._id}` :\r\n                ''\r\n              }\r\n              disabled={assigningRoutes[routeIndex]}\r\n            >\r\n              <option value=\"\">Assign to...</option>\r\n              <optgroup label=\"Employees\">\r\n                {employees.map((employee) => (\r\n                  <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                ))}\r\n              </optgroup>\r\n              <optgroup label=\"Crews\">\r\n                {crews.map((crew) => (\r\n                  <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                ))}\r\n              </optgroup>\r\n            </select>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Render jobs by recurrence pattern, including one-time jobs */}\r\n        {['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => (\r\n          <div key={pattern}>\r\n            <h3 className=\"text-lg font-semibold text-white capitalize\">\r\n              {pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'}\r\n            </h3>\r\n            <Droppable droppableId={`${id}-${pattern}`}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"space-y-2 mt-2\"\r\n                >\r\n                  {route.jobs[pattern].length > 0 ? (\r\n                    route.jobs[pattern].map((job, index) => (\r\n                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            {renderJobCard(job, true, routeIndex, pattern, index)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-gray-400\">No {pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly')} jobs</p>\r\n                  )}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }  \r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n  \r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n  \r\n        {/* Success and Error Messages */}\r\n        {successMessage && (\r\n          <div className=\"bg-green-500 text-white p-4 rounded-lg mb-4\">\r\n            {successMessage}\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div className=\"bg-red-500 text-white p-4 rounded-lg mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n  \r\n        {/* Navigation for selecting days */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n  \r\n        {/* Buttons to cycle routes and add new routes */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={() => setShowRouteNameModal(true)}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\">\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n  \r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {/* Render Routes */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => {\r\n                // Calculate total revenue for weekly jobs\r\n                const weeklyJobs = route.jobs['weekly'] || [];\r\n                const totalWeeklyRevenue = weeklyJobs.reduce((sum, job) => {\r\n                  const jobCost = parseFloat(job.cost || job.price || 0);\r\n                  return sum + (isNaN(jobCost) ? 0 : jobCost);\r\n                }, 0);\r\n\r\n                // Calculate total revenue for bi-weekly jobs\r\n                const biWeeklyJobs = route.jobs['biWeekly'] || [];\r\n                const totalBiWeeklyRevenue = biWeeklyJobs.reduce((sum, job) => {\r\n                  const jobCost = parseFloat(job.cost || job.price || 0);\r\n                  return sum + (isNaN(jobCost) ? 0 : jobCost);\r\n                }, 0);\r\n\r\n                // Total revenue from weekly and bi-weekly jobs\r\n                const totalWeeklyAndBiWeeklyRevenue = totalWeeklyRevenue + totalBiWeeklyRevenue;\r\n\r\n                // Check if the route is expanded\r\n                const isExpanded = expandedRoutes[route.index];\r\n\r\n                return (\r\n                  <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <button\r\n                          onClick={() => toggleRouteExpansion(route.index)}\r\n                          className=\"text-white mr-2 bg-blue-500 p-2 rounded-md flex items-center hover:bg-blue-600\"\r\n                        >\r\n                          {isExpanded ? (\r\n                            <>\r\n                              <ChevronUpIcon className=\"w-6 h-6\" />\r\n                              <span className=\"ml-1\">Collapse</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <ChevronDownIcon className=\"w-6 h-6\" />\r\n                              <span className=\"ml-1\">Expand</span>\r\n                            </>\r\n                          )}\r\n                        </button>\r\n                        <h2 className=\"text-xl font-semibold ml-2\">{route.name || `Route ${route.index + 1}`}</h2>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => deleteRoute(route.index)}\r\n                        className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                      >\r\n                        <TrashIcon className=\"w-5 h-5\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {/* Assignment Select Box */}\r\n                    <div className=\"mb-4\">\r\n                      <select\r\n                        className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                        onChange={(e) => assignRoute(route.index, e.target.value)}\r\n                        value={\r\n                          route.employee ? `employee-${route.employee._id}` :\r\n                          route.crew ? `crew-${route.crew._id}` :\r\n                          ''\r\n                        }\r\n                        disabled={assigningRoutes[route.index]}\r\n                      >\r\n                        <option value=\"\">Assign to...</option>\r\n                        <optgroup label=\"Employees\">\r\n                          {employees.map((employee) => (\r\n                            <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                          ))}\r\n                        </optgroup>\r\n                        <optgroup label=\"Crews\">\r\n                          {crews.map((crew) => (\r\n                            <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                          ))}\r\n                        </optgroup>\r\n                      </select>\r\n                    </div>\r\n\r\n                    {/* Render jobs only if the route is expanded */}\r\n                    {isExpanded && (\r\n                      <>\r\n                        {/* Render jobs by recurrence pattern */}\r\n                        {['oneTime', 'weekly', 'biWeekly', 'monthly'].map((pattern) => (\r\n                          <div key={pattern}>\r\n                            <h3 className=\"text-lg font-semibold text-white capitalize\">\r\n                              {pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'}\r\n                            </h3>\r\n                            <Droppable droppableId={`route-${route.index}-${pattern}`}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.droppableProps}\r\n                                  className=\"space-y-2 mt-2\"\r\n                                >\r\n                                  {route.jobs[pattern] && route.jobs[pattern].length > 0 ? (\r\n                                    route.jobs[pattern].map((job, index) => (\r\n                                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                                        {(provided) => (\r\n                                          <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                          >\r\n                                            {renderJobCard(job, true, route.index, pattern, index)}\r\n                                          </div>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    ))\r\n                                  ) : (\r\n                                    <p className=\"text-gray-400\">\r\n                                      No {pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly')} jobs\r\n                                    </p>\r\n                                  )}\r\n                                  {provided.placeholder}\r\n                                </div>\r\n                              )}\r\n                            </Droppable>\r\n                          </div>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n\r\n                    {/* Complete Route Button and Revenue at the bottom of each route */}\r\n                    <div className=\"mt-4 flex justify-between items-center\">\r\n                      <div className=\"text-white\">\r\n                        <p>\r\n                          WR: {totalWeeklyRevenue.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n                        </p>\r\n                        <p>\r\n                          WBR: {totalWeeklyAndBiWeeklyRevenue.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n                        </p>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => handleCompleteRoute(route.index)}\r\n                        className=\"bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-600 transition\"\r\n                      >\r\n                        Complete Route\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n  \r\n          {/* Job Pool */}\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <div className=\"flex space-x-4\">\r\n                  <button\r\n                    onClick={() => setSelectedJobs([])}\r\n                    className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                  >\r\n                    Clear Selection\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleCompleteJob(selectedJobs)}\r\n                    className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\"\r\n                  >\r\n                    Complete Selected Jobs\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">\r\n              Click on jobs to select multiple, then drag to a route or complete.\r\n            </p>\r\n  \r\n            {/* Job Color Legend */}\r\n            <div className=\"mt-2 p-2 bg-gray-800 rounded-lg text-white\">\r\n              <h3 className=\"font-bold mb-2\">Job Color Legend</h3>\r\n              <ul className=\"flex space-x-8\">\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-teal-600 mr-2\" /> Bi-weekly job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly job\r\n                </li>\r\n              </ul>\r\n            </div>\r\n  \r\n            {/* Updated Job Pool Rendering */}\r\n            <Droppable droppableId=\"jobPool-0\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\"\r\n                >\r\n                  {jobPool.length > 0 ? (\r\n                    jobPool.map((job, index) => (\r\n                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            {renderJobCard(job)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-white text-center\">No jobs available</p>\r\n                  )}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n  \r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Confirmation Dialog for Completing Selected Jobs */}\r\n        {confirmCompleteJobsDialog.isOpen && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Confirm Job Completion</h3>\r\n              <p className=\"mt-4\">\r\n                You have selected {confirmCompleteJobsDialog.inactiveJobIds.length} inactive job(s).\r\n                Are you sure you want to complete them?\r\n              </p>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() =>\r\n                    setConfirmCompleteJobsDialog({ isOpen: false, activeJobIds: [], inactiveJobIds: [] })\r\n                  }\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={async () => {\r\n                    // Proceed with completing all jobs\r\n                    await completeJobs([\r\n                      ...confirmCompleteJobsDialog.activeJobIds,\r\n                      ...confirmCompleteJobsDialog.inactiveJobIds,\r\n                    ]);\r\n                    setConfirmCompleteJobsDialog({ isOpen: false, activeJobIds: [], inactiveJobIds: [] });\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Confirmation Dialog for Completing a Route */}\r\n        {confirmDialog.isOpen && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Confirm Route Completion</h3>\r\n              <p className=\"mt-4\">\r\n                Are you sure you want to complete all jobs in this route? This includes inactive jobs.\r\n              </p>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() => setConfirmDialog({ isOpen: false, routeIndex: null })}\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={async () => {\r\n                    await handleCompleteRoute(confirmDialog.routeIndex);\r\n                    setConfirmDialog({ isOpen: false, routeIndex: null }); // Close after confirming\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Modal for Adding Route Name */}\r\n        {showRouteNameModal && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Create New Route</h3>\r\n              <div className=\"mt-4\">\r\n                <label className=\"block text-sm font-medium mb-1\">Route Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                  value={newRouteName}\r\n                  onChange={(e) => setNewRouteName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowRouteNameModal(false);\r\n                    setNewRouteName('');\r\n                  }}\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    addNewRoute(newRouteName);\r\n                    setShowRouteNameModal(false);\r\n                    setNewRouteName('');\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Create\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n      </main>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}