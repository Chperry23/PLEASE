{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n\n      // Ensure that the routes have the correct structure for assignments\n      const routesWithAssignments = Object.entries(validatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => {\n          var _fetchedEmployees$fin, _fetchedCrews$find;\n          return {\n            ...route,\n            assignedTo: route.employee // Use 'employee' from backend\n            ? {\n              _id: route.employee,\n              name: (_fetchedEmployees$fin = fetchedEmployees.find(e => e._id === route.employee)) === null || _fetchedEmployees$fin === void 0 ? void 0 : _fetchedEmployees$fin.name\n            } : null,\n            crew: route.crew ? {\n              _id: route.crew,\n              name: (_fetchedCrews$find = fetchedCrews.find(c => c._id === route.crew)) === null || _fetchedCrews$find === void 0 ? void 0 : _fetchedCrews$find.name\n            } : null\n          };\n        });\n        return acc;\n      }, {});\n      setRoutes(routesWithAssignments);\n      setJobPool(fetchedJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => {\n          var _route$crew, _route$employee;\n          return {\n            index: route.index,\n            jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id),\n            crew: (_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id,\n            employee: (_route$employee = route.employee) === null || _route$employee === void 0 ? void 0 : _route$employee._id // Use 'employee'\n          };\n        });\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully:', routesToSave);\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log('Drag operation cancelled or no destination found.');\n      return;\n    }\n    console.log('Drag started from:', source.droppableId, 'to', destination.droppableId);\n    console.log('Before moving jobs:', {\n      jobPool,\n      routes\n    });\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n\n      // Moving from job pool to a route\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        console.log('Moving jobs from job pool to route:', destRouteIndex);\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        console.log('Selected jobs to move from job pool:', selectedJobsToMove);\n\n        // Add jobs to the route\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n          console.log(`Job added to route ${destRouteIndex}:`, job);\n        });\n\n        // Remove moved jobs from job pool\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          // If no jobs were selected, remove the single dragged job from the pool\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n        console.log('Updated job pool after move:', updatedJobPool);\n      }\n\n      // Moving between routes or within the same route\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\n        selectedJobs.forEach((jobId, index) => {\n          // Find job in the source route\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n          console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\n\n          // Add job to destination route\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n            console.log(`Added job ${jobId} to route ${destRouteIndex}`);\n          }\n        });\n      }\n      console.log('After moving jobs:', {\n        jobPool,\n        updatedRoutes\n      });\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const assignRoute = async (routeIndex, assigneeId) => {\n    const [type, id] = assigneeId.split('-');\n    const assignmentData = type === 'employee' ? {\n      employee: id\n    } : {\n      crew: id\n    };\n    try {\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', assignmentData);\n      if (response.ok) {\n        const updatedRoute = await response.json();\n        setRoutes(prevRoutes => {\n          const updatedDayRoutes = prevRoutes[selectedDay].map(route => {\n            if (route.index === routeIndex) {\n              return {\n                ...route,\n                employee: updatedRoute.employee,\n                crew: updatedRoute.crew\n              };\n            }\n            return route;\n          });\n          return {\n            ...prevRoutes,\n            [selectedDay]: updatedDayRoutes\n          };\n        });\n      } else {\n        throw new Error('Failed to assign route');\n      }\n    } catch (error) {\n      console.error('Error assigning route:', error);\n      setError('Failed to assign route. Please try again.');\n    }\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null; // Safeguard against undefined jobs\n\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      // Color for one-time jobs\n      recurring: 'bg-blue-600 hover:bg-blue-700' // Color for recurring jobs\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\n    const routeIndex = parseInt(id.split('-')[1], 10);\n    const route = routes[selectedDay][routeIndex];\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n        children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full p-2 bg-gray-700 text-white rounded\",\n            onChange: e => assignRoute(routeIndex, e.target.value),\n            value: route.assignedTo ? `employee-${route.assignedTo._id}` : route.crew ? `crew-${route.crew._id}` : '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Assign to...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Employees\",\n              children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `employee-${employee._id}`,\n                children: employee.name\n              }, employee._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Crews\",\n              children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `crew-${crew._id}`,\n                children: crew.name\n              }, crew._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-400\",\n            children: route.assignedTo ? `Assigned to: ${route.assignedTo.name}` : route.crew ? `Assigned to crew: ${route.crew.name}` : 'Not assigned'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: renderJobCard(job, !isJobPool, routeIndex, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 21\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-center\",\n          children: \"No jobs available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 15\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJobs([]),\n              className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"LfuitYkxD3tPOfdr1Jcjeeni9h8=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","routesWithAssignments","Object","entries","reduce","acc","day","dayRoutes","map","route","_fetchedEmployees$fin","_fetchedCrews$find","assignedTo","employee","_id","name","find","e","crew","c","err","console","saveRoutes","updatedRoutes","routesToSave","_route$crew","_route$employee","index","jobs","job","log","debouncedSaveRoutes","onDragEnd","result","source","destination","droppableId","prevRoutes","sourceId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","length","filter","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","addNewRoute","newRouteState","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","handleJobSelection","prevSelectedJobs","id","toggleJobExpansion","prev","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","Math","min","assignRoute","assigneeId","type","assignmentData","response","ok","updatedRoute","json","updatedDayRoutes","Error","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","isSelected","jobColors","oneTime","recurring","jobStyle","backgroundColor","isRecurring","border","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","stopPropagation","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","onChange","target","value","label","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [\r\n        fetchedRoutesResponse,\r\n        fetchedJobsResponse,\r\n        fetchedEmployeesResponse,\r\n        fetchedCrewsResponse,\r\n      ] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      // Ensure that the routes have the correct structure for assignments\r\n      const routesWithAssignments = Object.entries(validatedRoutes).reduce(\r\n        (acc, [day, dayRoutes]) => {\r\n          acc[day] = dayRoutes.map((route) => ({\r\n            ...route,\r\n            assignedTo: route.employee // Use 'employee' from backend\r\n              ? {\r\n                  _id: route.employee,\r\n                  name: fetchedEmployees.find((e) => e._id === route.employee)?.name,\r\n                }\r\n              : null,\r\n            crew: route.crew\r\n              ? {\r\n                  _id: route.crew,\r\n                  name: fetchedCrews.find((c) => c._id === route.crew)?.name,\r\n                }\r\n              : null,\r\n          }));\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n  \r\n      setRoutes(routesWithAssignments);\r\n      setJobPool(fetchedJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);  \r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(\r\n    async (updatedRoutes = routes) => {\r\n      setSaving(true);\r\n      try {\r\n        const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n          acc[day] = dayRoutes.map((route) => ({\r\n            index: route.index,\r\n            jobs: route.jobs.map((job) => (typeof job === 'string' ? job : job._id)),\r\n            crew: route.crew?._id,\r\n            employee: route.employee?._id, // Use 'employee'\r\n          }));\r\n          return acc;\r\n        }, {});\r\n  \r\n        await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n        console.log('Routes saved successfully:', routesToSave);\r\n      } catch (err) {\r\n        console.error('Error saving routes:', err);\r\n        setError('Failed to save routes. Please try again.');\r\n      } finally {\r\n        setSaving(false);\r\n      }\r\n    },\r\n    [routes]\r\n  );  \r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback(\r\n    (result) => {\r\n      const { source, destination } = result;\r\n\r\n      if (!destination) {\r\n        console.log('Drag operation cancelled or no destination found.');\r\n        return;\r\n      }\r\n\r\n      console.log('Drag started from:', source.droppableId, 'to', destination.droppableId);\r\n      console.log('Before moving jobs:', { jobPool, routes });\r\n\r\n      setRoutes((prevRoutes) => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const sourceId = source.droppableId.split('-');\r\n        const destId = destination.droppableId.split('-');\r\n\r\n        const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n        const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n\r\n        // Moving from job pool to a route\r\n        if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n          console.log('Moving jobs from job pool to route:', destRouteIndex);\r\n\r\n          const selectedJobsToMove =\r\n            selectedJobs.length > 0\r\n              ? jobPool.filter((job) => selectedJobs.includes(job._id))\r\n              : [jobPool[source.index]]; // Only the single dragged job\r\n\r\n          console.log('Selected jobs to move from job pool:', selectedJobsToMove);\r\n\r\n          // Add jobs to the route\r\n          selectedJobsToMove.forEach((job, index) => {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(\r\n              destination.index + index,\r\n              0,\r\n              job\r\n            );\r\n            console.log(`Job added to route ${destRouteIndex}:`, job);\r\n          });\r\n\r\n          // Remove moved jobs from job pool\r\n          const updatedJobPool = jobPool.filter((job) => !selectedJobs.includes(job._id));\r\n          if (selectedJobs.length === 0) {\r\n            // If no jobs were selected, remove the single dragged job from the pool\r\n            updatedJobPool.splice(source.index, 1);\r\n          }\r\n          setJobPool(updatedJobPool);\r\n\r\n          console.log('Updated job pool after move:', updatedJobPool);\r\n        }\r\n\r\n        // Moving between routes or within the same route\r\n        if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n          console.log(`Moving jobs from route ${sourceRouteIndex} to route ${destRouteIndex}`);\r\n\r\n          selectedJobs.forEach((jobId, index) => {\r\n            // Find job in the source route\r\n            const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(\r\n              (job) => job._id === jobId\r\n            );\r\n            const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(\r\n              jobIndex,\r\n              1\r\n            );\r\n\r\n            console.log(`Removed job ${jobId} from route ${sourceRouteIndex}`, removedJob);\r\n\r\n            // Add job to destination route\r\n            if (removedJob) {\r\n              updatedRoutes[selectedDay][destRouteIndex].jobs.splice(\r\n                destination.index,\r\n                0,\r\n                removedJob\r\n              );\r\n              console.log(`Added job ${jobId} to route ${destRouteIndex}`);\r\n            }\r\n          });\r\n        }\r\n\r\n        console.log('After moving jobs:', { jobPool, updatedRoutes });\r\n\r\n        setSelectedJobs([]); // Clear selected jobs after moving\r\n        return updatedRoutes;\r\n      });\r\n\r\n      debouncedSaveRoutes();\r\n    },\r\n    [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]\r\n  );\r\n\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [...routes[selectedDay], { index: routes[selectedDay].length, jobs: [] }],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n\r\n  const deleteRoute = useCallback(\r\n    async (routeIndex) => {\r\n      try {\r\n        setRoutes((prevRoutes) => {\r\n          const updatedRoutes = { ...prevRoutes };\r\n          const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n\r\n          setJobPool((prevJobPool) => [...prevJobPool, ...deletedRoute.jobs]);\r\n\r\n          updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n            ...route,\r\n            index: idx,\r\n          }));\r\n\r\n          return updatedRoutes;\r\n        });\r\n\r\n        await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n\r\n        await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n      } catch (error) {\r\n        console.error('Error deleting route:', error);\r\n        setError('Failed to delete route. Please try again.');\r\n      }\r\n    },\r\n    [selectedDay, saveRoutes]\r\n  );\r\n\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      setRoutes((prevRoutes) => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool((prevJobPool) => [...prevJobPool, removedJob]);\r\n        return updatedRoutes;\r\n      });\r\n\r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs,\r\n      });\r\n\r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs((prevSelectedJobs) => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter((id) => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs((prev) => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const assignRoute = async (routeIndex, assigneeId) => {\r\n    const [type, id] = assigneeId.split('-');\r\n    const assignmentData = type === 'employee' ? { employee: id } : { crew: id };\r\n  \r\n    try {\r\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', assignmentData);\r\n      \r\n      if (response.ok) {\r\n        const updatedRoute = await response.json();\r\n        setRoutes((prevRoutes) => {\r\n          const updatedDayRoutes = prevRoutes[selectedDay].map((route) => {\r\n            if (route.index === routeIndex) {\r\n              return {\r\n                ...route,\r\n                employee: updatedRoute.employee,\r\n                crew: updatedRoute.crew,\r\n              };\r\n            }\r\n            return route;\r\n          });\r\n    \r\n          return {\r\n            ...prevRoutes,\r\n            [selectedDay]: updatedDayRoutes,\r\n          };\r\n        });\r\n      } else {\r\n        throw new Error('Failed to assign route');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error assigning route:', error);\r\n      setError('Failed to assign route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    if (!job) return null; // Safeguard against undefined jobs\r\n\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const isSelected = selectedJobs.includes(job._id);\r\n\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700', // Color for one-time jobs\r\n      recurring: 'bg-blue-600 hover:bg-blue-700', // Color for recurring jobs\r\n    };\r\n\r\n    const jobStyle = {\r\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\r\n      border: isSelected ? '2px solid yellow' : 'none',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  removeJobFromRoute(routeIndex, jobIndex);\r\n                }}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleJobExpansion(job._id);\r\n              }}\r\n            >\r\n              {isExpanded ? (\r\n                <ChevronUpIcon className=\"h-5 w-5\" />\r\n              ) : (\r\n                <ChevronDownIcon className=\"h-5 w-5\" />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\r\n    const routeIndex = parseInt(id.split('-')[1], 10);\r\n    const route = routes[selectedDay][routeIndex];\r\n\r\n    return (\r\n      <Droppable droppableId={id}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${\r\n              isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'\r\n            }`}\r\n          >\r\n            {!isJobPool && (\r\n              <div className=\"mb-4\">\r\n                <select\r\n                  className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                  onChange={(e) => assignRoute(routeIndex, e.target.value)}\r\n                  value={\r\n                    route.assignedTo\r\n                      ? `employee-${route.assignedTo._id}`\r\n                      : route.crew\r\n                      ? `crew-${route.crew._id}`\r\n                      : ''\r\n                  }\r\n                >\r\n                  <option value=\"\">Assign to...</option>\r\n                  <optgroup label=\"Employees\">\r\n                    {employees.map((employee) => (\r\n                      <option key={employee._id} value={`employee-${employee._id}`}>\r\n                        {employee.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Crews\">\r\n                    {crews.map((crew) => (\r\n                      <option key={crew._id} value={`crew-${crew._id}`}>\r\n                        {crew.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                </select>\r\n                <p className=\"mt-2 text-sm text-gray-400\">\r\n                {route.assignedTo\r\n                  ? `Assigned to: ${route.assignedTo.name}`\r\n                  : route.crew\r\n                  ? `Assigned to crew: ${route.crew.name}`\r\n                  : 'Not assigned'}\r\n                </p>\r\n              </div>\r\n            )}\r\n            {jobs.length > 0 ? (\r\n              jobs.map((job, index) => (\r\n                <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      {renderJobCard(job, !isJobPool, routeIndex, index)}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-white text-center\">No jobs available</p>\r\n            )}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <button\r\n                  onClick={() => setSelectedJobs([])}\r\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                >\r\n                  Clear Selection\r\n                </button>\r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">\r\n              Click on jobs to select multiple, then drag to a route.\r\n            </p>\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}