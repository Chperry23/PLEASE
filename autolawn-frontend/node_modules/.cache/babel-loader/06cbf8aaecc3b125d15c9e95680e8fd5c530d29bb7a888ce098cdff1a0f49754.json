{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckIcon } from '@heroicons/react/24/solid';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      let fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n\n      // Filter bi-weekly jobs based on last service date\n      const now = new Date();\n      fetchedJobs = fetchedJobs.filter(job => {\n        if (job.recurrencePattern === 'Bi-weekly' && job.lastServiceDate) {\n          const lastServiceDate = new Date(job.lastServiceDate);\n          const daysSinceLastService = (now - lastServiceDate) / (1000 * 60 * 60 * 24); // Days since last service\n          return daysSinceLastService > 7; // Only include jobs where last service was more than 7 days ago\n        }\n        return true;\n      });\n      setRoutes(validatedRoutes);\n      setJobPool(fetchedJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => {\n          var _route$employee, _route$crew;\n          return {\n            index: route.index,\n            jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id),\n            employee: (_route$employee = route.employee) === null || _route$employee === void 0 ? void 0 : _route$employee._id,\n            crew: (_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id\n          };\n        });\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully:', routesToSave);\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log(\"Drag operation cancelled or no destination found.\");\n      return;\n    }\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n        });\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n      }\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        selectedJobs.forEach((jobId, index) => {\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n          }\n        });\n      }\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n  const handleCompleteJobs = async () => {\n    try {\n      await Promise.all(selectedJobs.map(jobId => fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {})));\n      setJobPool(prevJobPool => prevJobPool.filter(job => !selectedJobs.includes(job._id)));\n      setSelectedJobs([]); // Clear the selection\n      setSuccessMessage('Selected jobs completed successfully!');\n    } catch (error) {\n      console.error('Error completing jobs:', error);\n      setError('Failed to complete jobs. Please try again.');\n    }\n  };\n  const handleCompleteRoute = async routeIndex => {\n    try {\n      const routeJobs = routes[selectedDay][routeIndex].jobs.map(job => job._id);\n      await Promise.all(routeJobs.map(jobId => fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {})));\n      setSuccessMessage('Route completed successfully!');\n    } catch (error) {\n      console.error('Error completing route:', error);\n      setError('Failed to complete route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null; // Safeguard against undefined jobs\n\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'No Service Date';\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      weekly: 'bg-blue-600 hover:bg-blue-700',\n      biWeekly: 'bg-yellow-600 hover:bg-yellow-700',\n      monthly: 'bg-purple-600 hover:bg-purple-700'\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? job.recurrencePattern === 'Weekly' ? jobColors.weekly : job.recurrencePattern === 'Bi-weekly' ? jobColors.biWeekly : jobColors.monthly : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Last Service Date: \", lastServiceDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\n    const routeIndex = parseInt(id.split('-')[1], 10);\n    const route = routes[selectedDay][routeIndex];\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n        children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full p-2 bg-gray-700 text-white rounded\",\n            onChange: e => assignRoute(routeIndex, e.target.value),\n            value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n            disabled: assigningRoutes[routeIndex],\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Assign to...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Employees\",\n              children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `employee-${employee._id}`,\n                children: employee.name\n              }, employee._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Crews\",\n              children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `crew-${crew._id}`,\n                children: crew.name\n              }, crew._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompleteRoute(routeIndex),\n            className: \"bg-green-500 text-white px-2 py-1 rounded-md\",\n            children: \"Complete Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: renderJobCard(job, !isJobPool, routeIndex, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-center\",\n          children: \"No jobs available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCompleteJobs,\n                className: \"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\",\n                children: \"Complete Selected Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedJobs([]),\n                className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition ml-4\",\n                children: \"Clear Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 p-2 bg-gray-800 rounded-lg text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Job Color Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"flex space-x-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), \" One-time job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 19\n                }, this), \" Weekly\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-yellow-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), \" Bi-weekly\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), \" Monthly\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"Meu64TMiskP91WAyR776YwvBkgo=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","CheckIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","successMessage","setSuccessMessage","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","now","Date","filter","job","recurrencePattern","lastServiceDate","daysSinceLastService","err","console","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","_route$employee","_route$crew","index","jobs","_id","employee","crew","log","debouncedSaveRoutes","onDragEnd","result","source","destination","prevRoutes","sourceId","droppableId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","length","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","handleCompleteJobs","prevJobPool","handleCompleteRoute","routeIndex","routeJobs","handleJobSelection","prevSelectedJobs","id","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","name","isSelected","toLocaleDateString","jobColors","oneTime","weekly","biWeekly","monthly","jobStyle","backgroundColor","isRecurring","border","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","removeJobFromRoute","toggleJobExpansion","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","onChange","assignRoute","target","value","disabled","assigningRoutes","label","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","changeSelectedDay","cycleVisibleRoutes","addNewRoute","slice","deleteRoute","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { CheckIcon } from '@heroicons/react/24/solid';\r\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [\r\n        fetchedRoutesResponse,\r\n        fetchedJobsResponse,\r\n        fetchedEmployeesResponse,\r\n        fetchedCrewsResponse,\r\n      ] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n\r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      let fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n\r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n\r\n      // Filter bi-weekly jobs based on last service date\r\n      const now = new Date();\r\n      fetchedJobs = fetchedJobs.filter((job) => {\r\n        if (job.recurrencePattern === 'Bi-weekly' && job.lastServiceDate) {\r\n          const lastServiceDate = new Date(job.lastServiceDate);\r\n          const daysSinceLastService = (now - lastServiceDate) / (1000 * 60 * 60 * 24); // Days since last service\r\n          return daysSinceLastService > 7; // Only include jobs where last service was more than 7 days ago\r\n        }\r\n        return true;\r\n      });\r\n\r\n      setRoutes(validatedRoutes);\r\n      setJobPool(fetchedJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)),\r\n          employee: route.employee?._id,\r\n          crew: route.crew?._id,\r\n        }));\r\n        return acc;\r\n      }, {});\r\n\r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('Routes saved successfully:', routesToSave);\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes]);\r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) {\r\n      console.log(\"Drag operation cancelled or no destination found.\");\r\n      return;\r\n    }\r\n\r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n\r\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n\r\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n        const selectedJobsToMove = selectedJobs.length > 0\r\n          ? jobPool.filter(job => selectedJobs.includes(job._id))\r\n          : [jobPool[source.index]];  // Only the single dragged job\r\n\r\n        selectedJobsToMove.forEach((job, index) => {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\r\n        });\r\n\r\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\r\n        if (selectedJobs.length === 0) {\r\n          updatedJobPool.splice(source.index, 1);\r\n        }\r\n        setJobPool(updatedJobPool);\r\n      }\r\n\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        selectedJobs.forEach((jobId, index) => {\r\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\r\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\r\n\r\n          if (removedJob) {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\r\n          }\r\n        });\r\n      }\r\n\r\n      setSelectedJobs([]); // Clear selected jobs after moving\r\n      return updatedRoutes;\r\n    });\r\n\r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\r\n\r\n  const handleCompleteJobs = async () => {\r\n    try {\r\n      await Promise.all(\r\n        selectedJobs.map(jobId => fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {}))\r\n      );\r\n      setJobPool(prevJobPool => prevJobPool.filter(job => !selectedJobs.includes(job._id)));\r\n      setSelectedJobs([]); // Clear the selection\r\n      setSuccessMessage('Selected jobs completed successfully!');\r\n    } catch (error) {\r\n      console.error('Error completing jobs:', error);\r\n      setError('Failed to complete jobs. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCompleteRoute = async (routeIndex) => {\r\n    try {\r\n      const routeJobs = routes[selectedDay][routeIndex].jobs.map(job => job._id);\r\n      await Promise.all(\r\n        routeJobs.map(jobId => fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {}))\r\n      );\r\n      setSuccessMessage('Route completed successfully!');\r\n    } catch (error) {\r\n      console.error('Error completing route:', error);\r\n      setError('Failed to complete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    if (!job) return null; // Safeguard against undefined jobs\r\n\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const isSelected = selectedJobs.includes(job._id);\r\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'No Service Date';\r\n\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700',\r\n      weekly: 'bg-blue-600 hover:bg-blue-700',\r\n      biWeekly: 'bg-yellow-600 hover:bg-yellow-700',\r\n      monthly: 'bg-purple-600 hover:bg-purple-700',\r\n    };\r\n\r\n    const jobStyle = {\r\n      backgroundColor: job.isRecurring\r\n        ? job.recurrencePattern === 'Weekly'\r\n          ? jobColors.weekly\r\n          : job.recurrencePattern === 'Bi-weekly'\r\n            ? jobColors.biWeekly\r\n            : jobColors.monthly\r\n        : jobColors.oneTime,\r\n      border: isSelected ? '2px solid yellow' : 'none',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n            <p className=\"text-gray-400\">Last Service Date: {lastServiceDate}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\r\n    const routeIndex = parseInt(id.split('-')[1], 10);\r\n    const route = routes[selectedDay][routeIndex];\r\n\r\n    return (\r\n      <Droppable droppableId={id}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n          >\r\n            {!isJobPool && (\r\n              <div className=\"mb-4 flex justify-between items-center\">\r\n                <select\r\n                  className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                  onChange={(e) => assignRoute(routeIndex, e.target.value)}\r\n                  value={route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : ''}\r\n                  disabled={assigningRoutes[routeIndex]}\r\n                >\r\n                  <option value=\"\">Assign to...</option>\r\n                  <optgroup label=\"Employees\">\r\n                    {employees.map((employee) => (\r\n                      <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Crews\">\r\n                    {crews.map((crew) => (\r\n                      <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                    ))}\r\n                  </optgroup>\r\n                </select>\r\n                <button\r\n                  onClick={() => handleCompleteRoute(routeIndex)}\r\n                  className=\"bg-green-500 text-white px-2 py-1 rounded-md\"\r\n                >\r\n                  Complete Route\r\n                </button>\r\n              </div>\r\n            )}\r\n            {jobs.length > 0 ? (\r\n              jobs.map((job, index) => (\r\n                <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      {renderJobCard(job, !isJobPool, routeIndex, index)}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-white text-center\">No jobs available</p>\r\n            )}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <>\r\n                  <button\r\n                    onClick={handleCompleteJobs}\r\n                    className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\"\r\n                  >\r\n                    Complete Selected Jobs\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setSelectedJobs([])}\r\n                    className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition ml-4\"\r\n                  >\r\n                    Clear Selection\r\n                  </button>\r\n                </>\r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">\r\n              Click on jobs to select multiple, then drag to a route.\r\n            </p>\r\n\r\n            {/* Job Color Legend */}\r\n            <div className=\"mt-2 p-2 bg-gray-800 rounded-lg text-white\">\r\n              <h3 className=\"font-bold mb-2\">Job Color Legend</h3>\r\n              <ul className=\"flex space-x-8\">\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-yellow-600 mr-2\" /> Bi-weekly\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}