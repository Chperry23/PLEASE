{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\components\\\\CustomerNotifcations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerNotifications = ({\n  customers\n}) => {\n  _s();\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [sending, setSending] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleCustomerSelect = customerId => {\n    setSelectedCustomers(prev => prev.includes(customerId) ? prev.filter(id => id !== customerId) : [...prev, customerId]);\n  };\n  const handleSendNotification = async () => {\n    if (selectedCustomers.length === 0) {\n      setError('Please select at least one customer.');\n      return;\n    }\n    if (!message.trim()) {\n      setError('Please enter a message.');\n      return;\n    }\n    setSending(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/notifications', {\n        customerIds: selectedCustomers,\n        message\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setSuccess('Notifications sent successfully!');\n      setSelectedCustomers([]);\n      setMessage('');\n    } catch (error) {\n      setError('Failed to send notifications. Please try again.');\n      console.error('Error sending notifications:', error);\n    } finally {\n      setSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-surface p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Send Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Select Customers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-60 overflow-y-auto\",\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: customer._id,\n            checked: selectedCustomers.includes(customer._id),\n            onChange: () => handleCustomerSelect(customer._id),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: customer._id,\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, customer._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"w-full p-2 border rounded\",\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500 mb-2\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendNotification,\n      disabled: sending,\n      className: `bg-primary text-white px-4 py-2 rounded ${sending ? 'opacity-50 cursor-not-allowed' : 'hover:bg-opacity-90'}`,\n      children: sending ? 'Sending...' : 'Send Notifications'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerNotifications, \"RhWBUhVDjIB7Qc6Ol1ouD38ER5I=\");\n_c = CustomerNotifications;\nexport default CustomerNotifications;\nvar _c;\n$RefreshReg$(_c, \"CustomerNotifications\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CustomerNotifications","customers","_s","selectedCustomers","setSelectedCustomers","message","setMessage","sending","setSending","error","setError","success","setSuccess","handleCustomerSelect","customerId","prev","includes","filter","id","handleSendNotification","length","trim","response","post","customerIds","headers","Authorization","localStorage","getItem","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","customer","type","_id","checked","onChange","htmlFor","name","value","e","target","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/components/CustomerNotifcations.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CustomerNotifications = ({ customers }) => {\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [sending, setSending] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleCustomerSelect = (customerId) => {\r\n    setSelectedCustomers(prev => \r\n      prev.includes(customerId) \r\n        ? prev.filter(id => id !== customerId)\r\n        : [...prev, customerId]\r\n    );\r\n  };\r\n\r\n  const handleSendNotification = async () => {\r\n    if (selectedCustomers.length === 0) {\r\n      setError('Please select at least one customer.');\r\n      return;\r\n    }\r\n    if (!message.trim()) {\r\n      setError('Please enter a message.');\r\n      return;\r\n    }\r\n\r\n    setSending(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/notifications', {\r\n        customerIds: selectedCustomers,\r\n        message\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setSuccess('Notifications sent successfully!');\r\n      setSelectedCustomers([]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      setError('Failed to send notifications. Please try again.');\r\n      console.error('Error sending notifications:', error);\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Send Notifications</h2>\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">Select Customers:</h3>\r\n        <div className=\"max-h-60 overflow-y-auto\">\r\n          {customers.map(customer => (\r\n            <div key={customer._id} className=\"flex items-center mb-2\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={customer._id}\r\n                checked={selectedCustomers.includes(customer._id)}\r\n                onChange={() => handleCustomerSelect(customer._id)}\r\n                className=\"mr-2\"\r\n              />\r\n              <label htmlFor={customer._id}>{customer.name}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">Message:</h3>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className=\"w-full p-2 border rounded\"\r\n          rows=\"4\"\r\n        ></textarea>\r\n      </div>\r\n      {error && <p className=\"text-red-500 mb-2\">{error}</p>}\r\n      {success && <p className=\"text-green-500 mb-2\">{success}</p>}\r\n      <button\r\n        onClick={handleSendNotification}\r\n        disabled={sending}\r\n        className={`bg-primary text-white px-4 py-2 rounded ${sending ? 'opacity-50 cursor-not-allowed' : 'hover:bg-opacity-90'}`}\r\n      >\r\n        {sending ? 'Sending...' : 'Send Notifications'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerNotifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}