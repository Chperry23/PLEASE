{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('token');\n  }, []);\n  const updateUserSubscription = async userId => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/user/${userId}/subscription`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching subscription data:', error);\n      return {\n        subscriptionTier: 'Free',\n        subscriptionActive: false,\n        trialEndDate: new Date().toISOString()\n      };\n    }\n  };\n  const setSubscriptionTier = async tier => {\n    try {\n      const response = await axiosInstance.post(`${API_URL}/api/user/set-subscription-tier`, {\n        tier\n      });\n      setUser(response.data.user);\n      return response.data.user;\n    } catch (error) {\n      console.error('Error setting subscription tier:', error);\n      throw error;\n    }\n  };\n  const verifyToken = useCallback(async token => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/auth/verify`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const userData = response.data.user;\n      const subscriptionData = await updateUserSubscription(userData._id);\n      setUser({\n        ...userData,\n        ...subscriptionData\n      });\n    } catch (error) {\n      console.error('Token verification failed', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, [logout]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    } else {\n      setLoading(false);\n    }\n  }, [verifyToken]);\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post(`${API_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n      const subscriptionData = await updateUserSubscription(userData._id);\n      const updatedUser = {\n        ...userData,\n        ...subscriptionData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('token', token);\n      return updatedUser;\n    } catch (error) {\n      var _error$response;\n      console.error('Login failed', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  };\n\n  // Register with name, email, password, and plan\n  const register = async (name, email, password, plan) => {\n    try {\n      const response = await axiosInstance.post(`${API_URL}/api/auth/register`, {\n        name,\n        email,\n        password,\n        plan\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      setUser(user);\n      localStorage.setItem('token', token);\n      return user;\n    } catch (error) {\n      var _error$response2;\n      console.error('Registration failed', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  };\n\n  // Initiate Google OAuth login\n  const loginWithGoogle = () => {\n    window.location.href = `${API_URL}/api/auth/google`;\n  };\n\n  // Handle login success by storing token and verifying it\n  const handleLoginSuccess = useCallback(async token => {\n    localStorage.setItem('token', token);\n    await verifyToken(token);\n  }, [verifyToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      loginWithGoogle,\n      handleLoginSuccess,\n      register,\n      logout,\n      loading,\n      setUser,\n      updateUserSubscription,\n      setSubscriptionTier\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"L8N3bdHCPGS20PKM6B/+3BLRo3Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","axiosInstance","jsxDEV","_jsxDEV","AuthContext","API_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s","user","setUser","loading","setLoading","logout","localStorage","removeItem","updateUserSubscription","userId","response","get","data","error","console","subscriptionTier","subscriptionActive","trialEndDate","Date","toISOString","setSubscriptionTier","tier","post","verifyToken","token","headers","Authorization","userData","subscriptionData","_id","getItem","login","email","password","updatedUser","setItem","_error$response","message","register","name","plan","_error$response2","loginWithGoogle","window","location","href","handleLoginSuccess","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport axiosInstance from '../utils/axiosInstance';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const logout = useCallback(() => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  }, []);\r\n\r\n  const updateUserSubscription = async (userId) => {\r\n    try {\r\n      const response = await axiosInstance.get(`${API_URL}/api/user/${userId}/subscription`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching subscription data:', error);\r\n      return {\r\n        subscriptionTier: 'Free',\r\n        subscriptionActive: false,\r\n        trialEndDate: new Date().toISOString()\r\n      };\r\n    }\r\n  };\r\n  \r\n  const setSubscriptionTier = async (tier) => {\r\n    try {\r\n      const response = await axiosInstance.post(`${API_URL}/api/user/set-subscription-tier`, { tier });\r\n      setUser(response.data.user);\r\n      return response.data.user;\r\n    } catch (error) {\r\n      console.error('Error setting subscription tier:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const verifyToken = useCallback(async (token) => {\r\n    try {\r\n      const response = await axiosInstance.get(`${API_URL}/api/auth/verify`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const userData = response.data.user;\r\n      const subscriptionData = await updateUserSubscription(userData._id);\r\n      setUser({ ...userData, ...subscriptionData });\r\n    } catch (error) {\r\n      console.error('Token verification failed', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [logout]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      verifyToken(token);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [verifyToken]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axiosInstance.post(`${API_URL}/api/auth/login`, { email, password });\r\n      const { user: userData, token } = response.data;\r\n      const subscriptionData = await updateUserSubscription(userData._id);\r\n      const updatedUser = { ...userData, ...subscriptionData };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('token', token);\r\n      return updatedUser;\r\n    } catch (error) {\r\n      console.error('Login failed', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register with name, email, password, and plan\r\n  const register = async (name, email, password, plan) => {\r\n    try {\r\n      const response = await axiosInstance.post(`${API_URL}/api/auth/register`, {\r\n        name,\r\n        email,\r\n        password,\r\n        plan,\r\n      });\r\n      const { user, token } = response.data;\r\n      setUser(user);\r\n      localStorage.setItem('token', token);\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Registration failed', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Initiate Google OAuth login\r\n  const loginWithGoogle = () => {\r\n    window.location.href = `${API_URL}/api/auth/google`;\r\n  };\r\n\r\n  // Handle login success by storing token and verifying it\r\n  const handleLoginSuccess = useCallback(async (token) => {\r\n    localStorage.setItem('token', token);\r\n    await verifyToken(token);\r\n  }, [verifyToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, login, loginWithGoogle, handleLoginSuccess, register, logout, loading, setUser,updateUserSubscription,\r\n        setSubscriptionTier }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}