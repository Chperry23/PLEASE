{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let jobsData = [];\n      let routesData = [];\n      const storedJobs = localStorage.getItem('jobs');\n      const storedRoutes = localStorage.getItem('routes');\n      console.log('Stored jobs:', storedJobs);\n      console.log('Stored routes:', storedRoutes);\n      if (storedJobs && storedJobs !== 'undefined') {\n        try {\n          jobsData = JSON.parse(storedJobs);\n          console.log('Jobs loaded from localStorage:', jobsData);\n        } catch (parseError) {\n          console.error('Error parsing stored jobs:', parseError);\n        }\n      }\n      if (storedRoutes && storedRoutes !== 'undefined') {\n        try {\n          routesData = JSON.parse(storedRoutes);\n          console.log('Routes loaded from localStorage:', routesData);\n        } catch (parseError) {\n          console.error('Error parsing stored routes:', parseError);\n        }\n      }\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\n        console.log('Fetching fresh jobs data from API');\n        const jobsResponse = await fetchJobs();\n        console.log('Jobs response from API:', jobsResponse);\n        if (Array.isArray(jobsResponse)) {\n          jobsData = jobsResponse;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else if (Array.isArray(jobsResponse.data)) {\n          jobsData = jobsResponse.data;\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\n          console.log('Jobs data saved to localStorage:', jobsData);\n        } else {\n          console.warn('No jobs data returned from API or data is invalid');\n        }\n      }\n      if (!Array.isArray(routesData) || routesData.length === 0) {\n        console.log('Fetching fresh routes data from API');\n        const routesResponse = await fetchRoutes();\n        console.log('Routes response from API:', routesResponse);\n        if (Array.isArray(routesResponse)) {\n          routesData = routesResponse;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else if (Array.isArray(routesResponse.data)) {\n          routesData = routesResponse.data;\n          localStorage.setItem('routes', JSON.stringify(routesData));\n          console.log('Routes data saved to localStorage:', routesData);\n        } else {\n          console.warn('No routes data returned from API or data is invalid');\n        }\n      }\n      console.log('Final jobsData:', jobsData);\n      console.log('Final routesData:', routesData);\n      setJobs(prevJobs => {\n        console.log('Updating jobs state:', jobsData);\n        return jobsData;\n      });\n      setRoutes(prevRoutes => {\n        console.log('Updating routes state:', routesData);\n        return routesData;\n      });\n      generateEvents(jobsData, routesData);\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  useEffect(() => {\n    console.log('Current jobs:', jobs);\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\n  }, [jobs]);\n  useEffect(() => {\n    console.log('Current routes:', routes);\n    console.log('Current jobs:', jobs);\n  }, [routes, jobs]);\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\n  console.log('Stored routes:', localStorage.getItem('routes'));\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = (jobsData || []).map(job => ({\n      id: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id',\n      title: (job === null || job === void 0 ? void 0 : job.title) || 'No Title',\n      start: job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate) : null,\n      end: job !== null && job !== void 0 && job.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = (routesData || []).map(route => ({\n      id: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id',\n      title: (route === null || route === void 0 ? void 0 : route.name) || 'Unnamed Route',\n      start: route !== null && route !== void 0 && route.scheduledDate ? new Date(route.scheduledDate) : null,\n      end: route !== null && route !== void 0 && route.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\n      info.revert();\n      setError('Canceled or completed jobs cannot be scheduled.');\n      return;\n    }\n    setPendingEvent(event);\n    setShowStartTimeModal(true);\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {}\n    };\n    try {\n      if (eventData.extendedProps.type === 'job') {\n        await handleJobSchedule(eventData);\n      } else if (eventData.extendedProps.type === 'route') {\n        await handleRouteSchedule(eventData);\n      }\n      setEvents(prevEvents => [...prevEvents, eventData]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const handleJobSchedule = async eventData => {\n    const jobId = eventData.extendedProps.jobId;\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n    if (job && job.route) {\n      throw new Error('This job is already assigned to a route');\n    }\n    const updatedJob = await updateJob(jobId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? {\n      ...j,\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    } : j));\n    return updatedJob;\n  };\n  const handleRouteSchedule = async eventData => {\n    const routeId = eventData.extendedProps.routeId;\n    const existingRoute = routes.find(r => (r === null || r === void 0 ? void 0 : r._id) === routeId);\n    if (!existingRoute) {\n      throw new Error('Route not found');\n    }\n    const updatedRoute = await updateRoute(routeId, {\n      scheduledDate: eventData.start,\n      scheduledEndDate: eventData.end\n    });\n    setRoutes(prevRoutes => prevRoutes.map(r => (r === null || r === void 0 ? void 0 : r._id) === routeId ? updatedRoute : r));\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const jobId = result.draggableId;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const updateLocalStorage = (jobs, routes) => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n    localStorage.setItem('routes', JSON.stringify(routes));\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      const updatedRoutes = routes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          jobs: route.jobs.filter(j => j.job !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      });\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n\n      // Remove associated events from the calendar\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n\n      // Update local storage\n      const updatedRoutes = routes.filter(route => route._id !== routeId);\n      localStorage.setItem('routes', JSON.stringify(updatedRoutes));\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      console.log('Moving job', jobId, 'to route', routeId);\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      console.log('Job to move:', job);\n      if (job.status === 'Canceled' || job.status === 'Completed') {\n        setError('Canceled or completed jobs cannot be added to routes.');\n        return;\n      }\n      const updatedRoute = await updateRoute(routeId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      console.log('Updated route:', updatedRoute);\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      console.log('Updated job:', updatedJob);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        console.log('New routes state:', newRoutes);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? updatedJob : j);\n        console.log('New jobs state:', newJobs);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const handleEventUpdate = async event => {\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\n    }\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      try {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing job from calendar:', error);\n        setError('Failed to remove job. Please try again.');\n      }\n    } else if (event.extendedProps.type === 'route') {\n      try {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing route from calendar:', error);\n        setError('Failed to remove route. Please try again.');\n      }\n    }\n  };\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\n        return newRoutes;\n      });\n      setJobs(prevJobs => {\n        const newJobs = prevJobs.map(j => j._id === jobId ? updatedJob : j);\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\n        return newJobs;\n      });\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const renderRouteTimeline = () => {\n    console.log('Rendering route timeline. Routes:', routes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-timeline\",\n      children: routes.map(route => {\n        console.log('Rendering route:', route);\n        console.log('Jobs in route:', route.jobs);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-container mb-8 bg-gray-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: route === null || route === void 0 ? void 0 : route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list\",\n            children: route.jobs && route.jobs.map((jobItem, index) => {\n              var _job$customer;\n              // Use jobItem.job._id instead of jobItem.job\n              const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job._id);\n              console.log('Job item:', jobItem, 'Found job:', job);\n              if (!job) return null;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job-item bg-blue-950 rounded p-2 text-white text-sm mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job === null || job === void 0 ? void 0 : job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Scheduled: \", jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                  className: \"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm\",\n                  children: \"Remove from Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this)]\n              }, job === null || job === void 0 ? void 0 : job._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), (!route.jobs || route.jobs.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: \"No jobs assigned to this route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 17\n          }, this)]\n        }, route === null || route === void 0 ? void 0 : route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this);\n  };\n  const EventModal = ({\n    event,\n    onClose,\n    onSave,\n    onRemove\n  }) => {\n    _s();\n    const [title, setTitle] = useState(event.title);\n    const [start, setStart] = useState(event.start);\n    const [end, setEnd] = useState(event.end);\n    const handleSave = () => {\n      onSave({\n        ...event,\n        title,\n        start,\n        end\n      });\n      onClose();\n    };\n    const handleRemove = () => {\n      onRemove(event);\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-gray-800\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: start ? start.toISOString().slice(0, 16) : '',\n          onChange: e => setStart(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: end ? end.toISOString().slice(0, 16) : '',\n          onChange: e => setEnd(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded text-gray-800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemove,\n            className: \"px-4 py-2 bg-red-500 text-white rounded\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n  const StartTimeModal = ({\n    onClose,\n    onSubmit\n  }) => {\n    _s2();\n    const [startTime, setStartTime] = useState('');\n    const handleSubmit = e => {\n      e.preventDefault();\n      const [hours, minutes] = startTime.split(':');\n      const dateTime = new Date();\n      dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n      onSubmit(dateTime);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-gray-800\",\n          children: \"Set Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            className: \"w-full mb-4 p-2 border rounded text-gray-800\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: onClose,\n              className: \"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n              children: \"Set Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(StartTimeModal, \"oNJ3KK/FuVmn7XQQd1o1dE13LZ8=\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 692,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 693,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route === null || route === void 0 ? void 0 : route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route === null || route === void 0 ? void 0 : route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route === null || route === void 0 ? void 0 : route.name);\n                            if (newName) handleEditRouteName(route === null || route === void 0 ? void 0 : route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 753,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 762,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 752,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 29\n                    }, this), route.jobs && route.jobs.map((jobItem, index) => {\n                      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                      if (!job) return null;\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job === null || job === void 0 ? void 0 : job._id,\n                        index: index,\n                        children: provided => {\n                          var _job$customer2;\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            className: \"bg-white p-2 mb-2 rounded shadow\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"font-semibold\",\n                              children: job === null || job === void 0 ? void 0 : job.title\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 788,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: job === null || job === void 0 ? void 0 : job.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 789,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 790,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 791,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Scheduled: \", jobItem !== null && jobItem !== void 0 && jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 792,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                              className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                              children: \"Remove from Route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 793,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 782,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 780,\n                        columnNumber: 33\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 27\n                  }, this)\n                }, route === null || route === void 0 ? void 0 : route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job === null || job === void 0 ? void 0 : job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer3;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 833,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job === null || job === void 0 ? void 0 : job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer3 = job.customer) === null || _job$customer3 === void 0 ? void 0 : _job$customer3.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 836,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 837,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 821,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job === null || job === void 0 ? void 0 : job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 868,\n                          columnNumber: 31\n                        }, this)\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 858,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 856,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 872,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route === null || route === void 0 ? void 0 : route._id,\n                          title: route === null || route === void 0 ? void 0 : route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route === null || route === void 0 ? void 0 : route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route === null || route === void 0 ? void 0 : route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 885,\n                          columnNumber: 31\n                        }, this)\n                      }, route === null || route === void 0 ? void 0 : route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 875,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 873,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 893,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 19\n              }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold mb-2\",\n                  children: route === null || route === void 0 ? void 0 : route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 934,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                  jobs: route.jobs.map(jobItem => {\n                    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                    return job ? {\n                      ...job,\n                      scheduledDate: jobItem.scheduledDate,\n                      scheduledEndDate: jobItem.scheduledEndDate\n                    } : null;\n                  }).filter(Boolean),\n                  route: route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 23\n                }, this)]\n              }, route === null || route === void 0 ? void 0 : route._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this), activeTab === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Timelines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 19\n              }, this), renderRouteTimeline()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 696,\n    columnNumber: 5\n  }, this);\n};\n_s3(BuildRoutes, \"e6CbYxmEcr079Si0o3XiWnqjltY=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s3","_s","$RefreshSig$","_s2","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","navigate","fetchData","jobsData","routesData","storedJobs","localStorage","getItem","storedRoutes","console","log","JSON","parse","parseError","Array","isArray","length","jobsResponse","setItem","stringify","data","warn","routesResponse","prevJobs","prevRoutes","generateEvents","filter","job","route","err","jobEvents","map","id","_id","title","start","scheduledDate","Date","end","scheduledEndDate","color","extendedProps","type","jobId","event","routeEvents","name","routeId","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","setTimeout","handleEventDrop","info","find","j","revert","handleEventUpdate","handleEventReceive","status","handleStartTimeSubmit","startTime","startDate","setHours","getHours","getMinutes","endDate","getTime","handleJobSchedule","handleRouteSchedule","prevEvents","Error","updatedJob","existingRoute","r","updatedRoute","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updateLocalStorage","$pull","updatedRoutes","updatedJobs","updatedDestRoute","$addToSet","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","customers","handleDeleteRoute","handleEventClick","handleEventResize","newRoutes","newJobs","e","handleRemoveEvent","handleRemoveJobFromRoute","renderRouteTimeline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","jobItem","index","_job$customer","customer","toLocaleString","onClick","EventModal","onClose","onSave","onRemove","setTitle","setStart","setEnd","handleSave","handleRemove","value","onChange","target","toISOString","slice","StartTimeModal","onSubmit","setStartTime","handleSubmit","preventDefault","hours","minutes","dateTime","parseInt","required","role","tab","charAt","toUpperCase","provided","ref","innerRef","droppableProps","prompt","_job$customer2","draggableProps","dragHandleProps","description","placeholder","_job$customer3","duration","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","Boolean","_c2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let jobsData = [];\r\n      let routesData = [];\r\n  \r\n      const storedJobs = localStorage.getItem('jobs');\r\n      const storedRoutes = localStorage.getItem('routes');\r\n  \r\n      console.log('Stored jobs:', storedJobs);\r\n      console.log('Stored routes:', storedRoutes);\r\n  \r\n      if (storedJobs && storedJobs !== 'undefined') {\r\n        try {\r\n          jobsData = JSON.parse(storedJobs);\r\n          console.log('Jobs loaded from localStorage:', jobsData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored jobs:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (storedRoutes && storedRoutes !== 'undefined') {\r\n        try {\r\n          routesData = JSON.parse(storedRoutes);\r\n          console.log('Routes loaded from localStorage:', routesData);\r\n        } catch (parseError) {\r\n          console.error('Error parsing stored routes:', parseError);\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(jobsData) || jobsData.length === 0) {\r\n        console.log('Fetching fresh jobs data from API');\r\n        const jobsResponse = await fetchJobs();\r\n        console.log('Jobs response from API:', jobsResponse);\r\n  \r\n        if (Array.isArray(jobsResponse)) {\r\n          jobsData = jobsResponse;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else if (Array.isArray(jobsResponse.data)) {\r\n          jobsData = jobsResponse.data;\r\n          localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n          console.log('Jobs data saved to localStorage:', jobsData);\r\n        } else {\r\n          console.warn('No jobs data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      if (!Array.isArray(routesData) || routesData.length === 0) {\r\n        console.log('Fetching fresh routes data from API');\r\n        const routesResponse = await fetchRoutes();\r\n        console.log('Routes response from API:', routesResponse);\r\n  \r\n        if (Array.isArray(routesResponse)) {\r\n          routesData = routesResponse;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else if (Array.isArray(routesResponse.data)) {\r\n          routesData = routesResponse.data;\r\n          localStorage.setItem('routes', JSON.stringify(routesData));\r\n          console.log('Routes data saved to localStorage:', routesData);\r\n        } else {\r\n          console.warn('No routes data returned from API or data is invalid');\r\n        }\r\n      }\r\n  \r\n      console.log('Final jobsData:', jobsData);\r\n      console.log('Final routesData:', routesData);\r\n  \r\n      setJobs(prevJobs => {\r\n        console.log('Updating jobs state:', jobsData);\r\n        return jobsData;\r\n      });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        console.log('Updating routes state:', routesData);\r\n        return routesData;\r\n      });\r\n  \r\n      generateEvents(jobsData, routesData);\r\n  \r\n      console.log('Unassigned jobs:', jobsData.filter(job => !job.route));\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n  \r\n  useEffect(() => {\r\n    console.log('Current jobs:', jobs);\r\n    console.log('Unassigned jobs:', jobs.filter(job => !job.route));\r\n  }, [jobs]);\r\n\r\n  useEffect(() => {\r\n    console.log('Current routes:', routes);\r\n    console.log('Current jobs:', jobs);\r\n  }, [routes, jobs]);\r\n\r\n  console.log('Stored jobs:', localStorage.getItem('jobs'));\r\n  console.log('Stored routes:', localStorage.getItem('routes'));\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = (jobsData || []).map(job => ({\r\n      id: job?._id || 'unknown-id',\r\n      title: job?.title || 'No Title',\r\n      start: job?.scheduledDate ? new Date(job.scheduledDate) : null,\r\n      end: job?.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = (routesData || []).map(route => ({\r\n      id: route?._id || 'unknown-id',\r\n      title: route?.name || 'Unnamed Route',\r\n      start: route?.scheduledDate ? new Date(route.scheduledDate) : null,\r\n      end: route?.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n  \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && (job.status === 'Canceled' || job.status === 'Completed')) {\r\n      info.revert();\r\n      setError('Canceled or completed jobs cannot be scheduled.');\r\n      return;\r\n    }\r\n  \r\n    setPendingEvent(event);\r\n    setShowStartTimeModal(true);\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || {}\r\n    };\r\n\r\n    try {\r\n      if (eventData.extendedProps.type === 'job') {\r\n        await handleJobSchedule(eventData);\r\n      } else if (eventData.extendedProps.type === 'route') {\r\n        await handleRouteSchedule(eventData);\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, eventData]);\r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const handleJobSchedule = async (eventData) => {\r\n    const jobId = eventData.extendedProps.jobId;\r\n    const job = jobs.find(j => j?._id === jobId);\r\n  \r\n    if (job && job.route) {\r\n      throw new Error('This job is already assigned to a route');\r\n    }\r\n  \r\n    const updatedJob = await updateJob(jobId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n  \r\n    setJobs(prevJobs => prevJobs.map(j =>\r\n      j._id === jobId ? { ...j, scheduledDate: eventData.start, scheduledEndDate: eventData.end } : j\r\n    ));\r\n  \r\n    return updatedJob;\r\n  };\r\n\r\n  const handleRouteSchedule = async (eventData) => {\r\n    const routeId = eventData.extendedProps.routeId;\r\n    const existingRoute = routes.find(r => r?._id === routeId);\r\n\r\n    if (!existingRoute) {\r\n      throw new Error('Route not found');\r\n    }\r\n\r\n    const updatedRoute = await updateRoute(routeId, {\r\n      scheduledDate: eventData.start,\r\n      scheduledEndDate: eventData.end\r\n    });\r\n\r\n    setRoutes(prevRoutes => prevRoutes.map(r => r?._id === routeId ? updatedRoute : r));\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const jobId = result.draggableId;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const updateLocalStorage = (jobs, routes) => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs));\r\n    localStorage.setItem('routes', JSON.stringify(routes));\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const job = jobs.find(j => j?._id === jobId);\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, jobs: route.jobs.filter(j => j.job !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      });\r\n\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n\r\n      // Remove associated events from the calendar\r\n      setEvents(prevEvents => prevEvents.filter(event =>\r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n\r\n      setSuccessMessage('Route deleted successfully!');\r\n\r\n      // Update local storage\r\n      const updatedRoutes = routes.filter(route => route._id !== routeId);\r\n      localStorage.setItem('routes', JSON.stringify(updatedRoutes));\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      console.log('Moving job', jobId, 'to route', routeId);\r\n  \r\n      const job = jobs.find(j => j?._id === jobId);\r\n      console.log('Job to move:', job);\r\n  \r\n      if (job.status === 'Canceled' || job.status === 'Completed') {\r\n        setError('Canceled or completed jobs cannot be added to routes.');\r\n        return;\r\n      }\r\n  \r\n      const updatedRoute = await updateRoute(routeId, {\r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n      console.log('Updated route:', updatedRoute);\r\n  \r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n      console.log('Updated job:', updatedJob);\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        console.log('New routes state:', newRoutes);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? updatedJob : j);\r\n        console.log('New jobs state:', newJobs);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\r\n    }\r\n\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job?._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route?._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      try {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs =>\r\n          prevJobs.map(job =>\r\n            job?._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing job from calendar:', error);\r\n        setError('Failed to remove job. Please try again.');\r\n      }\r\n    } else if (event.extendedProps.type === 'route') {\r\n      try {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route =>\r\n          route?._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing route from calendar:', error);\r\n        setError('Failed to remove route. Please try again.');\r\n      }\r\n    }\r\n  };\r\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n  \r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.map(r => r._id === routeId ? updatedRoute : r);\r\n        localStorage.setItem('routes', JSON.stringify(newRoutes));\r\n        return newRoutes;\r\n      });\r\n  \r\n      setJobs(prevJobs => {\r\n        const newJobs = prevJobs.map(j => j._id === jobId ? updatedJob : j);\r\n        localStorage.setItem('jobs', JSON.stringify(newJobs));\r\n        return newJobs;\r\n      });\r\n  \r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderRouteTimeline = () => {\r\n    console.log('Rendering route timeline. Routes:', routes);\r\n    return (\r\n      <div className=\"route-timeline\">\r\n        {routes.map(route => {\r\n          console.log('Rendering route:', route);\r\n          console.log('Jobs in route:', route.jobs);\r\n          return (\r\n            <div key={route?._id} className=\"route-container mb-8 bg-gray-800 p-4 rounded-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">{route?.name}</h3>\r\n              <div className=\"job-list\">\r\n                {route.jobs && route.jobs.map((jobItem, index) => {\r\n                  // Use jobItem.job._id instead of jobItem.job\r\n                  const job = jobs.find(j => j?._id === jobItem.job._id);\r\n                  console.log('Job item:', jobItem, 'Found job:', job);\r\n                  if (!job) return null;\r\n                  return (\r\n                    <div\r\n                      key={job?._id}\r\n                      className=\"job-item bg-blue-950 rounded p-2 text-white text-sm mb-2\"\r\n                    >\r\n                      <p className=\"font-semibold\">{job?.title}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Status: {job?.status}</p>\r\n                      <p>Scheduled: {jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                      <button\r\n                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                        className=\"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm\"\r\n                      >\r\n                        Remove from Route\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {(!route.jobs || route.jobs.length === 0) && (\r\n                <p className=\"text-white\">No jobs assigned to this route.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n    const [title, setTitle] = useState(event.title);\r\n    const [start, setStart] = useState(event.start);\r\n    const [end, setEnd] = useState(event.end);\r\n\r\n    const handleSave = () => {\r\n      onSave({ ...event, title, start, end });\r\n      onClose();\r\n    };\r\n\r\n    const handleRemove = () => {\r\n      onRemove(event);\r\n      onClose();\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white p-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Edit Event</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={start ? start.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setStart(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={end ? end.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEnd(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded text-gray-800\"\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\">Cancel</button>\r\n            <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n            <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const StartTimeModal = ({ onClose, onSubmit }) => {\r\n    const [startTime, setStartTime] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const [hours, minutes] = startTime.split(':');\r\n      const dateTime = new Date();\r\n      dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n      onSubmit(dateTime);\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white p-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Set Start Time</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"time\"\r\n              value={startTime}\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              className=\"w-full mb-4 p-2 border rounded text-gray-800\"\r\n              required\r\n            />\r\n            <div className=\"flex justify-end\">\r\n              <button type=\"button\" onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded text-gray-800\">Cancel</button>\r\n              <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded\">Set Time</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route?._id} droppableId={`route-${route?._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route?.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route?.name);\r\n                                    if (newName) handleEditRouteName(route?._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route?._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route?._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.jobs && route.jobs.map((jobItem, index) => {\r\n                              const job = jobs.find(j => j?._id === jobItem.job);\r\n                              if (!job) return null;\r\n                              return (\r\n                                <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                    >\r\n                                      <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                      <p>{job?.description}</p>\r\n                                      <p>Status: {job?.status}</p>\r\n                                      <p>Customer: {job.customer?.name}</p>\r\n                                      <p>Scheduled: {jobItem?.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                                      <button\r\n                                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                                        className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                                      >\r\n                                        Remove from Route\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.route).map((job, index) => (\r\n                          <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job?._id,\r\n                                  title: job?.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job?._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                <p>{job?.description}</p>\r\n                                <p>Status: {job?.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job?.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n\r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container text-gray-800 bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.route && job.status !== 'Canceled' && job.status !== 'Completed').map(job => (\r\n                            <div\r\n                              key={job?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job?._id,\r\n                                title: job?.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job?.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route?._id,\r\n                                title: route?.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route?.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                        <MemoizedFullCalendar\r\n                          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                          initialView=\"dayGridMonth\"\r\n                          headerToolbar={{\r\n                            left: 'prev,next today',\r\n                            center: 'title',\r\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                          }}\r\n                          editable={true}\r\n                          droppable={true}\r\n                          events={events}\r\n                          eventDrop={handleEventDrop}\r\n                          eventResize={handleEventResize}\r\n                          eventReceive={handleEventReceive}\r\n                          eventClick={handleEventClick}\r\n                          height=\"auto\"\r\n                          aspectRatio={1.8}\r\n                          dayMaxEvents={3}\r\n                          eventTimeFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            meridiem: 'short'\r\n                          }}\r\n                          eventClassNames=\"rounded-md shadow-sm\"\r\n                          slotLabelFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  {routes.map(route => (\r\n                    <div key={route?._id} className=\"mb-8\">\r\n                      <h3 className=\"text-xl font-semibold mb-2\">{route?.name}</h3>\r\n                      <CustomerMap \r\n                        jobs={route.jobs.map(jobItem => {\r\n                          const job = jobs.find(j => j?._id === jobItem.job);\r\n                          return job ? { ...job, scheduledDate: jobItem.scheduledDate, scheduledEndDate: jobItem.scheduledEndDate } : null;\r\n                        }).filter(Boolean)}\r\n                        route={route}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'timeline' && (\r\n                <div className=\"timeline-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Timelines</h2>\r\n                  {renderRouteTimeline()}\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}