{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\n// BuildRoutes.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth, debounceSaveToLocalStorage } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n\n  // Fetch routes and jobs on component mount\n  useEffect(() => {\n    const initializeData = async () => {\n      setLoading(true);\n      try {\n        const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available')]);\n        console.log('Fetched Routes Response:', fetchedRoutesResponse);\n        console.log('Fetched Jobs Response:', fetchedJobsResponse);\n        const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n        const fetchedJobs = fetchedJobsResponse || [];\n\n        // Validate and set the routes\n        const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n        console.log('Validated Routes:', validatedRoutes);\n        setRoutes(validatedRoutes);\n\n        // Ensure jobPool is correctly set\n        setJobPool(fetchedJobs);\n        console.log('Job Pool after fetch:', fetchedJobs);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load routes and jobs. Please refresh the page.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeData();\n  }, []);\n\n  // Save to local storage whenever routes or jobPool change\n  useEffect(() => {\n    debounceSaveToLocalStorage(routes, jobPool);\n  }, [routes, jobPool]);\n\n  // Save routes to backend\n  const saveRoutes = async () => {\n    try {\n      console.log('Routes to be saved:', routes);\n      const response = await fetchWithAuth('/routes', 'PUT', {\n        routes\n      });\n      console.log('All routes saved successfully', response);\n      // You might want to update the local state or perform other actions here\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n      // Handle the error appropriately in your UI\n    }\n  };\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [routes]);\n\n  // Handle drag and drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceId = source.droppableId.split('-');\n    const destId = destination.droppableId.split('-');\n    const sourceListType = sourceId[0];\n    const sourceRouteIndex = parseInt(sourceId[1], 10);\n    const destListType = destId[0];\n    const destRouteIndex = parseInt(destId[1], 10);\n    let updatedRoutes = {\n      ...routes\n    };\n    let updatedJobPool = [...jobPool];\n    let movedJob;\n    if (sourceListType === 'jobPool') {\n      movedJob = updatedJobPool[source.index];\n      updatedJobPool.splice(source.index, 1);\n      if (destListType === 'jobPool') {\n        updatedJobPool.splice(destination.index, 0, movedJob);\n      } else {\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n      }\n    } else {\n      movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\n      updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\n      if (destListType === 'jobPool') {\n        updatedJobPool.splice(destination.index, 0, movedJob);\n      } else {\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n      }\n    }\n    setRoutes(updatedRoutes);\n    setJobPool(updatedJobPool);\n    debouncedSaveRoutes();\n  };\n  const addNewRoute = () => {\n    setRoutes(prevRoutes => {\n      const newRoute = {\n        index: prevRoutes[selectedDay].length,\n        jobs: []\n      };\n      return {\n        ...prevRoutes,\n        [selectedDay]: [...prevRoutes[selectedDay], newRoute]\n      };\n    });\n  };\n  const deleteRoute = routeIndex => {\n    setRoutes(prevRoutes => {\n      const updatedDayRoutes = prevRoutes[selectedDay].filter(route => route.index !== routeIndex);\n      return {\n        ...prevRoutes,\n        [selectedDay]: updatedDayRoutes.map((route, idx) => ({\n          ...route,\n          index: idx\n        }))\n      };\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const renderJobCard = job => {\n    var _job$customer, _job$location;\n    console.log('Rendering Job:', job); // Log each job being rendered\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-700 rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-white\",\n        children: job.title || 'No Title'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300\",\n        children: ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: [\"Revenue: $\", job.cost || 'No Price']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: [\"Type: \", job.recurringStatus === 'Active' ? 'Recurring' : 'One-time']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: \"bg-gray-800 p-4 rounded-lg min-h-[200px] space-y-2\",\n      children: [jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id || `job-${index}`,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }, this)\n      }, job._id || `job-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Job Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"/JH8g2npzr1G+jhKv+ta8wXANqc=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","debounceSaveToLocalStorage","Header","debounce","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","initializeData","fetchedRoutesResponse","fetchedJobsResponse","Promise","all","console","log","fetchedRoutes","fetchedJobs","validatedRoutes","err","saveRoutes","response","debouncedSaveRoutes","onDragEnd","result","source","destination","sourceId","droppableId","split","destId","sourceListType","sourceRouteIndex","parseInt","destListType","destRouteIndex","updatedRoutes","updatedJobPool","movedJob","index","splice","jobs","addNewRoute","prevRoutes","newRoute","length","deleteRoute","routeIndex","updatedDayRoutes","filter","route","map","idx","cycleVisibleRoutes","direction","prevRange","totalRoutes","newStart","newEnd","Math","min","changeSelectedDay","prevDay","currentIndex","indexOf","newIndex","renderJobCard","job","_job$customer","_job$location","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","customer","name","location","address","cost","recurringStatus","renderDroppableArea","id","provided","ref","innerRef","droppableProps","draggableId","_id","draggableProps","dragHandleProps","placeholder","onClick","window","reload","slice","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["// BuildRoutes.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n  debounceSaveToLocalStorage,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n\r\n  // Fetch routes and jobs on component mount\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([\r\n          fetchWithAuth('/routes'),\r\n          fetchWithAuth('/routes/jobs/available'),\r\n        ]);\r\n  \r\n        console.log('Fetched Routes Response:', fetchedRoutesResponse);\r\n        console.log('Fetched Jobs Response:', fetchedJobsResponse);\r\n  \r\n        const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n        const fetchedJobs = fetchedJobsResponse || [];\r\n  \r\n        // Validate and set the routes\r\n        const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n        console.log('Validated Routes:', validatedRoutes);\r\n        setRoutes(validatedRoutes);\r\n  \r\n        // Ensure jobPool is correctly set\r\n        setJobPool(fetchedJobs);\r\n        console.log('Job Pool after fetch:', fetchedJobs);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError('Failed to load routes and jobs. Please refresh the page.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    initializeData();\r\n  }, []);\r\n  \r\n  \r\n  \r\n\r\n  // Save to local storage whenever routes or jobPool change\r\n  useEffect(() => {\r\n    debounceSaveToLocalStorage(routes, jobPool);\r\n  }, [routes, jobPool]);\r\n\r\n  // Save routes to backend\r\n  const saveRoutes = async () => {\r\n    try {\r\n      console.log('Routes to be saved:', routes);\r\n      \r\n      const response = await fetchWithAuth('/routes', 'PUT', { routes });\r\n      \r\n      console.log('All routes saved successfully', response);\r\n      // You might want to update the local state or perform other actions here\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n      // Handle the error appropriately in your UI\r\n    }\r\n  };\r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [routes]);\r\n\r\n  // Handle drag and drop\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceId = source.droppableId.split('-');\r\n    const destId = destination.droppableId.split('-');\r\n\r\n    const sourceListType = sourceId[0];\r\n    const sourceRouteIndex = parseInt(sourceId[1], 10);\r\n\r\n    const destListType = destId[0];\r\n    const destRouteIndex = parseInt(destId[1], 10);\r\n\r\n    let updatedRoutes = { ...routes };\r\n    let updatedJobPool = [...jobPool];\r\n\r\n    let movedJob;\r\n\r\n    if (sourceListType === 'jobPool') {\r\n      movedJob = updatedJobPool[source.index];\r\n      updatedJobPool.splice(source.index, 1);\r\n\r\n      if (destListType === 'jobPool') {\r\n        updatedJobPool.splice(destination.index, 0, movedJob);\r\n      } else {\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n      }\r\n    } else {\r\n      movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\r\n      updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\r\n\r\n      if (destListType === 'jobPool') {\r\n        updatedJobPool.splice(destination.index, 0, movedJob);\r\n      } else {\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n      }\r\n    }\r\n\r\n    setRoutes(updatedRoutes);\r\n    setJobPool(updatedJobPool);\r\n    debouncedSaveRoutes();\r\n  };\r\n\r\n  const addNewRoute = () => {\r\n    setRoutes((prevRoutes) => {\r\n      const newRoute = {\r\n        index: prevRoutes[selectedDay].length,\r\n        jobs: [],\r\n      };\r\n      return {\r\n        ...prevRoutes,\r\n        [selectedDay]: [...prevRoutes[selectedDay], newRoute],\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteRoute = (routeIndex) => {\r\n    setRoutes((prevRoutes) => {\r\n      const updatedDayRoutes = prevRoutes[selectedDay].filter(\r\n        (route) => route.index !== routeIndex\r\n      );\r\n      return {\r\n        ...prevRoutes,\r\n        [selectedDay]: updatedDayRoutes.map((route, idx) => ({ ...route, index: idx })),\r\n      };\r\n    });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const renderJobCard = (job) => {\r\n    console.log('Rendering Job:', job); // Log each job being rendered\r\n  \r\n    return (\r\n      <div className=\"p-2 bg-gray-700 rounded-md shadow-md\">\r\n        <p className=\"font-bold text-white\">{job.title || 'No Title'}</p>\r\n        <p className=\"text-gray-300\">{job.customer?.name || 'No Customer'}</p>\r\n        <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n        <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n        <p className=\"text-gray-400\">Type: {job.recurringStatus === 'Active' ? 'Recurring' : 'One-time'}</p>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  const renderDroppableArea = (id, jobs) => (\r\n    <Droppable droppableId={id}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          className=\"bg-gray-800 p-4 rounded-lg min-h-[200px] space-y-2\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job, index) => (\r\n              <Draggable key={job._id || `job-${index}`} draggableId={job._id || `job-${index}`} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {renderJobCard(job)}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white text-center\">No jobs available</p>\r\n          )}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Job Pool</h2>\r\n            {renderDroppableArea('jobPool-0', jobPool)}\r\n          </div>\r\n        </DragDropContext>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}