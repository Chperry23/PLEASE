{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { optimizeRoute } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const navigate = useNavigate();\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let jobsData = JSON.parse(localStorage.getItem('jobs')) || [];\n      let routesData = JSON.parse(localStorage.getItem('routes')) || [];\n      if (jobsData.length === 0 || routesData.length === 0) {\n        [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n        localStorage.setItem('jobs', JSON.stringify(jobsData));\n        localStorage.setItem('routes', JSON.stringify(routesData));\n      }\n      setJobs(jobsData);\n      setRoutes(routesData);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = (jobsData, routesData) => {\n    const jobEvents = (jobsData || []).map(job => ({\n      id: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id',\n      title: (job === null || job === void 0 ? void 0 : job.title) || 'No Title',\n      start: job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate) : null,\n      end: job !== null && job !== void 0 && job.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: (job === null || job === void 0 ? void 0 : job._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = (routesData || []).map(route => ({\n      id: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id',\n      title: (route === null || route === void 0 ? void 0 : route.name) || 'Unnamed Route',\n      start: route !== null && route !== void 0 && route.scheduledDate ? new Date(route.scheduledDate) : null,\n      end: route !== null && route !== void 0 && route.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: (route === null || route === void 0 ? void 0 : route._id) || 'unknown-id'\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  };\n  const initializeExternalEvents = useCallback(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      const eventData = elem.getAttribute('data-event');\n      if (eventData) {\n        new FcDraggable(elem, {\n          eventData: function () {\n            return JSON.parse(eventData);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'calendar') {\n      setTimeout(initializeExternalEvents, 0);\n    }\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event);\n    const startDate = event.start || new Date();\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\n    const eventData = {\n      id: event.id,\n      title: event.title,\n      start: startDate,\n      end: endDate,\n      extendedProps: event.extendedProps || {}\n    };\n    if (eventData.extendedProps.type === 'job') {\n      const jobId = eventData.extendedProps.jobId;\n      const job = jobs.find(j => j._id === jobId);\n      if (job && job.route) {\n        console.error('This job is already assigned to a route');\n        info.revert();\n        setError('This job is assigned to a route. Please remove it from the route before scheduling on the calendar.');\n        return;\n      }\n      try {\n        await handleEventUpdate(eventData);\n        setEvents(prevEvents => [...prevEvents, eventData]);\n        setSuccessMessage('Job scheduled successfully!');\n      } catch (error) {\n        console.error('Error scheduling job:', error);\n        setError('Failed to schedule job. Please try again.');\n        info.revert();\n      }\n    } else if (eventData.extendedProps.type === 'route') {\n      const routeId = eventData.extendedProps.routeId;\n      console.log('Attempting to update route with ID:', routeId);\n      const existingRoute = routes.find(r => r._id === routeId);\n      if (!existingRoute) {\n        console.error('Route not found in local state:', routeId);\n        setError('Route not found. Please refresh the page and try again.');\n        info.revert();\n        return;\n      }\n      try {\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n        console.log('Updated route:', updatedRoute);\n        setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n        setEvents(prevEvents => [...prevEvents, eventData]);\n        setSuccessMessage('Route scheduled successfully!');\n      } catch (error) {\n        console.error('Error scheduling route:', error);\n        console.error('Full error object:', error);\n        setError('Failed to schedule route. Please try again.');\n        info.revert();\n      }\n    } else {\n      console.error('Unrecognized event type:', eventData);\n      info.revert();\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const jobId = result.draggableId;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const updateLocalStorage = (jobs, routes) => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n    localStorage.setItem('routes', JSON.stringify(routes));\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      console.log('Moving job', jobId, 'to route', routeId);\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      const updatedRoute = await updateRoute(routeId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? {\n        ...j,\n        route: routeId\n      } : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobId);\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $addToSet: {\n          jobs: {\n            job: jobId,\n            scheduledDate: job === null || job === void 0 ? void 0 : job.scheduledDate,\n            scheduledEndDate: job === null || job === void 0 ? void 0 : job.scheduledEndDate\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      const updatedRoutes = routes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          jobs: route.jobs.filter(j => j.job !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      });\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\n      setRoutes(updatedRoutes);\n      setJobs(updatedJobs);\n      updateLocalStorage(updatedJobs, updatedRoutes);\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n\n      // Remove associated events from the calendar\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n\n      // Update local storage\n      const updatedRoutes = routes.filter(route => route._id !== routeId);\n      localStorage.setItem('routes', JSON.stringify(updatedRoutes));\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\n      setSelectedEvent({\n        id: event.id,\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        extendedProps: event.extendedProps\n      });\n    } else {\n      console.error('Event is missing necessary properties:', event);\n    }\n  };\n  const handleEventResize = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event resized:', event);\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\n      info.revert();\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\n      return;\n    }\n    try {\n      await handleEventUpdate(event);\n      setSuccessMessage('Event resized successfully!');\n    } catch (error) {\n      console.error('Error resizing event:', error);\n      setError('Failed to resize event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: {\n            job: jobId\n          }\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? updatedJob : j));\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleEventUpdate = async event => {\n    const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === event.id);\n    if (job && job.route) {\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\n    }\n    if (event.extendedProps.type === 'job') {\n      await updateJob(event.id, {\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n        ...job,\n        title: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : job));\n    } else if (event.extendedProps.type === 'route') {\n      await updateRoute(event.extendedProps.routeId, {\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === event.extendedProps.routeId ? {\n        ...route,\n        name: event.title,\n        scheduledDate: event.start,\n        scheduledEndDate: event.end\n      } : route));\n    } else {\n      throw new Error('Unrecognized event type');\n    }\n    setEvents(prevEvents => prevEvents.map(e => e.id === event.id ? {\n      ...e,\n      title: event.title,\n      start: event.start,\n      end: event.end\n    } : e));\n  };\n  const handleRemoveEvent = async event => {\n    if (event.extendedProps.type === 'job') {\n      try {\n        await updateJob(event.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => (job === null || job === void 0 ? void 0 : job._id) === event.id ? {\n          ...job,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : job));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing job from calendar:', error);\n        setError('Failed to remove job. Please try again.');\n      }\n    } else if (event.extendedProps.type === 'route') {\n      try {\n        const routeId = event.extendedProps.routeId;\n        const updatedRoute = await updateRoute(routeId, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => (route === null || route === void 0 ? void 0 : route._id) === routeId ? {\n          ...route,\n          scheduledDate: null,\n          scheduledEndDate: null\n        } : route));\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\n      } catch (error) {\n        console.error('Error removing route from calendar:', error);\n        setError('Failed to remove route. Please try again.');\n      }\n    }\n  };\n  const EventModal = ({\n    event,\n    onClose,\n    onSave,\n    onRemove,\n    jobs,\n    onRemoveJobFromRoute\n  }) => {\n    _s();\n    var _event$extendedProps;\n    const [title, setTitle] = useState(event.title);\n    const [start, setStart] = useState(event.start);\n    const [end, setEnd] = useState(event.end);\n    const [tab, setTab] = useState('details');\n    const isRoute = ((_event$extendedProps = event.extendedProps) === null || _event$extendedProps === void 0 ? void 0 : _event$extendedProps.type) === 'route';\n    const routeJobs = isRoute ? jobs.filter(job => job.route === event.id) : [];\n    const routeRevenue = routeJobs.reduce((total, job) => total + (job.price || 0), 0);\n    const handleSave = () => {\n      onSave({\n        ...event,\n        title,\n        start,\n        end\n      });\n      onClose();\n    };\n    const handleRemove = () => {\n      onRemove(event);\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: isRoute ? 'Route Details' : 'Edit Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: start ? start.toISOString().slice(0, 16) : '',\n          onChange: e => setStart(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: end ? end.toISOString().slice(0, 16) : '',\n          onChange: e => setEnd(new Date(e.target.value)),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), isRoute && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: \"Route Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [\"Total Revenue: $\", routeRevenue.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), routeJobs.map(job => {\n            var _job$customer;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 p-2 mb-2 rounded flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price: $\", job.price || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onRemoveJobFromRoute(job._id, event.id),\n                className: \"bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)]\n            }, job._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), isRoute ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemove,\n            className: \"px-4 py-2 bg-red-500 text-white rounded\",\n            children: \"Delete Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemove,\n            className: \"px-4 py-2 bg-red-500 text-white rounded\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EventModal, \"KEx84eeTxE0Bk4qRGf4+6rV+ImU=\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-background text-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden sm:block\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"flex space-x-4\",\n                \"aria-label\": \"Tabs\",\n                children: ['routes', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab(tab),\n                  className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                  children: tab.charAt(0).toUpperCase() + tab.slice(1)\n                }, tab, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-surface p-6 rounded-lg shadow-lg\",\n            children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-semibold\",\n                  children: \"Routes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddRoute,\n                  className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                  children: \"Add New Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: `route-${route === null || route === void 0 ? void 0 : route._id}`,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"font-semibold\",\n                        children: route === null || route === void 0 ? void 0 : route.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 585,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const newName = prompt('Enter new route name:', route === null || route === void 0 ? void 0 : route.name);\n                            if (newName) handleEditRouteName(route === null || route === void 0 ? void 0 : route._id, newName);\n                          },\n                          className: \"text-primary hover:text-primary-dark mr-2\",\n                          children: \"Edit Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 587,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleMapView(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                          children: \"View Map\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 596,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteRoute(route === null || route === void 0 ? void 0 : route._id),\n                          className: \"text-red-600 hover:text-red-800\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 602,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 29\n                    }, this), route.jobs && route.jobs.map((jobItem, index) => {\n                      const job = jobs.find(j => (j === null || j === void 0 ? void 0 : j._id) === jobItem.job);\n                      if (!job) return null;\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job === null || job === void 0 ? void 0 : job._id,\n                        index: index,\n                        children: provided => {\n                          var _job$customer2;\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            className: \"bg-white p-2 mb-2 rounded shadow\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"font-semibold\",\n                              children: job === null || job === void 0 ? void 0 : job.title\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 622,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: job === null || job === void 0 ? void 0 : job.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 623,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 624,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 625,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"Scheduled: \", jobItem !== null && jobItem !== void 0 && jobItem.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 626,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => handleRemoveJobFromRoute(job === null || job === void 0 ? void 0 : job._id, route === null || route === void 0 ? void 0 : route._id),\n                              className: \"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\",\n                              children: \"Remove from Route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 627,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 616,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 33\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 27\n                  }, this)\n                }, route === null || route === void 0 ? void 0 : route._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"jobPool\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-2\",\n                    children: \"Unassigned Jobs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 25\n                  }, this), jobs.filter(job => !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job === null || job === void 0 ? void 0 : job._id,\n                    index: index,\n                    children: provided => {\n                      var _job$customer3;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        className: \"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 667,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: job === null || job === void 0 ? void 0 : job.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 668,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Status: \", job === null || job === void 0 ? void 0 : job.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Customer: \", (_job$customer3 = job.customer) === null || _job$customer3 === void 0 ? void 0 : _job$customer3.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 670,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Scheduled: \", job !== null && job !== void 0 && job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 671,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 655,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job === null || job === void 0 ? void 0 : job._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-container bg-white rounded-lg shadow-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-6 text-gray-800\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col md:flex-row gap-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-1/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    className: \"bg-gray-100 rounded-lg p-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 text-lg text-gray-700\",\n                      children: \"Draggable Jobs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: jobs.filter(job => !job.route).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: job === null || job === void 0 ? void 0 : job._id,\n                          title: job === null || job === void 0 ? void 0 : job.title,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'job',\n                            jobId: job === null || job === void 0 ? void 0 : job._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: job === null || job === void 0 ? void 0 : job.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 702,\n                          columnNumber: 31\n                        }, this)\n                      }, job === null || job === void 0 ? void 0 : job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 692,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 690,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold mb-3 mt-6 text-lg text-gray-700\",\n                      children: \"Draggable Routes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\",\n                        \"data-event\": JSON.stringify({\n                          id: route === null || route === void 0 ? void 0 : route._id,\n                          title: route === null || route === void 0 ? void 0 : route.name,\n                          duration: '01:00',\n                          extendedProps: {\n                            type: 'route',\n                            routeId: route === null || route === void 0 ? void 0 : route._id\n                          }\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-800\",\n                          children: route === null || route === void 0 ? void 0 : route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 719,\n                          columnNumber: 31\n                        }, this)\n                      }, route === null || route === void 0 ? void 0 : route._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 709,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:w-3/4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n                    children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n                      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n                      initialView: \"dayGridMonth\",\n                      headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                      },\n                      editable: true,\n                      droppable: true,\n                      events: events,\n                      eventDrop: handleEventDrop,\n                      eventResize: handleEventResize,\n                      eventReceive: handleEventReceive,\n                      eventClick: handleEventClick,\n                      height: \"auto\",\n                      aspectRatio: 1.8,\n                      dayMaxEvents: 3,\n                      eventTimeFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        meridiem: 'short'\n                      },\n                      eventClassNames: \"rounded-md shadow-sm\",\n                      slotLabelFormat: {\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        hour12: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold mb-4\",\n                children: \"Route Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedRoute || '',\n                  onChange: e => setSelectedRoute(e.target.value),\n                  className: \"p-2 border rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All Routes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 23\n                  }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: route._id,\n                    children: route.name\n                  }, route._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                routes: selectedRoute ? routes.filter(r => r._id === selectedRoute) : routes,\n                jobs: jobs,\n                onOptimizeRoute: async routeId => {\n                  try {\n                    const optimizedRoute = await optimizeRoute(routeId);\n                    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? optimizedRoute : route));\n                    setSuccessMessage('Route optimized successfully!');\n                  } catch (error) {\n                    console.error('Error optimizing route:', error);\n                    setError('Failed to optimize route. Please try again.');\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 530,\n    columnNumber: 5\n  }, this);\n};\n_s2(BuildRoutes, \"XbTtMK7Jykc//mWYUZCaGAXmLgk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nexport default BuildRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FcDraggable","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","optimizeRoute","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s2","_s","$RefreshSig$","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","navigate","selectedRoute","setSelectedRoute","fetchData","jobsData","JSON","parse","localStorage","getItem","routesData","length","Promise","all","setItem","stringify","generateEvents","err","console","jobEvents","map","job","id","_id","title","start","scheduledDate","Date","end","scheduledEndDate","color","extendedProps","type","jobId","filter","event","routeEvents","route","name","routeId","initializeExternalEvents","draggableElems","document","querySelectorAll","forEach","elem","eventData","getAttribute","setTimeout","handleEventDrop","info","log","find","j","revert","handleEventUpdate","handleEventReceive","startDate","endDate","getTime","prevEvents","existingRoute","r","updatedRoute","prevRoutes","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updateLocalStorage","$addToSet","updatedJob","updatedRoutes","updatedJobs","$pull","updatedDestRoute","handleEditRouteName","newName","handleMapView","handleAddRoute","newRoute","customers","handleDeleteRoute","handleEventClick","handleEventResize","handleRemoveJobFromRoute","prevJobs","Error","e","handleRemoveEvent","EventModal","onClose","onSave","onRemove","onRemoveJobFromRoute","_event$extendedProps","setTitle","setStart","setEnd","tab","setTab","isRoute","routeJobs","routeRevenue","reduce","total","price","handleSave","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","toISOString","slice","toFixed","_job$customer","customer","onClick","role","charAt","toUpperCase","provided","ref","innerRef","droppableProps","prompt","jobItem","index","_job$customer2","draggableProps","dragHandleProps","description","status","toLocaleString","placeholder","_job$customer3","duration","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventResize","eventReceive","eventClick","height","aspectRatio","dayMaxEvents","eventTimeFormat","hour","minute","meridiem","eventClassNames","slotLabelFormat","hour12","onOptimizeRoute","optimizedRoute","_c2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable as FcDraggable } from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\nimport { optimizeRoute } from './api';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [selectedRoute, setSelectedRoute] = useState(null);\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let jobsData = JSON.parse(localStorage.getItem('jobs')) || [];\r\n      let routesData = JSON.parse(localStorage.getItem('routes')) || [];\r\n\r\n      if (jobsData.length === 0 || routesData.length === 0) {\r\n        [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n        localStorage.setItem('jobs', JSON.stringify(jobsData));\r\n        localStorage.setItem('routes', JSON.stringify(routesData));\r\n      }\r\n\r\n      setJobs(jobsData);\r\n      setRoutes(routesData);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = (jobsData, routesData) => {\r\n    const jobEvents = (jobsData || []).map(job => ({\r\n      id: job?._id || 'unknown-id',\r\n      title: job?.title || 'No Title',\r\n      start: job?.scheduledDate ? new Date(job.scheduledDate) : null,\r\n      end: job?.scheduledEndDate ? new Date(job.scheduledEndDate) : null,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = (routesData || []).map(route => ({\r\n      id: route?._id || 'unknown-id',\r\n      title: route?.name || 'Unnamed Route',\r\n      start: route?.scheduledDate ? new Date(route.scheduledDate) : null,\r\n      end: route?.scheduledEndDate ? new Date(route.scheduledEndDate) : null,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route?._id || 'unknown-id' }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  };\r\n\r\n  const initializeExternalEvents = useCallback(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      const eventData = elem.getAttribute('data-event');\r\n      if (eventData) {\r\n        new FcDraggable(elem, {\r\n          eventData: function() {\r\n            return JSON.parse(eventData);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'calendar') {\r\n      setTimeout(initializeExternalEvents, 0);\r\n    }\r\n  }, [activeTab, jobs, routes, initializeExternalEvents]);\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event);\r\n    \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be moved on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before rescheduling.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event);\r\n\r\n    const startDate = event.start || new Date();\r\n    const endDate = event.end || new Date(startDate.getTime() + 60 * 60 * 1000);\r\n    \r\n    const eventData = {\r\n      id: event.id,\r\n      title: event.title,\r\n      start: startDate,\r\n      end: endDate,\r\n      extendedProps: event.extendedProps || {}\r\n    };\r\n\r\n    if (eventData.extendedProps.type === 'job') {\r\n      const jobId = eventData.extendedProps.jobId;\r\n      const job = jobs.find(j => j._id === jobId);\r\n      \r\n      if (job && job.route) {\r\n        console.error('This job is already assigned to a route');\r\n        info.revert();\r\n        setError('This job is assigned to a route. Please remove it from the route before scheduling on the calendar.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await handleEventUpdate(eventData);\r\n        setEvents(prevEvents => [...prevEvents, eventData]);\r\n        setSuccessMessage('Job scheduled successfully!');\r\n      } catch (error) {\r\n        console.error('Error scheduling job:', error);\r\n        setError('Failed to schedule job. Please try again.');\r\n        info.revert();\r\n      }\r\n    } else if (eventData.extendedProps.type === 'route') {\r\n      const routeId = eventData.extendedProps.routeId;\r\n      console.log('Attempting to update route with ID:', routeId);\r\n      const existingRoute = routes.find(r => r._id === routeId);\r\n      \r\n      if (!existingRoute) {\r\n        console.error('Route not found in local state:', routeId);\r\n        setError('Route not found. Please refresh the page and try again.');\r\n        info.revert();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const updatedRoute = await updateRoute(routeId, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n        console.log('Updated route:', updatedRoute);\r\n        setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n        setEvents(prevEvents => [...prevEvents, eventData]);\r\n        setSuccessMessage('Route scheduled successfully!');\r\n      } catch (error) {\r\n        console.error('Error scheduling route:', error);\r\n        console.error('Full error object:', error);\r\n        setError('Failed to schedule route. Please try again.');\r\n        info.revert();\r\n      }\r\n    } else {\r\n      console.error('Unrecognized event type:', eventData);\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const jobId = result.draggableId;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const updateLocalStorage = (jobs, routes) => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs));\r\n    localStorage.setItem('routes', JSON.stringify(routes));\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      console.log('Moving job', jobId, 'to route', routeId);\r\n\r\n      const job = jobs.find(j => j?._id === jobId);\r\n\r\n      const updatedRoute = await updateRoute(routeId, { \r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } }\r\n      });\r\n\r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? { ...j, route: routeId } : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      const updatedRoutes = routes.map(r => r._id === routeId ? updatedRoute : r);\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const job = jobs.find(j => j?._id === jobId);\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, { \r\n        $addToSet: { jobs: { job: jobId, scheduledDate: job?.scheduledDate, scheduledEndDate: job?.scheduledEndDate } } \r\n      });\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, jobs: route.jobs.filter(j => j.job !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      });\r\n\r\n      const updatedJobs = jobs.map(j => j._id === jobId ? updatedJob : j);\r\n\r\n      setRoutes(updatedRoutes);\r\n      setJobs(updatedJobs);\r\n      updateLocalStorage(updatedJobs, updatedRoutes);\r\n\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      \r\n      // Remove associated events from the calendar\r\n      setEvents(prevEvents => prevEvents.filter(event => \r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n      \r\n      setSuccessMessage('Route deleted successfully!');\r\n      \r\n      // Update local storage\r\n      const updatedRoutes = routes.filter(route => route._id !== routeId);\r\n      localStorage.setItem('routes', JSON.stringify(updatedRoutes));\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const { event } = info;\r\n    if (event.id && event.title && event.start && event.end && event.extendedProps.type) {\r\n      setSelectedEvent({\r\n        id: event.id,\r\n        title: event.title,\r\n        start: event.start,\r\n        end: event.end,\r\n        extendedProps: event.extendedProps\r\n      });\r\n    } else {\r\n      console.error('Event is missing necessary properties:', event);\r\n    }\r\n  };\r\n\r\n  const handleEventResize = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event resized:', event);\r\n    \r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      console.error('This job is assigned to a route and cannot be resized on the calendar');\r\n      info.revert();\r\n      setError('This job is assigned to a route. Please remove it from the route before resizing.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handleEventUpdate(event);\r\n      setSuccessMessage('Event resized successfully!');\r\n    } catch (error) {\r\n      console.error('Error resizing event:', error);\r\n      setError('Failed to resize event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleRemoveJobFromRoute = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: { job: jobId } } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => prevJobs.map(j => j._id === jobId ? updatedJob : j));\r\n\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = async (event) => {\r\n    const job = jobs.find(j => j?._id === event.id);\r\n    if (job && job.route) {\r\n      throw new Error('This job is assigned to a route and cannot be updated on the calendar');\r\n    }\r\n\r\n    if (event.extendedProps.type === 'job') {\r\n      await updateJob(event.id, {\r\n        title: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setJobs(prevJobs => prevJobs.map(job =>\r\n        job?._id === event.id ? { ...job, title: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : job\r\n      ));\r\n    } else if (event.extendedProps.type === 'route') {\r\n      await updateRoute(event.extendedProps.routeId, {\r\n        name: event.title,\r\n        scheduledDate: event.start,\r\n        scheduledEndDate: event.end\r\n      });\r\n      setRoutes(prevRoutes => prevRoutes.map(route =>\r\n        route?._id === event.extendedProps.routeId ? { ...route, name: event.title, scheduledDate: event.start, scheduledEndDate: event.end } : route\r\n      ));\r\n    } else {\r\n      throw new Error('Unrecognized event type');\r\n    }\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(e => e.id === event.id ? { ...e, title: event.title, start: event.start, end: event.end } : e)\r\n    );\r\n  };\r\n\r\n  const handleRemoveEvent = async (event) => {\r\n    if (event.extendedProps.type === 'job') {\r\n      try {\r\n        await updateJob(event.id, { scheduledDate: null, scheduledEndDate: null });\r\n        setJobs(prevJobs => \r\n          prevJobs.map(job => \r\n            job?._id === event.id ? { ...job, scheduledDate: null, scheduledEndDate: null } : job\r\n          )\r\n        );\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Job removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing job from calendar:', error);\r\n        setError('Failed to remove job. Please try again.');\r\n      }\r\n    } else if (event.extendedProps.type === 'route') {\r\n      try {\r\n        const routeId = event.extendedProps.routeId;\r\n        const updatedRoute = await updateRoute(routeId, { scheduledDate: null, scheduledEndDate: null });\r\n        setRoutes(prevRoutes => prevRoutes.map(route => \r\n          route?._id === routeId ? { ...route, scheduledDate: null, scheduledEndDate: null } : route\r\n        ));\r\n        setEvents(prevEvents => prevEvents.filter(e => e.id !== event.id));\r\n        setSuccessMessage('Route removed from calendar and moved back to pool successfully!');\r\n      } catch (error) {\r\n        console.error('Error removing route from calendar:', error);\r\n        setError('Failed to remove route. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const EventModal = ({ event, onClose, onSave, onRemove, jobs, onRemoveJobFromRoute }) => {\r\n    const [title, setTitle] = useState(event.title);\r\n    const [start, setStart] = useState(event.start);\r\n    const [end, setEnd] = useState(event.end);\r\n    const [tab, setTab] = useState('details');\r\n  \r\n    const isRoute = event.extendedProps?.type === 'route';\r\n    const routeJobs = isRoute ? jobs.filter(job => job.route === event.id) : [];\r\n    const routeRevenue = routeJobs.reduce((total, job) => total + (job.price || 0), 0);\r\n  \r\n    const handleSave = () => {\r\n      onSave({ ...event, title, start, end });\r\n      onClose();\r\n    };\r\n  \r\n    const handleRemove = () => {\r\n      onRemove(event);\r\n      onClose();\r\n    };\r\n  \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white p-6 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">{isRoute ? 'Route Details' : 'Edit Event'}</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={start ? start.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setStart(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={end ? end.toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEnd(new Date(e.target.value))}\r\n            className=\"w-full mb-2 p-2 border rounded\"\r\n          />\r\n  \r\n          {isRoute && (\r\n            <div className=\"mt-4\">\r\n              <h3 className=\"text-xl font-semibold mb-2\">Route Jobs</h3>\r\n              <p className=\"mb-2\">Total Revenue: ${routeRevenue.toFixed(2)}</p>\r\n              {routeJobs.map(job => (\r\n                <div key={job._id} className=\"bg-gray-100 p-2 mb-2 rounded flex justify-between items-center\">\r\n                  <div>\r\n                    <p className=\"font-semibold\">{job.title}</p>\r\n                    <p>Customer: {job.customer?.name}</p>\r\n                    <p>Price: ${job.price || 0}</p>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => onRemoveJobFromRoute(job._id, event.id)}\r\n                    className=\"bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n  \r\n          <div className=\"flex justify-end mt-4\">\r\n            <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n            <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n            {isRoute ? (\r\n              <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Delete Route</button>\r\n            ) : (\r\n              <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-background text-gray-800\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n              <div className=\"hidden sm:block\">\r\n                <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                  {['routes', 'calendar', 'map'].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      onClick={() => setActiveTab(tab)}\r\n                      className={`${\r\n                        activeTab === tab\r\n                          ? 'bg-primary text-white'\r\n                          : 'text-text hover:text-white hover:bg-primary'\r\n                      } px-3 py-2 font-medium text-sm rounded-md`}\r\n                    >\r\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n              {activeTab === 'routes' && (\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                    <button\r\n                      onClick={handleAddRoute}\r\n                      className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                    >\r\n                      Add New Route\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {routes.map(route => (\r\n                      <Droppable key={route?._id} droppableId={`route-${route?._id}`}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                          >\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                              <h3 className=\"font-semibold\">{route?.name}</h3>\r\n                              <div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const newName = prompt('Enter new route name:', route?.name);\r\n                                    if (newName) handleEditRouteName(route?._id, newName);\r\n                                  }}\r\n                                  className=\"text-primary hover:text-primary-dark mr-2\"\r\n                                >\r\n                                  Edit Name\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleMapView(route?._id)}\r\n                                  className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                                >\r\n                                  View Map\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDeleteRoute(route?._id)}\r\n                                  className=\"text-red-600 hover:text-red-800\"\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            {route.jobs && route.jobs.map((jobItem, index) => {\r\n                              const job = jobs.find(j => j?._id === jobItem.job);\r\n                              if (!job) return null;\r\n                              return (\r\n                                <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                    >\r\n                                      <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                      <p>{job?.description}</p>\r\n                                      <p>Status: {job?.status}</p>\r\n                                      <p>Customer: {job.customer?.name}</p>\r\n                                      <p>Scheduled: {jobItem?.scheduledDate ? new Date(jobItem.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                                      <button\r\n                                        onClick={() => handleRemoveJobFromRoute(job?._id, route?._id)}\r\n                                        className=\"mt-2 bg-red-500 text-white px-2 py-1 rounded text-sm\"\r\n                                      >\r\n                                        Remove from Route\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    ))}\r\n                  </div>\r\n                  <Droppable droppableId=\"jobPool\">\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                      >\r\n                        <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                        {jobs.filter(job => !job.route).map((job, index) => (\r\n                          <Draggable key={job?._id} draggableId={job?._id} index={index}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                className=\"bg-white p-2 mb-2 rounded shadow fc-event cursor-move\"\r\n                                data-event={JSON.stringify({\r\n                                  id: job?._id,\r\n                                  title: job?.title,\r\n                                  duration: '01:00',\r\n                                  extendedProps: { type: 'job', jobId: job?._id }\r\n                                })}\r\n                              >\r\n                                <h4 className=\"font-semibold\">{job?.title}</h4>\r\n                                <p>{job?.description}</p>\r\n                                <p>Status: {job?.status}</p>\r\n                                <p>Customer: {job.customer?.name}</p>\r\n                                <p>Scheduled: {job?.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              )}\r\n\r\n              {activeTab === 'calendar' && (\r\n                <div className=\"calendar-container bg-white rounded-lg shadow-lg p-6\">\r\n                  <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Schedule</h2>\r\n                  <div className=\"flex flex-col md:flex-row gap-6\">\r\n                    <div className=\"md:w-1/4\">\r\n                      <div id=\"external-events\" className=\"bg-gray-100 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3 text-lg text-gray-700\">Draggable Jobs</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {jobs.filter(job => !job.route).map(job => (\r\n                            <div\r\n                              key={job?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-blue-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: job?._id,\r\n                                title: job?.title,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'job', jobId: job?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{job?.title}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <h4 className=\"font-semibold mb-3 mt-6 text-lg text-gray-700\">Draggable Routes</h4>\r\n                        <div className=\"space-y-2\">\r\n                          {routes.filter(route => !route.scheduledDate).map(route => (\r\n                            <div\r\n                              key={route?._id}\r\n                              className=\"fc-event bg-white p-3 rounded shadow-sm cursor-move border-l-4 border-green-500 hover:bg-gray-50 transition duration-150\"\r\n                              data-event={JSON.stringify({\r\n                                id: route?._id,\r\n                                title: route?.name,\r\n                                duration: '01:00',\r\n                                extendedProps: { type: 'route', routeId: route?._id }\r\n                              })}\r\n                            >\r\n                              <p className=\"font-medium text-gray-800\">{route?.name}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-3/4\">\r\n                      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                        <MemoizedFullCalendar\r\n                          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                          initialView=\"dayGridMonth\"\r\n                          headerToolbar={{\r\n                            left: 'prev,next today',\r\n                            center: 'title',\r\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                          }}\r\n                          editable={true}\r\n                          droppable={true}\r\n                          events={events}\r\n                          eventDrop={handleEventDrop}\r\n                          eventResize={handleEventResize}\r\n                          eventReceive={handleEventReceive}\r\n                          eventClick={handleEventClick}\r\n                          height=\"auto\"\r\n                          aspectRatio={1.8}\r\n                          dayMaxEvents={3}\r\n                          eventTimeFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            meridiem: 'short'\r\n                          }}\r\n                          eventClassNames=\"rounded-md shadow-sm\"\r\n                          slotLabelFormat={{\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'map' && (\r\n                <div className=\"map-container\">\r\n                  <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                  <div className=\"mb-4\">\r\n                    <select \r\n                      value={selectedRoute || ''} \r\n                      onChange={(e) => setSelectedRoute(e.target.value)}\r\n                      className=\"p-2 border rounded\"\r\n                    >\r\n                      <option value=\"\">All Routes</option>\r\n                      {routes.map(route => (\r\n                        <option key={route._id} value={route._id}>{route.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <CustomerMap\r\n                    routes={selectedRoute ? routes.filter(r => r._id === selectedRoute) : routes}\r\n                    jobs={jobs}\r\n                    onOptimizeRoute={async (routeId) => {\r\n                      try {\r\n                        const optimizedRoute = await optimizeRoute(routeId);\r\n                        setRoutes(prevRoutes => prevRoutes.map(route => \r\n                          route._id === routeId ? optimizedRoute : route\r\n                        ));\r\n                        setSuccessMessage('Route optimized successfully!');\r\n                      } catch (error) {\r\n                        console.error('Error optimizing route:', error);\r\n                        setError('Failed to optimize route. Please try again.');\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              </div>\r\n              </div>\r\n              </main>\r\n              {selectedEvent && (\r\n              <EventModal\r\n              event={selectedEvent}\r\n              onClose={() => setSelectedEvent(null)}\r\n              onSave={handleEventUpdate}\r\n              onRemove={handleRemoveEvent}\r\n              />\r\n              )}\r\n              </div>\r\n              </ErrorBoundary>\r\n              );\r\n              };\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}