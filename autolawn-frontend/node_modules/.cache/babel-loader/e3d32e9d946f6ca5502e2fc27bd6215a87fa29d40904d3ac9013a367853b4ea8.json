{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { PlusIcon, UsersIcon, MapIcon, DocumentIcon, ArrowPathIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\nimport Header from '../components/Header';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { fetchJobs, fetchCustomers, fetchEmployees, fetchAnalytics } from '../api/dashboardApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [jobCount, setJobCount] = useState(0);\n  const [customerCount, setCustomerCount] = useState(0);\n  const [employeeCount, setEmployeeCount] = useState(0);\n  const [analyticsData, setAnalyticsData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [globalTimeRange, setGlobalTimeRange] = useState('30');\n  const [customDateRange, setCustomDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [currentChartSet, setCurrentChartSet] = useState(0);\n  useEffect(() => {\n    fetchDashboardData(globalTimeRange);\n    const interval = setInterval(() => {\n      fetchDashboardData(globalTimeRange);\n    }, 60000); // Refresh every minute\n    return () => clearInterval(interval);\n  }, [globalTimeRange]);\n  const fetchDashboardData = async (timeRange, customRange = null) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobs, customers, employees, analytics] = await Promise.all([fetchJobs(), fetchCustomers(), fetchEmployees(), fetchAnalytics(timeRange, customRange)]);\n      setJobCount((jobs === null || jobs === void 0 ? void 0 : jobs.length) || 0);\n      setCustomerCount((customers === null || customers === void 0 ? void 0 : customers.length) || 0);\n      setEmployeeCount((employees === null || employees === void 0 ? void 0 : employees.length) || 0);\n      setAnalyticsData(analytics || {});\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching dashboard data:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError('Failed to load dashboard data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCustomDateChange = e => {\n    setCustomDateRange({\n      ...customDateRange,\n      [e.target.name]: e.target.value\n    });\n  };\n  const applyCustomDateRange = () => {\n    if (customDateRange.start && customDateRange.end) {\n      fetchDashboardData('custom', customDateRange);\n    }\n  };\n  const getChartOptions = (title, chartType) => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            font: {\n              size: 12\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: title,\n          color: 'rgba(255, 255, 255, 0.9)',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        }\n      },\n      scales: chartType !== 'doughnut' ? {\n        x: {\n          grid: {\n            color: 'rgba(255, 255, 255, 0.1)'\n          },\n          ticks: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            font: {\n              size: 10\n            }\n          }\n        },\n        y: {\n          grid: {\n            color: 'rgba(255, 255, 255, 0.1)'\n          },\n          ticks: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            font: {\n              size: 10\n            }\n          },\n          beginAtZero: true\n        }\n      } : {},\n      elements: {\n        line: {\n          tension: 0.4,\n          // smooth curves\n          backgroundColor: context => {\n            const ctx = context.chart.ctx;\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0, 'rgba(0, 188, 212, 0.5)');\n            gradient.addColorStop(1, 'rgba(0, 188, 212, 0)');\n            return gradient;\n          }\n        }\n      },\n      layout: {\n        padding: {\n          left: 10,\n          right: 10,\n          top: 10,\n          bottom: 10\n        }\n      }\n    };\n  };\n  const chartConfigs = [{\n    title: \"Customer Growth\",\n    type: Line,\n    dataKey: 'customerGrowth',\n    label: 'New Customers',\n    color: '#00bcd4'\n  }, {\n    title: \"Revenue Over Time\",\n    type: Line,\n    dataKey: 'revenue',\n    label: 'Revenue',\n    color: '#ab47bc'\n  }, {\n    title: \"Average Job Cost\",\n    type: Bar,\n    dataKey: 'averageJobCost',\n    label: 'Average Cost',\n    color: '#ff7043'\n  }, {\n    title: \"Job Status Distribution\",\n    type: Doughnut,\n    dataKey: 'jobStatusDistribution',\n    label: 'Job Status',\n    color: ['#00bcd4', '#ab47bc', '#ff7043', '#ffca28']\n  }, {\n    title: \"Employee Distribution\",\n    type: Doughnut,\n    dataKey: 'employeeDistribution',\n    label: 'Employees',\n    color: ['#4caf50', '#2196f3', '#ff9800', '#f44336']\n  }, {\n    title: \"Top Services\",\n    type: Bar,\n    dataKey: 'topServices',\n    label: 'Revenue',\n    color: '#009688'\n  }, {\n    title: \"Customer Retention Rate\",\n    type: Doughnut,\n    dataKey: 'customerRetentionRate',\n    label: 'Retention Rate',\n    color: ['#673ab7', '#e0e0e0']\n  }, {\n    title: \"Job Completion Rate\",\n    type: Doughnut,\n    dataKey: 'jobCompletionRate',\n    label: 'Completion Rate',\n    color: ['#795548', '#e0e0e0']\n  }, {\n    title: \"Customer Satisfaction\",\n    type: Bar,\n    dataKey: 'customerSatisfaction',\n    label: 'Satisfaction Score',\n    color: '#ffc107'\n  }];\n  const totalChartSets = Math.ceil(chartConfigs.length / 3);\n  const nextChartSet = () => {\n    setCurrentChartSet(prev => (prev + 1) % totalChartSets);\n  };\n  const prevChartSet = () => {\n    setCurrentChartSet(prev => (prev - 1 + totalChartSets) % totalChartSets);\n  };\n  const renderChart = (config, index) => {\n    const chartData = analyticsData[config.dataKey];\n    if (!chartData || !chartData.labels || !chartData.data) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No data available for \", config.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 14\n      }, this);\n    }\n    const chartType = config.type === Line ? 'line' : config.type === Bar ? 'bar' : 'doughnut';\n    return /*#__PURE__*/_jsxDEV(config.type, {\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label: config.label,\n          data: chartData.data,\n          backgroundColor: Array.isArray(config.color) ? config.color : [config.color],\n          borderColor: config.type === Line ? config.color : 'rgba(255, 255, 255, 0.1)',\n          borderWidth: config.type === Line ? 2 : 1,\n          fill: config.type === Line ? 'start' : undefined,\n          tension: 0.4\n        }]\n      },\n      options: getChartOptions(config.title, chartType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || 'User']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: globalTimeRange,\n            onChange: e => setGlobalTimeRange(e.target.value),\n            className: \"mr-2 p-2 border rounded text-black\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"7\",\n              children: \"Past 7 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"Past 30 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"90\",\n              children: \"Past 90 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), globalTimeRange === 'custom' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"start\",\n              value: customDateRange.start,\n              onChange: handleCustomDateChange,\n              className: \"mr-2 p-2 border rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"end\",\n              value: customDateRange.end,\n              onChange: handleCustomDateChange,\n              className: \"mr-2 p-2 border rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: applyCustomDateRange,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600\",\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fetchDashboardData(globalTimeRange, globalTimeRange === 'custom' ? customDateRange : null),\n            className: \"ml-4 bg-green-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-green-600 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), \"Refresh Dashboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(OverviewCard, {\n          title: \"Jobs\",\n          count: jobCount,\n          link: \"/manage-jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverviewCard, {\n          title: \"Customers\",\n          count: customerCount,\n          link: \"/manage-customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverviewCard, {\n          title: \"Employees\",\n          count: employeeCount,\n          link: \"/manage-employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Quick Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-5\",\n          children: [/*#__PURE__*/_jsxDEV(QuickActionButton, {\n            to: \"/jobs\",\n            icon: PlusIcon,\n            text: \"Create New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuickActionButton, {\n            to: \"/customers\",\n            icon: PlusIcon,\n            text: \"Add New Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuickActionButton, {\n            to: \"/add-employee\",\n            icon: UsersIcon,\n            text: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuickActionButton, {\n            to: \"/generate-report\",\n            icon: DocumentIcon,\n            text: \"Generate Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuickActionButton, {\n            to: \"/build-routes\",\n            icon: MapIcon,\n            text: \"Build Routes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Dashboard Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-12\",\n          children: \"Loading dashboard data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this) : analyticsData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\",\n            children: chartConfigs.slice(currentChartSet * 3, (currentChartSet + 1) * 3).map((config, index) => /*#__PURE__*/_jsxDEV(ChartContainer, {\n              title: config.title,\n              children: renderChart(config, index)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: prevChartSet,\n              className: \"mr-2 bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600\",\n              children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n                className: \"h-6 w-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: nextChartSet,\n              className: \"bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600\",\n              children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                className: \"h-6 w-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-12\",\n          children: \"No data available. Please try refreshing the dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GWqNNMPXp70Ea2yR1ZjyjwgDVc8=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nconst OverviewCard = ({\n  title,\n  count,\n  link\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"bg-gray-800 overflow-hidden shadow rounded-lg\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-4 py-5 sm:p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg leading-6 font-medium text-white\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-3xl font-semibold text-white\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: link,\n        className: \"text-blue-400 hover:text-blue-300\",\n        children: [\"View all \", title.toLowerCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 291,\n  columnNumber: 3\n}, this);\n_c2 = OverviewCard;\nconst QuickActionButton = ({\n  to,\n  icon: Icon,\n  text\n}) => /*#__PURE__*/_jsxDEV(Link, {\n  to: to,\n  className: \"bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 flex items-center justify-center\",\n  children: [/*#__PURE__*/_jsxDEV(Icon, {\n    className: \"h-5 w-5 mr-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 305,\n  columnNumber: 3\n}, this);\n_c3 = QuickActionButton;\nconst ChartContainer = ({\n  title,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"bg-gray-800 p-4 rounded-lg shadow\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-lg leading-6 font-medium mb-4 text-white\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 312,\n  columnNumber: 3\n}, this);\n_c4 = ChartContainer;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"OverviewCard\");\n$RefreshReg$(_c3, \"QuickActionButton\");\n$RefreshReg$(_c4, \"ChartContainer\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Link","PlusIcon","UsersIcon","MapIcon","DocumentIcon","ArrowPathIcon","ChevronLeftIcon","ChevronRightIcon","Header","Line","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","fetchJobs","fetchCustomers","fetchEmployees","fetchAnalytics","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Dashboard","_s","user","jobCount","setJobCount","customerCount","setCustomerCount","employeeCount","setEmployeeCount","analyticsData","setAnalyticsData","loading","setLoading","error","setError","globalTimeRange","setGlobalTimeRange","customDateRange","setCustomDateRange","start","end","currentChartSet","setCurrentChartSet","fetchDashboardData","interval","setInterval","clearInterval","timeRange","customRange","jobs","customers","employees","analytics","Promise","all","length","_error$response","console","response","data","message","handleCustomDateChange","e","target","name","value","applyCustomDateRange","getChartOptions","title","chartType","responsive","maintainAspectRatio","plugins","legend","position","labels","color","font","size","display","text","weight","scales","x","grid","ticks","y","beginAtZero","elements","line","tension","backgroundColor","context","ctx","chart","gradient","createLinearGradient","addColorStop","layout","padding","left","right","top","bottom","chartConfigs","type","dataKey","label","totalChartSets","Math","ceil","nextChartSet","prev","prevChartSet","renderChart","config","index","chartData","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","Array","isArray","borderColor","borderWidth","fill","undefined","options","className","onChange","onClick","role","OverviewCard","count","link","QuickActionButton","to","icon","slice","map","ChartContainer","_c","toLowerCase","_c2","Icon","_c3","_c4","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { PlusIcon, UsersIcon, MapIcon, DocumentIcon, ArrowPathIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\nimport Header from '../components/Header';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { fetchJobs, fetchCustomers, fetchEmployees, fetchAnalytics } from '../api/dashboardApi';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useAuth();\r\n  const [jobCount, setJobCount] = useState(0);\r\n  const [customerCount, setCustomerCount] = useState(0);\r\n  const [employeeCount, setEmployeeCount] = useState(0);\r\n  const [analyticsData, setAnalyticsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [globalTimeRange, setGlobalTimeRange] = useState('30');\r\n  const [customDateRange, setCustomDateRange] = useState({ start: '', end: '' });\r\n  const [currentChartSet, setCurrentChartSet] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData(globalTimeRange);\r\n    const interval = setInterval(() => {\r\n      fetchDashboardData(globalTimeRange);\r\n    }, 60000); // Refresh every minute\r\n    return () => clearInterval(interval);\r\n  }, [globalTimeRange]);\r\n\r\n  const fetchDashboardData = async (timeRange, customRange = null) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobs, customers, employees, analytics] = await Promise.all([\r\n        fetchJobs(),\r\n        fetchCustomers(),\r\n        fetchEmployees(),\r\n        fetchAnalytics(timeRange, customRange)\r\n      ]);\r\n      setJobCount(jobs?.length || 0);\r\n      setCustomerCount(customers?.length || 0);\r\n      setEmployeeCount(employees?.length || 0);\r\n      setAnalyticsData(analytics || {});\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error.response?.data || error.message);\r\n      setError('Failed to load dashboard data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCustomDateChange = (e) => {\r\n    setCustomDateRange({ ...customDateRange, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const applyCustomDateRange = () => {\r\n    if (customDateRange.start && customDateRange.end) {\r\n      fetchDashboardData('custom', customDateRange);\r\n    }\r\n  };\r\n\r\n  const getChartOptions = (title, chartType) => {\r\n    return {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: { \r\n          position: 'top',\r\n          labels: { color: 'rgba(255, 255, 255, 0.7)', font: { size: 12 } }\r\n        },\r\n        title: { \r\n          display: true, \r\n          text: title,\r\n          color: 'rgba(255, 255, 255, 0.9)',\r\n          font: { size: 16, weight: 'bold' }\r\n        },\r\n      },\r\n      scales: chartType !== 'doughnut' ? {\r\n        x: {\r\n          grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n          ticks: { color: 'rgba(255, 255, 255, 0.7)', font: { size: 10 } }\r\n        },\r\n        y: {\r\n          grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n          ticks: { color: 'rgba(255, 255, 255, 0.7)', font: { size: 10 } },\r\n          beginAtZero: true\r\n        }\r\n      } : {},\r\n      elements: {\r\n        line: {\r\n          tension: 0.4, // smooth curves\r\n          backgroundColor: context => {\r\n            const ctx = context.chart.ctx;\r\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n            gradient.addColorStop(0, 'rgba(0, 188, 212, 0.5)');\r\n            gradient.addColorStop(1, 'rgba(0, 188, 212, 0)');\r\n            return gradient;\r\n          },\r\n        }\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 10,\r\n          right: 10,\r\n          top: 10,\r\n          bottom: 10\r\n        }\r\n      }\r\n    };\r\n  };  \r\n\r\n  const chartConfigs = [\r\n    { title: \"Customer Growth\", type: Line, dataKey: 'customerGrowth', label: 'New Customers', color: '#00bcd4' },\r\n    { title: \"Revenue Over Time\", type: Line, dataKey: 'revenue', label: 'Revenue', color: '#ab47bc' },\r\n    { title: \"Average Job Cost\", type: Bar, dataKey: 'averageJobCost', label: 'Average Cost', color: '#ff7043' },\r\n    { title: \"Job Status Distribution\", type: Doughnut, dataKey: 'jobStatusDistribution', label: 'Job Status', color: ['#00bcd4', '#ab47bc', '#ff7043', '#ffca28'] },\r\n    { title: \"Employee Distribution\", type: Doughnut, dataKey: 'employeeDistribution', label: 'Employees', color: ['#4caf50', '#2196f3', '#ff9800', '#f44336'] },\r\n    { title: \"Top Services\", type: Bar, dataKey: 'topServices', label: 'Revenue', color: '#009688' },\r\n    { title: \"Customer Retention Rate\", type: Doughnut, dataKey: 'customerRetentionRate', label: 'Retention Rate', color: ['#673ab7', '#e0e0e0'] },\r\n    { title: \"Job Completion Rate\", type: Doughnut, dataKey: 'jobCompletionRate', label: 'Completion Rate', color: ['#795548', '#e0e0e0'] },\r\n    { title: \"Customer Satisfaction\", type: Bar, dataKey: 'customerSatisfaction', label: 'Satisfaction Score', color: '#ffc107' }\r\n  ];\r\n\r\n  const totalChartSets = Math.ceil(chartConfigs.length / 3);\r\n\r\n  const nextChartSet = () => {\r\n    setCurrentChartSet((prev) => (prev + 1) % totalChartSets);\r\n  };\r\n\r\n  const prevChartSet = () => {\r\n    setCurrentChartSet((prev) => (prev - 1 + totalChartSets) % totalChartSets);\r\n  };\r\n\r\n  const renderChart = (config, index) => {\r\n    const chartData = analyticsData[config.dataKey];\r\n    if (!chartData || !chartData.labels || !chartData.data) {\r\n      return <div>No data available for {config.title}</div>;\r\n    }\r\n  \r\n    const chartType = config.type === Line ? 'line' : config.type === Bar ? 'bar' : 'doughnut';\r\n  \r\n    return (\r\n      <config.type\r\n        data={{\r\n          labels: chartData.labels,\r\n          datasets: [{\r\n            label: config.label,\r\n            data: chartData.data,\r\n            backgroundColor: Array.isArray(config.color) ? config.color : [config.color],\r\n            borderColor: config.type === Line ? config.color : 'rgba(255, 255, 255, 0.1)',\r\n            borderWidth: config.type === Line ? 2 : 1,\r\n            fill: config.type === Line ? 'start' : undefined,\r\n            tension: 0.4\r\n          }]\r\n        }}\r\n        options={getChartOptions(config.title, chartType)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold\">Welcome, {user?.name || 'User'}</h1>\r\n          <div className=\"flex items-center\">\r\n            <select \r\n              value={globalTimeRange} \r\n              onChange={(e) => setGlobalTimeRange(e.target.value)}\r\n              className=\"mr-2 p-2 border rounded text-black\"\r\n            >\r\n              <option value=\"7\">Past 7 days</option>\r\n              <option value=\"30\">Past 30 days</option>\r\n              <option value=\"90\">Past 90 days</option>\r\n              <option value=\"all\">All time</option>\r\n              <option value=\"custom\">Custom range</option>\r\n            </select>\r\n            {globalTimeRange === 'custom' && (\r\n              <>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"start\"\r\n                  value={customDateRange.start}\r\n                  onChange={handleCustomDateChange}\r\n                  className=\"mr-2 p-2 border rounded\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"end\"\r\n                  value={customDateRange.end}\r\n                  onChange={handleCustomDateChange}\r\n                  className=\"mr-2 p-2 border rounded\"\r\n                />\r\n                <button\r\n                  onClick={applyCustomDateRange}\r\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600\"\r\n                >\r\n                  Apply\r\n                </button>\r\n              </>\r\n            )}\r\n            <button \r\n              onClick={() => fetchDashboardData(globalTimeRange, globalTimeRange === 'custom' ? customDateRange : null)} \r\n              className=\"ml-4 bg-green-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-green-600 flex items-center\"\r\n            >\r\n              <ArrowPathIcon className=\"h-5 w-5 mr-2\" />\r\n              Refresh Dashboard\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\" role=\"alert\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3 mb-8\">\r\n          <OverviewCard title=\"Jobs\" count={jobCount} link=\"/manage-jobs\" />\r\n          <OverviewCard title=\"Customers\" count={customerCount} link=\"/manage-customers\" />\r\n          <OverviewCard title=\"Employees\" count={employeeCount} link=\"/manage-employees\" />\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Quick Actions</h2>\r\n          <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-5\">\r\n            <QuickActionButton to=\"/jobs\" icon={PlusIcon} text=\"Create New Job\" />\r\n            <QuickActionButton to=\"/customers\" icon={PlusIcon} text=\"Add New Customer\" />\r\n            <QuickActionButton to=\"/add-employee\" icon={UsersIcon} text=\"Add New Employee\" />\r\n            <QuickActionButton to=\"/generate-report\" icon={DocumentIcon} text=\"Generate Report\" />\r\n            <QuickActionButton to=\"/build-routes\" icon={MapIcon} text=\"Build Routes\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Dashboard Insights</h2>\r\n          {loading ? (\r\n            <div className=\"text-center py-12\">Loading dashboard data...</div>\r\n          ) : analyticsData ? (\r\n            <div>\r\n              <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\r\n                {chartConfigs.slice(currentChartSet * 3, (currentChartSet + 1) * 3).map((config, index) => (\r\n                  <ChartContainer key={index} title={config.title}>\r\n                    {renderChart(config, index)}\r\n                  </ChartContainer>\r\n                ))}\r\n              </div>\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button onClick={prevChartSet} className=\"mr-2 bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600\">\r\n                  <ChevronLeftIcon className=\"h-6 w-6\" />\r\n                </button>\r\n                <button onClick={nextChartSet} className=\"bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600\">\r\n                  <ChevronRightIcon className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-12\">No data available. Please try refreshing the dashboard.</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OverviewCard = ({ title, count, link }) => (\r\n  <div className=\"bg-gray-800 overflow-hidden shadow rounded-lg\">\r\n    <div className=\"px-4 py-5 sm:p-6\">\r\n      <h3 className=\"text-lg leading-6 font-medium text-white\">{title}</h3>\r\n      <div className=\"mt-2 text-3xl font-semibold text-white\">{count}</div>\r\n      <div className=\"mt-4\">\r\n        <Link to={link} className=\"text-blue-400 hover:text-blue-300\">\r\n          View all {title.toLowerCase()}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst QuickActionButton = ({ to, icon: Icon, text }) => (\r\n  <Link to={to} className=\"bg-blue-500 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-600 flex items-center justify-center\">\r\n    <Icon className=\"h-5 w-5 mr-2\" />\r\n    {text}\r\n  </Link>\r\n);\r\n\r\nconst ChartContainer = ({ title, children }) => (\r\n  <div className=\"bg-gray-800 p-4 rounded-lg shadow\">\r\n    <h3 className=\"text-lg leading-6 font-medium mb-4 text-white\">{title}</h3>\r\n    <div className=\"h-64\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}