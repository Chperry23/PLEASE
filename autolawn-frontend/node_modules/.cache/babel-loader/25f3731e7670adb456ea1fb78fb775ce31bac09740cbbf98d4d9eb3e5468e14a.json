{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst getHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('token')}`\n});\nexport const fetchCustomers = async () => {\n  const response = await axios.get(`${API_URL}/customers`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchRoutes = async () => {\n  const response = await axios.get(`${API_URL}/routes`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const saveRoute = async route => {\n  const response = await axios.post(`${API_URL}/routes`, route, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const deleteRoute = async routeId => {\n  await axios.delete(`${API_URL}/routes/${routeId}`, {\n    headers: getHeaders()\n  });\n};\nexport const optimizeRoute = async routeId => {\n  const response = await axios.post(`${API_URL}/routes/${routeId}/optimize`, {}, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchJobs = async () => {\n  const response = await axios.get(`${API_URL}/jobs`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchCalendarEvents = async () => {\n  const response = await axios.get(`${API_URL}/calendar-events`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const updateCalendarEvent = async event => {\n  const response = await axios.put(`${API_URL}/calendar-events/${event.id}`, event, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const saveSchedule = async (routeId, schedule) => {\n  const response = await axios.post(`${API_URL}/routes/${routeId}/schedule`, schedule, {\n    headers: getHeaders()\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getHeaders","Authorization","localStorage","getItem","fetchCustomers","response","get","headers","data","fetchRoutes","saveRoute","route","post","deleteRoute","routeId","delete","optimizeRoute","fetchJobs","fetchCalendarEvents","updateCalendarEvent","event","put","id","saveSchedule","schedule"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\nconst getHeaders = () => ({ Authorization: `Bearer ${localStorage.getItem('token')}` });\r\n\r\nexport const fetchCustomers = async () => {\r\n  const response = await axios.get(`${API_URL}/customers`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchRoutes = async () => {\r\n  const response = await axios.get(`${API_URL}/routes`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const saveRoute = async (route) => {\r\n  const response = await axios.post(`${API_URL}/routes`, route, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteRoute = async (routeId) => {\r\n  await axios.delete(`${API_URL}/routes/${routeId}`, { headers: getHeaders() });\r\n};\r\n\r\nexport const optimizeRoute = async (routeId) => {\r\n  const response = await axios.post(`${API_URL}/routes/${routeId}/optimize`, {}, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchJobs = async () => {\r\n  const response = await axios.get(`${API_URL}/jobs`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCalendarEvents = async () => {\r\n  const response = await axios.get(`${API_URL}/calendar-events`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const updateCalendarEvent = async (event) => {\r\n  const response = await axios.put(`${API_URL}/calendar-events/${event.id}`, event, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const saveSchedule = async (routeId, schedule) => {\r\n  const response = await axios.post(`${API_URL}/routes/${routeId}/schedule`, schedule, { headers: getHeaders() });\r\n  return response.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAC3C,MAAMC,UAAU,GAAGA,CAAA,MAAO;EAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAAG,CAAC,CAAC;AAEvF,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,YAAY,EAAE;IAAEQ,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EACnF,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMJ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,SAAS,EAAE;IAAEQ,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EAChF,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,SAAS,EAAEY,KAAK,EAAE;IAAEJ,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EACxF,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMhB,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,WAAWe,OAAO,EAAE,EAAE;IAAEP,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;AAC/E,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAG,MAAOF,OAAO,IAAK;EAC9C,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,WAAWe,OAAO,WAAW,EAAE,CAAC,CAAC,EAAE;IAAEP,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EACzG,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,OAAO,EAAE;IAAEQ,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EAC9E,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,MAAMb,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,kBAAkB,EAAE;IAAEQ,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EACzF,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAG,MAAOC,KAAK,IAAK;EAClD,MAAMf,QAAQ,GAAG,MAAMP,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,oBAAoBqB,KAAK,CAACE,EAAE,EAAE,EAAEF,KAAK,EAAE;IAAEb,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EAC5G,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAAA,CAAOT,OAAO,EAAEU,QAAQ,KAAK;EACvD,MAAMnB,QAAQ,GAAG,MAAMP,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,WAAWe,OAAO,WAAW,EAAEU,QAAQ,EAAE;IAAEjB,OAAO,EAAEP,UAAU,CAAC;EAAE,CAAC,CAAC;EAC/G,OAAOK,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}