{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckIcon } from '@heroicons/react/24/solid';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(''); // New state for success messages\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    routeIndex: null\n  });\n  const [showRouteNameModal, setShowRouteNameModal] = useState(false);\n  const [newRouteName, setNewRouteName] = useState('');\n  const [confirmCompleteJobsDialog, setConfirmCompleteJobsDialog] = useState({\n    isOpen: false,\n    activeJobIds: [],\n    inactiveJobIds: []\n  });\n  const [expandedRoutes, setExpandedRoutes] = useState({});\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/jobs'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n\n      // Create a job map for easy lookup\n      const jobMap = {};\n      fetchedJobs.forEach(job => {\n        jobMap[job._id] = job;\n      });\n\n      // Prepare current date\n      const now = new Date();\n      const normalizeDate = date => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const today = normalizeDate(now);\n\n      // Function to determine if a job is due for service\n      const isJobDue = job => {\n        // Filter out completed jobs\n        if (job.status === 'Completed') {\n          return false;\n        }\n\n        // Jobs without lastServiceDate are due\n        if (!job.lastServiceDate) {\n          return true;\n        }\n        const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\n        const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\n\n        // Apply recurrence pattern logic\n        if (job.isRecurring) {\n          switch (job.recurrencePattern) {\n            case 'Weekly':\n              return daysSinceLastService >= 7;\n            case 'Bi-weekly':\n              return daysSinceLastService >= 14;\n            case 'Monthly':\n              return daysSinceLastService >= 30;\n            default:\n              return false;\n          }\n        } else {\n          // One-time jobs are due if they haven't been serviced yet\n          return true;\n        }\n      };\n\n      // Update jobs in routes with full job data and determine if they are due\n      exports.updateAllRoutes = async (req, res) => {\n        const session = await mongoose.startSession();\n        session.startTransaction();\n        try {\n          console.log('Starting updateAllRoutes transaction');\n          const {\n            routes\n          } = req.body;\n          console.log('Received routes data:', JSON.stringify(routes, null, 2));\n          if (typeof routes !== 'object' || routes === null) {\n            throw new Error('Invalid routes data');\n          }\n\n          // Delete all existing routes for this user\n          await Route.deleteMany({\n            createdBy: req.user._id\n          }, {\n            session\n          });\n          for (const [day, dayRoutes] of Object.entries(routes)) {\n            console.log(`Processing routes for ${day}`);\n            for (let i = 0; i < dayRoutes.length; i++) {\n              const routeData = dayRoutes[i];\n              const jobIds = Array.isArray(routeData === null || routeData === void 0 ? void 0 : routeData.jobs) ? routeData.jobs : [];\n              console.log(`Creating route for ${day}, index ${i}, jobs:`, jobIds);\n              const newRoute = {\n                createdBy: req.user._id,\n                day,\n                index: i,\n                name: routeData.name || `Route ${i + 1}`,\n                // Add default name if not provided\n                jobs: jobIds,\n                employee: routeData.employee || null,\n                crew: routeData.crew || null\n              };\n              console.log(`New route data:`, JSON.stringify(newRoute, null, 2));\n              try {\n                await Route.create([newRoute], {\n                  session\n                });\n              } catch (routeError) {\n                console.error(`Error creating route:`, routeError);\n                throw routeError;\n              }\n            }\n          }\n\n          // Update all jobs to remove scheduledDay if they're not in any route\n          const allScheduledJobIds = Object.values(routes).flat().flatMap(route => Array.isArray(route.jobs) ? route.jobs : []);\n          console.log('Updating unscheduled jobs');\n          await Job.updateMany({\n            createdBy: req.user._id,\n            _id: {\n              $nin: allScheduledJobIds\n            }\n          }, {\n            $set: {\n              scheduledDay: null\n            }\n          }, {\n            session\n          });\n          await session.commitTransaction();\n          console.log('Transaction committed successfully');\n          res.json({\n            message: 'Routes and job pool updated successfully'\n          });\n        } catch (error) {\n          console.error('Error in updateAllRoutes:', error);\n          await session.abortTransaction();\n          res.status(500).json({\n            message: 'Failed to update routes and job pool',\n            error: error.message\n          });\n        } finally {\n          session.endSession();\n        }\n      };\n\n      // Prepare the job pool by including jobs not in any route\n      const jobsInRoutes = new Set(Object.values(processedRoutes).flatMap(dayRoutes => dayRoutes.flatMap(route => Object.values(route.jobs).flat().map(job => job._id))));\n      const jobPoolJobs = fetchedJobs.filter(job => {\n        // Exclude jobs that are already scheduled in routes\n        if (jobsInRoutes.has(job._id)) {\n          return false;\n        }\n        // Exclude jobs that are completed\n        if (job.status === 'Completed') {\n          return false;\n        }\n        return true; // Include all other jobs\n      }).map(job => ({\n        ...job,\n        isDue: isJobDue(job)\n      }));\n      setRoutes(processedRoutes);\n      setJobPool(jobPoolJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n      console.log('Initialized data:', {\n        routes: processedRoutes,\n        jobPool: jobPoolJobs,\n        employees: fetchedEmployees,\n        crews: fetchedCrews\n      });\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map((route, index) => {\n          var _route$employee, _route$crew;\n          return {\n            index: route.index,\n            name: route.name || `Route ${index + 1}`,\n            // Ensure name is always set\n            jobs: Object.values(route.jobs).flat().map(job => typeof job === 'string' ? job : job._id),\n            employee: ((_route$employee = route.employee) === null || _route$employee === void 0 ? void 0 : _route$employee._id) || null,\n            crew: ((_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id) || null\n          };\n        });\n        return acc;\n      }, {});\n      console.log('Saving routes:', JSON.stringify(routesToSave, null, 2));\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error saving routes:', err);\n      setError(`Failed to save routes: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    const sourceId = source.droppableId.split('-');\n    const destId = destination.droppableId.split('-');\n    const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n    const sourcePattern = sourceId[2];\n    const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n    const destPattern = destId[2];\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n\n      // Moving from job pool to a route\n      if (source.droppableId.startsWith('jobPool') && destRouteIndex !== null) {\n        const job = jobPool[source.index];\n        if (!job) return updatedRoutes;\n\n        // Determine the recurrence pattern of the job\n        const pattern = !job.isRecurring ? 'oneTime' : job.recurrencePattern === 'Weekly' ? 'weekly' : job.recurrencePattern === 'Bi-weekly' ? 'biWeekly' : job.recurrencePattern === 'Monthly' ? 'monthly' : null;\n        if (!pattern) return updatedRoutes;\n\n        // Add job to the destination route's recurrence group\n        updatedRoutes[selectedDay][destRouteIndex].jobs[pattern].splice(destination.index, 0, job);\n\n        // Remove from job pool\n        const updatedJobPool = [...jobPool];\n        updatedJobPool.splice(source.index, 1);\n        setJobPool(updatedJobPool);\n      }\n\n      // Moving within a route or between routes\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        const sourceJobs = updatedRoutes[selectedDay][sourceRouteIndex].jobs[sourcePattern];\n        const destJobs = updatedRoutes[selectedDay][destRouteIndex].jobs[destPattern];\n        const [movedJob] = sourceJobs.splice(source.index, 1);\n        destJobs.splice(destination.index, 0, movedJob);\n      }\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async routeName => {\n    if (!routeName) {\n      routeName = `Route ${routes[selectedDay].length + 1}`;\n    }\n    const newRoute = {\n      index: routes[selectedDay].length,\n      name: routeName,\n      jobs: {\n        oneTime: [],\n        weekly: [],\n        biWeekly: [],\n        monthly: []\n      },\n      employee: null,\n      crew: null\n    };\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], newRoute]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const toggleRouteExpansion = routeIndex => {\n    setExpandedRoutes(prevState => ({\n      ...prevState,\n      [routeIndex]: !prevState[routeIndex]\n    }));\n  };\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n\n        // Collect all incomplete jobs from the deleted route's job groups\n        const incompleteJobs = Object.values(deletedRoute.jobs).flat().filter(job => job.status !== 'Completed');\n        setJobPool(prevJobPool => [...prevJobPool, ...incompleteJobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = (routeIndex, pattern, jobIndex) => {\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const route = updatedRoutes[selectedDay][routeIndex];\n\n      // Remove the job from the correct job group\n      const removedJob = route.jobs[pattern].splice(jobIndex, 1)[0];\n\n      // Add the removed job back to the job pool only if it's not completed\n      if (removedJob.status !== 'Completed') {\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n      }\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  };\n  const [assigningRoutes, setAssigningRoutes] = useState({});\n  const assignRoute = async (routeIndex, assigneeId) => {\n    const [type, id] = assigneeId.split('-');\n    setAssigningRoutes(prev => ({\n      ...prev,\n      [routeIndex]: true\n    }));\n    try {\n      console.log(`Assigning ${type} with ID: ${id} to route ${routeIndex} for day ${selectedDay}`);\n\n      // Sending the appropriate payload to the API\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\n        [type]: id\n      });\n\n      // Since fetchWithAuth returns parsed data directly, no need to check response.ok or status\n      console.log('Response from server:', response);\n\n      // Ensure the response contains the expected fields, otherwise consider it an error\n      if (!response || !response._id) {\n        throw new Error('Invalid response format');\n      }\n\n      // Assuming the response is valid and contains the updated route\n      const updatedRoute = response; // Use the response directly since fetchWithAuth returns the data\n      setRoutes(prevRoutes => {\n        const updatedDayRoutes = prevRoutes[selectedDay].map(route => {\n          if (route.index === routeIndex) {\n            var _employees$find, _crews$find;\n            return {\n              ...route,\n              employee: type === 'employee' ? {\n                _id: id,\n                name: (_employees$find = employees.find(e => e._id === id)) === null || _employees$find === void 0 ? void 0 : _employees$find.name\n              } : null,\n              crew: type === 'crew' ? {\n                _id: id,\n                name: (_crews$find = crews.find(c => c._id === id)) === null || _crews$find === void 0 ? void 0 : _crews$find.name\n              } : null\n            };\n          }\n          return route;\n        });\n        return {\n          ...prevRoutes,\n          [selectedDay]: updatedDayRoutes\n        };\n      });\n      console.log(`Route assigned successfully: day ${selectedDay}, index ${routeIndex}, ${type}: ${id}`);\n    } catch (error) {\n      console.error('Error assigning route:', error);\n      setError('Failed to assign route. Please try again.');\n    } finally {\n      setAssigningRoutes(prev => ({\n        ...prev,\n        [routeIndex]: false\n      }));\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const renderLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2 p-2 bg-gray-800 rounded-lg text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"Job Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), \" One-time job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), \" Weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-teal-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), \" Bi-weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), \" Monthly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-gray-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), \" Other recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-white opacity-100 mr-2 border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), \" Due for service\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-white opacity-50 mr-2 border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), \" Not due yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 488,\n    columnNumber: 5\n  }, this);\n  const shouldReturnToPool = (job, now) => {\n    if (!job.isRecurring) return false;\n    const normalizeDate = date => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\n    const today = normalizeDate(now);\n    const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\n    switch (job.recurrencePattern) {\n      case 'Weekly':\n        return daysSinceLastService >= 7;\n      case 'Bi-weekly':\n        return daysSinceLastService >= 14;\n      case 'Monthly':\n        return daysSinceLastService >= 30;\n      default:\n        return false;\n    }\n  };\n\n  // Updated handleCompleteJob function\n  const handleCompleteJob = async jobIds => {\n    // Collect all jobs from jobPool and routes\n    const allJobs = [...jobPool, ...Object.values(routes).flatMap(dayRoutes => dayRoutes.flatMap(route => Object.values(route.jobs).flat()))];\n\n    // Filter the selected jobs\n    const selectedJobs = allJobs.filter(job => jobIds.includes(job._id));\n\n    // Separate active and inactive jobs\n    const activeJobs = selectedJobs.filter(job => job.isDue);\n    const inactiveJobs = selectedJobs.filter(job => !job.isDue);\n    if (inactiveJobs.length > 0) {\n      // Open confirmation dialog\n      setConfirmCompleteJobsDialog({\n        isOpen: true,\n        activeJobIds: activeJobs.map(job => job._id),\n        inactiveJobIds: inactiveJobs.map(job => job._id)\n      });\n    } else {\n      // Proceed with completing active jobs\n      await completeJobs(jobIds);\n    }\n  };\n  const completeJobs = async jobIds => {\n    try {\n      await Promise.all(jobIds.map(async jobId => {\n        await fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {});\n      }));\n\n      // Re-fetch data to update the state\n      await initializeData();\n      setSelectedJobs([]);\n      setSuccessMessage(\"Jobs completed successfully!\");\n    } catch (error) {\n      console.error('Error completing jobs:', error);\n      setError(`Failed to complete jobs: ${error.message}`);\n    }\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, pattern, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null;\n    const isExpanded = expandedJobs[job._id];\n    const isSelected = selectedJobs.includes(job._id);\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const jobTitle = job.title || 'No Title';\n\n    // Calculate days since last service\n    const now = new Date();\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate) : null;\n    const daysSinceLastService = lastServiceDate ? Math.floor((now - lastServiceDate) / (1000 * 60 * 60 * 24)) : 'N/A';\n\n    // Prepare display text for days since last service\n    const daysSinceText = daysSinceLastService !== 'N/A' ? `${daysSinceLastService} day${daysSinceLastService !== 1 ? 's' : ''} ago` : 'No service yet';\n\n    // Determine job color based on recurrence pattern\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      weekly: 'bg-blue-600 hover:bg-blue-700',\n      biWeekly: 'bg-teal-600 hover:bg-teal-700',\n      monthly: 'bg-purple-600 hover:bg-purple-700'\n    };\n    const baseColor = jobColors[pattern] || 'bg-gray-600 hover:bg-gray-700';\n    const opacityClass = job.isDue ? 'opacity-100' : 'opacity-50';\n    const jobStyle = {\n      border: isSelected ? '2px solid white' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${baseColor} ${opacityClass}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-white\",\n            children: customerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-200\",\n            children: daysSinceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, pattern, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.price || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? job.recurrencePattern : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Last Service Date: \", lastServiceDate ? lastServiceDate.toLocaleDateString() : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Days Since Last Service: \", daysSinceText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Status: \", job.isDue ? 'Due for Service' : 'Not Due Yet']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCompleteRoute = async routeIndex => {\n    const route = routes[selectedDay][routeIndex];\n\n    // Collect all job IDs from the route\n    const jobIds = Object.values(route.jobs).flat().map(job => job._id);\n    if (jobIds.length === 0) {\n      setError('No jobs to complete in this route.');\n      return;\n    }\n    try {\n      await handleCompleteJob(jobIds);\n    } catch (error) {\n      console.error('Error completing route jobs:', error);\n      setError(`Failed to complete route jobs: ${error.message}`);\n    }\n  };\n  const renderDroppableArea = (id, route, isJobPool = false) => {\n    const routeIndex = parseInt(id.split('-')[1], 10);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg\",\n      children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 bg-gray-700 text-white rounded\",\n          onChange: e => assignRoute(routeIndex, e.target.value),\n          value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n          disabled: assigningRoutes[routeIndex],\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Assign to...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Employees\",\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `employee-${employee._id}`,\n              children: employee.name\n            }, employee._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Crews\",\n            children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `crew-${crew._id}`,\n              children: crew.name\n            }, crew._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this), ['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white capitalize\",\n          children: pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${id}-${pattern}`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"space-y-2 mt-2\",\n            children: [route.jobs[pattern].length > 0 ? route.jobs[pattern].map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: job._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: renderJobCard(job, true, routeIndex, pattern, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 27\n              }, this)\n            }, job._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: [\"No \", pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly'), \" jobs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 21\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)]\n      }, pattern, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white p-4 rounded-lg mb-4\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-500 text-white p-4 rounded-lg mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowRouteNameModal(true),\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => {\n            // Calculate total revenue for weekly jobs\n            const weeklyJobs = route.jobs['weekly'] || [];\n            const totalWeeklyRevenue = weeklyJobs.reduce((sum, job) => {\n              const jobCost = parseFloat(job.cost || job.price || 0);\n              return sum + (isNaN(jobCost) ? 0 : jobCost);\n            }, 0);\n\n            // Calculate total revenue for bi-weekly jobs\n            const biWeeklyJobs = route.jobs['biWeekly'] || [];\n            const totalBiWeeklyRevenue = biWeeklyJobs.reduce((sum, job) => {\n              const jobCost = parseFloat(job.cost || job.price || 0);\n              return sum + (isNaN(jobCost) ? 0 : jobCost);\n            }, 0);\n\n            // Total revenue from weekly and bi-weekly jobs\n            const totalWeeklyAndBiWeeklyRevenue = totalWeeklyRevenue + totalBiWeeklyRevenue;\n\n            // Check if the route is expanded\n            const isExpanded = expandedRoutes[route.index];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleRouteExpansion(route.index),\n                    className: \"text-white mr-2 bg-blue-500 p-2 rounded-md flex items-center hover:bg-blue-600\",\n                    children: isExpanded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                        className: \"w-6 h-6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 878,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1\",\n                        children: \"Collapse\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 879,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                        className: \"w-6 h-6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 883,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1\",\n                        children: \"Expand\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 884,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold ml-2\",\n                    children: route.name || `Route ${route.index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteRoute(route.index),\n                  className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                  children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                    className: \"w-5 h-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full p-2 bg-gray-700 text-white rounded\",\n                  onChange: e => assignRoute(route.index, e.target.value),\n                  value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n                  disabled: assigningRoutes[route.index],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Assign to...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 910,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Employees\",\n                    children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: `employee-${employee._id}`,\n                      children: employee.name\n                    }, employee._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 913,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Crews\",\n                    children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: `crew-${crew._id}`,\n                      children: crew.name\n                    }, crew._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 918,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 21\n              }, this), isExpanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: ['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-semibold text-white capitalize\",\n                    children: pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                    droppableId: `route-${route.index}-${pattern}`,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.droppableProps,\n                      className: \"space-y-2 mt-2\",\n                      children: [route.jobs[pattern] && route.jobs[pattern].length > 0 ? route.jobs[pattern].map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: job._id,\n                        index: index,\n                        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          children: renderJobCard(job, true, route.index, pattern, index)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 944,\n                          columnNumber: 43\n                        }, this)\n                      }, job._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 942,\n                        columnNumber: 39\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-400\",\n                        children: [\"No \", pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly'), \" jobs\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 955,\n                        columnNumber: 37\n                      }, this), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 935,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 29\n                  }, this)]\n                }, pattern, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-white\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"WR: \", totalWeeklyRevenue.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD'\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"WBR: \", totalWeeklyAndBiWeeklyRevenue.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD'\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleCompleteRoute(route.index),\n                  className: \"bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-600 transition\",\n                  children: \"Complete Route\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 21\n              }, this)]\n            }, route.index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedJobs([]),\n                className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n                children: \"Clear Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCompleteJob(selectedJobs),\n                className: \"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\",\n                children: \"Complete Selected Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route or complete.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 p-2 bg-gray-800 rounded-lg text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Job Color Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"flex space-x-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1020,\n                  columnNumber: 19\n                }, this), \" One-time job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 19\n                }, this), \" Weekly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-teal-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 19\n                }, this), \" Bi-weekly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 19\n                }, this), \" Monthly job\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"jobPool-0\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\",\n              children: [jobPool.length > 0 ? jobPool.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job._id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: renderJobCard(job)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 27\n                }, this)\n              }, job._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white text-center\",\n                children: \"No jobs available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 21\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 11\n      }, this), confirmCompleteJobsDialog.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Confirm Job Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4\",\n            children: [\"You have selected \", confirmCompleteJobsDialog.inactiveJobIds.length, \" inactive job(s). Are you sure you want to complete them?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setConfirmCompleteJobsDialog({\n                isOpen: false,\n                activeJobIds: [],\n                inactiveJobIds: []\n              }),\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                // Proceed with completing all jobs\n                await completeJobs([...confirmCompleteJobsDialog.activeJobIds, ...confirmCompleteJobsDialog.inactiveJobIds]);\n                setConfirmCompleteJobsDialog({\n                  isOpen: false,\n                  activeJobIds: [],\n                  inactiveJobIds: []\n                });\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 11\n      }, this), confirmDialog.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Confirm Route Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4\",\n            children: \"Are you sure you want to complete all jobs in this route? This includes inactive jobs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setConfirmDialog({\n                isOpen: false,\n                routeIndex: null\n              }),\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                await handleCompleteRoute(confirmDialog.routeIndex);\n                setConfirmDialog({\n                  isOpen: false,\n                  routeIndex: null\n                }); // Close after confirming\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 11\n      }, this), showRouteNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg text-white shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Create New Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Route Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full p-2 bg-gray-700 text-white rounded\",\n              value: newRouteName,\n              onChange: e => setNewRouteName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowRouteNameModal(false);\n                setNewRouteName('');\n              },\n              className: \"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                addNewRoute(newRouteName);\n                setShowRouteNameModal(false);\n                setNewRouteName('');\n              },\n              className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 786,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"Ed4OC+aVqsrSiUo47e62LPiMIfU=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","CheckIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","successMessage","setSuccessMessage","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","confirmDialog","setConfirmDialog","isOpen","routeIndex","showRouteNameModal","setShowRouteNameModal","newRouteName","setNewRouteName","confirmCompleteJobsDialog","setConfirmCompleteJobsDialog","activeJobIds","inactiveJobIds","expandedRoutes","setExpandedRoutes","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","jobMap","forEach","job","_id","now","Date","normalizeDate","date","getFullYear","getMonth","getDate","today","isJobDue","status","lastServiceDate","daysSinceLastService","Math","floor","isRecurring","recurrencePattern","exports","updateAllRoutes","req","res","session","mongoose","startSession","startTransaction","console","log","body","JSON","stringify","Error","Route","deleteMany","createdBy","user","day","dayRoutes","Object","entries","i","length","routeData","jobIds","Array","isArray","jobs","newRoute","index","name","employee","crew","create","routeError","allScheduledJobIds","values","flat","flatMap","route","Job","updateMany","$nin","$set","scheduledDay","commitTransaction","json","message","abortTransaction","endSession","jobsInRoutes","Set","processedRoutes","map","jobPoolJobs","filter","has","isDue","err","saveRoutes","updatedRoutes","routesToSave","reduce","acc","_route$employee","_route$crew","_err$response","_err$response$data","response","data","debouncedSaveRoutes","onDragEnd","result","source","destination","sourceId","droppableId","split","destId","sourceRouteIndex","parseInt","sourcePattern","destRouteIndex","destPattern","prevRoutes","startsWith","pattern","splice","updatedJobPool","sourceJobs","destJobs","movedJob","addNewRoute","routeName","oneTime","weekly","biWeekly","monthly","newRouteState","toggleRouteExpansion","prevState","deleteRoute","deletedRoute","incompleteJobs","prevJobPool","idx","removeJobFromRoute","jobIndex","removedJob","assigningRoutes","setAssigningRoutes","assignRoute","assigneeId","type","id","prev","updatedRoute","updatedDayRoutes","_employees$find","_crews$find","find","e","c","handleJobSelection","prevSelectedJobs","includes","toggleJobExpansion","jobId","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","min","renderLegend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","shouldReturnToPool","handleCompleteJob","allJobs","activeJobs","inactiveJobs","completeJobs","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","isSelected","customerName","customer","jobTitle","title","daysSinceText","jobColors","baseColor","opacityClass","jobStyle","border","style","onClick","stopPropagation","location","address","price","toLocaleDateString","handleCompleteRoute","renderDroppableArea","isJobPool","onChange","target","value","disabled","label","replace","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","weeklyJobs","totalWeeklyRevenue","sum","jobCost","parseFloat","cost","isNaN","biWeeklyJobs","totalBiWeeklyRevenue","totalWeeklyAndBiWeeklyRevenue","toLocaleString","currency","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { CheckIcon } from '@heroicons/react/24/solid';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n   const [successMessage, setSuccessMessage] = useState('');  // New state for success messages\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, routeIndex: null });\r\n  const [showRouteNameModal, setShowRouteNameModal] = useState(false);\r\n  const [newRouteName, setNewRouteName] = useState('');\r\n  const [confirmCompleteJobsDialog, setConfirmCompleteJobsDialog] = useState({\r\n    isOpen: false,\r\n    activeJobIds: [],\r\n    inactiveJobIds: [],\r\n  });\r\n  const [expandedRoutes, setExpandedRoutes] = useState({});\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [\r\n        fetchedRoutesResponse,\r\n        fetchedJobsResponse,\r\n        fetchedEmployeesResponse,\r\n        fetchedCrewsResponse,\r\n      ] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/jobs'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n  \r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n  \r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n  \r\n      // Create a job map for easy lookup\r\n      const jobMap = {};\r\n      fetchedJobs.forEach(job => {\r\n        jobMap[job._id] = job;\r\n      });\r\n  \r\n      // Prepare current date\r\n      const now = new Date();\r\n      const normalizeDate = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n      const today = normalizeDate(now);\r\n  \r\n      // Function to determine if a job is due for service\r\n      const isJobDue = (job) => {\r\n        // Filter out completed jobs\r\n        if (job.status === 'Completed') {\r\n          return false;\r\n        }\r\n  \r\n        // Jobs without lastServiceDate are due\r\n        if (!job.lastServiceDate) {\r\n          return true;\r\n        }\r\n  \r\n        const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\r\n        const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\r\n  \r\n        // Apply recurrence pattern logic\r\n        if (job.isRecurring) {\r\n          switch (job.recurrencePattern) {\r\n            case 'Weekly':\r\n              return daysSinceLastService >= 7;\r\n            case 'Bi-weekly':\r\n              return daysSinceLastService >= 14;\r\n            case 'Monthly':\r\n              return daysSinceLastService >= 30;\r\n            default:\r\n              return false;\r\n          }\r\n        } else {\r\n          // One-time jobs are due if they haven't been serviced yet\r\n          return true;\r\n        }\r\n      };\r\n  \r\n      // Update jobs in routes with full job data and determine if they are due\r\n      exports.updateAllRoutes = async (req, res) => {\r\n        const session = await mongoose.startSession();\r\n        session.startTransaction();\r\n      \r\n        try {\r\n          console.log('Starting updateAllRoutes transaction');\r\n          const { routes } = req.body;\r\n          console.log('Received routes data:', JSON.stringify(routes, null, 2));\r\n      \r\n          if (typeof routes !== 'object' || routes === null) {\r\n            throw new Error('Invalid routes data');\r\n          }\r\n      \r\n          // Delete all existing routes for this user\r\n          await Route.deleteMany({ createdBy: req.user._id }, { session });\r\n      \r\n          for (const [day, dayRoutes] of Object.entries(routes)) {\r\n            console.log(`Processing routes for ${day}`);\r\n            \r\n            for (let i = 0; i < dayRoutes.length; i++) {\r\n              const routeData = dayRoutes[i];\r\n              const jobIds = Array.isArray(routeData?.jobs) ? routeData.jobs : [];\r\n              \r\n              console.log(`Creating route for ${day}, index ${i}, jobs:`, jobIds);\r\n          \r\n              const newRoute = {\r\n                createdBy: req.user._id,\r\n                day,\r\n                index: i,\r\n                name: routeData.name || `Route ${i + 1}`, // Add default name if not provided\r\n                jobs: jobIds,\r\n                employee: routeData.employee || null,\r\n                crew: routeData.crew || null\r\n              };\r\n      \r\n              console.log(`New route data:`, JSON.stringify(newRoute, null, 2));\r\n      \r\n              try {\r\n                await Route.create([newRoute], { session });\r\n              } catch (routeError) {\r\n                console.error(`Error creating route:`, routeError);\r\n                throw routeError;\r\n              }\r\n            }\r\n          }\r\n      \r\n          // Update all jobs to remove scheduledDay if they're not in any route\r\n          const allScheduledJobIds = Object.values(routes)\r\n            .flat()\r\n            .flatMap(route => Array.isArray(route.jobs) ? route.jobs : []);\r\n      \r\n          console.log('Updating unscheduled jobs');\r\n          await Job.updateMany(\r\n            { \r\n              createdBy: req.user._id, \r\n              _id: { $nin: allScheduledJobIds }\r\n            },\r\n            { $set: { scheduledDay: null } },\r\n            { session }\r\n          );\r\n      \r\n          await session.commitTransaction();\r\n          console.log('Transaction committed successfully');\r\n          res.json({ message: 'Routes and job pool updated successfully' });\r\n        } catch (error) {\r\n          console.error('Error in updateAllRoutes:', error);\r\n          await session.abortTransaction();\r\n          res.status(500).json({ message: 'Failed to update routes and job pool', error: error.message });\r\n        } finally {\r\n          session.endSession();\r\n        }\r\n      };\r\n  \r\n      // Prepare the job pool by including jobs not in any route\r\n      const jobsInRoutes = new Set(\r\n        Object.values(processedRoutes).flatMap(dayRoutes =>\r\n          dayRoutes.flatMap(route =>\r\n            Object.values(route.jobs).flat().map(job => job._id)\r\n          )\r\n        )\r\n      );\r\n  \r\n      const jobPoolJobs = fetchedJobs\r\n        .filter(job => {\r\n          // Exclude jobs that are already scheduled in routes\r\n          if (jobsInRoutes.has(job._id)) {\r\n            return false;\r\n          }\r\n          // Exclude jobs that are completed\r\n          if (job.status === 'Completed') {\r\n            return false;\r\n          }\r\n          return true; // Include all other jobs\r\n        })\r\n        .map(job => ({\r\n          ...job,\r\n          isDue: isJobDue(job),\r\n        }));\r\n  \r\n      setRoutes(processedRoutes);\r\n      setJobPool(jobPoolJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n  \r\n      console.log('Initialized data:', {\r\n        routes: processedRoutes,\r\n        jobPool: jobPoolJobs,\r\n        employees: fetchedEmployees,\r\n        crews: fetchedCrews,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);  \r\n  \r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map((route, index) => ({\r\n          index: route.index,\r\n          name: route.name || `Route ${index + 1}`, // Ensure name is always set\r\n          jobs: Object.values(route.jobs)\r\n            .flat()\r\n            .map(job => (typeof job === 'string' ? job : job._id)),\r\n          employee: route.employee?._id || null,\r\n          crew: route.crew?._id || null,\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      console.log('Saving routes:', JSON.stringify(routesToSave, null, 2));\r\n  \r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('Routes saved successfully');\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError(`Failed to save routes: ${err.response?.data?.message || err.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes]);\r\n  \r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      return;\r\n    }\r\n  \r\n    const sourceId = source.droppableId.split('-');\r\n    const destId = destination.droppableId.split('-');\r\n  \r\n    const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n    const sourcePattern = sourceId[2];\r\n    const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n    const destPattern = destId[2];\r\n  \r\n    setRoutes(prevRoutes => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId.startsWith('jobPool') && destRouteIndex !== null) {\r\n        const job = jobPool[source.index];\r\n        if (!job) return updatedRoutes;\r\n  \r\n        // Determine the recurrence pattern of the job\r\n        const pattern = !job.isRecurring\r\n          ? 'oneTime'\r\n          : job.recurrencePattern === 'Weekly' ? 'weekly'\r\n          : job.recurrencePattern === 'Bi-weekly' ? 'biWeekly'\r\n          : job.recurrencePattern === 'Monthly' ? 'monthly'\r\n          : null;\r\n  \r\n        if (!pattern) return updatedRoutes;\r\n  \r\n        // Add job to the destination route's recurrence group\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs[pattern].splice(destination.index, 0, job);\r\n  \r\n        // Remove from job pool\r\n        const updatedJobPool = [...jobPool];\r\n        updatedJobPool.splice(source.index, 1);\r\n        setJobPool(updatedJobPool);\r\n      }\r\n  \r\n      // Moving within a route or between routes\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        const sourceJobs = updatedRoutes[selectedDay][sourceRouteIndex].jobs[sourcePattern];\r\n        const destJobs = updatedRoutes[selectedDay][destRouteIndex].jobs[destPattern];\r\n  \r\n        const [movedJob] = sourceJobs.splice(source.index, 1);\r\n        destJobs.splice(destination.index, 0, movedJob);\r\n      }\r\n  \r\n      return updatedRoutes;\r\n    });\r\n  \r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedDay, debouncedSaveRoutes]);  \r\n\r\n  const addNewRoute = useCallback(async (routeName) => {\r\n    if (!routeName) {\r\n      routeName = `Route ${routes[selectedDay].length + 1}`;\r\n    }\r\n    const newRoute = {\r\n      index: routes[selectedDay].length,\r\n      name: routeName,\r\n      jobs: {\r\n        oneTime: [],\r\n        weekly: [],\r\n        biWeekly: [],\r\n        monthly: [],\r\n      },\r\n      employee: null,\r\n      crew: null,\r\n    };\r\n    \r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [...routes[selectedDay], newRoute],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n  \r\n\r\n  const toggleRouteExpansion = (routeIndex) => {\r\n    setExpandedRoutes((prevState) => ({\r\n      ...prevState,\r\n      [routeIndex]: !prevState[routeIndex],\r\n    }));\r\n  };\r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n  \r\n        // Collect all incomplete jobs from the deleted route's job groups\r\n        const incompleteJobs = Object.values(deletedRoute.jobs)\r\n          .flat()\r\n          .filter(job => job.status !== 'Completed');\r\n  \r\n        setJobPool(prevJobPool => [...prevJobPool, ...incompleteJobs]);\r\n  \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n  \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);  \r\n\r\n  const removeJobFromRoute = (routeIndex, pattern, jobIndex) => {\r\n    setRoutes(prevRoutes => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const route = updatedRoutes[selectedDay][routeIndex];\r\n  \r\n      // Remove the job from the correct job group\r\n      const removedJob = route.jobs[pattern].splice(jobIndex, 1)[0];\r\n  \r\n      // Add the removed job back to the job pool only if it's not completed\r\n      if (removedJob.status !== 'Completed') {\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n      }\r\n  \r\n      return updatedRoutes;\r\n    });\r\n  \r\n    debouncedSaveRoutes();\r\n  };\r\n  \r\n  \r\n\r\n  const [assigningRoutes, setAssigningRoutes] = useState({});\r\n  const assignRoute = async (routeIndex, assigneeId) => {\r\n    const [type, id] = assigneeId.split('-');\r\n    setAssigningRoutes(prev => ({ ...prev, [routeIndex]: true }));\r\n  \r\n    try {\r\n      console.log(`Assigning ${type} with ID: ${id} to route ${routeIndex} for day ${selectedDay}`);\r\n      \r\n      // Sending the appropriate payload to the API\r\n      const response = await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}/assign`, 'PUT', {\r\n        [type]: id,\r\n      });\r\n  \r\n      // Since fetchWithAuth returns parsed data directly, no need to check response.ok or status\r\n      console.log('Response from server:', response);\r\n  \r\n      // Ensure the response contains the expected fields, otherwise consider it an error\r\n      if (!response || !response._id) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n  \r\n      // Assuming the response is valid and contains the updated route\r\n      const updatedRoute = response; // Use the response directly since fetchWithAuth returns the data\r\n      setRoutes((prevRoutes) => {\r\n        const updatedDayRoutes = prevRoutes[selectedDay].map((route) => {\r\n          if (route.index === routeIndex) {\r\n            return {\r\n              ...route,\r\n              employee: type === 'employee' ? { _id: id, name: employees.find(e => e._id === id)?.name } : null,\r\n              crew: type === 'crew' ? { _id: id, name: crews.find(c => c._id === id)?.name } : null,\r\n            };\r\n          }\r\n          return route;\r\n        });\r\n  \r\n        return {\r\n          ...prevRoutes,\r\n          [selectedDay]: updatedDayRoutes,\r\n        };\r\n      });\r\n      console.log(`Route assigned successfully: day ${selectedDay}, index ${routeIndex}, ${type}: ${id}`);\r\n    } catch (error) {\r\n      console.error('Error assigning route:', error);\r\n      setError('Failed to assign route. Please try again.');\r\n    } finally {\r\n      setAssigningRoutes(prev => ({ ...prev, [routeIndex]: false }));\r\n    }\r\n  };\r\n  \r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs((prev) => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const renderLegend = () => (\r\n    <div className=\"mt-2 p-2 bg-gray-800 rounded-lg text-white\">\r\n      <h3 className=\"font-bold mb-2\">Job Legend</h3>\r\n      <ul className=\"space-y-1\">\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-teal-600 mr-2\" /> Bi-weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-gray-600 mr-2\" /> Other recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-white opacity-100 mr-2 border\" /> Due for service\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-white opacity-50 mr-2 border\" /> Not due yet\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n  \r\n\r\n  const shouldReturnToPool = (job, now) => {\r\n    if (!job.isRecurring) return false;\r\n    \r\n    const normalizeDate = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n    const lastServiceDate = normalizeDate(new Date(job.lastServiceDate));\r\n    const today = normalizeDate(now);\r\n    \r\n    const daysSinceLastService = Math.floor((today - lastServiceDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    switch (job.recurrencePattern) {\r\n      case 'Weekly':\r\n        return daysSinceLastService >= 7;\r\n      case 'Bi-weekly':\r\n        return daysSinceLastService >= 14;\r\n      case 'Monthly':\r\n        return daysSinceLastService >= 30;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n  \r\n  \r\n  // Updated handleCompleteJob function\r\n  const handleCompleteJob = async (jobIds) => {\r\n    // Collect all jobs from jobPool and routes\r\n    const allJobs = [\r\n      ...jobPool,\r\n      ...Object.values(routes).flatMap(dayRoutes =>\r\n        dayRoutes.flatMap(route =>\r\n          Object.values(route.jobs).flat()\r\n        )\r\n      ),\r\n    ];\r\n  \r\n    // Filter the selected jobs\r\n    const selectedJobs = allJobs.filter(job => jobIds.includes(job._id));\r\n  \r\n    // Separate active and inactive jobs\r\n    const activeJobs = selectedJobs.filter(job => job.isDue);\r\n    const inactiveJobs = selectedJobs.filter(job => !job.isDue);\r\n  \r\n    if (inactiveJobs.length > 0) {\r\n      // Open confirmation dialog\r\n      setConfirmCompleteJobsDialog({\r\n        isOpen: true,\r\n        activeJobIds: activeJobs.map(job => job._id),\r\n        inactiveJobIds: inactiveJobs.map(job => job._id),\r\n      });\r\n    } else {\r\n      // Proceed with completing active jobs\r\n      await completeJobs(jobIds);\r\n    }\r\n  };\r\n  \r\n  const completeJobs = async (jobIds) => {\r\n    try {\r\n      await Promise.all(\r\n        jobIds.map(async (jobId) => {\r\n          await fetchWithAuth(`/jobs/${jobId}/complete`, 'POST', {});\r\n        })\r\n      );\r\n  \r\n      // Re-fetch data to update the state\r\n      await initializeData();\r\n  \r\n      setSelectedJobs([]);\r\n      setSuccessMessage(\"Jobs completed successfully!\");\r\n    } catch (error) {\r\n      console.error('Error completing jobs:', error);\r\n      setError(`Failed to complete jobs: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  \r\n  const renderJobCard = (job, isInRoute = false, routeIndex, pattern, jobIndex) => {\r\n    if (!job) return null;\r\n  \r\n    const isExpanded = expandedJobs[job._id];\r\n    const isSelected = selectedJobs.includes(job._id);\r\n  \r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const jobTitle = job.title || 'No Title';\r\n  \r\n    // Calculate days since last service\r\n    const now = new Date();\r\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate) : null;\r\n    const daysSinceLastService = lastServiceDate\r\n      ? Math.floor((now - lastServiceDate) / (1000 * 60 * 60 * 24))\r\n      : 'N/A';\r\n  \r\n    // Prepare display text for days since last service\r\n    const daysSinceText = daysSinceLastService !== 'N/A'\r\n      ? `${daysSinceLastService} day${daysSinceLastService !== 1 ? 's' : ''} ago`\r\n      : 'No service yet';\r\n  \r\n    // Determine job color based on recurrence pattern\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700',\r\n      weekly: 'bg-blue-600 hover:bg-blue-700',\r\n      biWeekly: 'bg-teal-600 hover:bg-teal-700',\r\n      monthly: 'bg-purple-600 hover:bg-purple-700',\r\n    };\r\n  \r\n    const baseColor = jobColors[pattern] || 'bg-gray-600 hover:bg-gray-700';\r\n  \r\n    const opacityClass = job.isDue ? 'opacity-100' : 'opacity-50';\r\n  \r\n    const jobStyle = {\r\n      border: isSelected ? '2px solid white' : 'none',\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${baseColor} ${opacityClass}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          {/* Display customer name and days since last service */}\r\n          <div>\r\n            <p className=\"font-bold text-white\">{customerName}</p>\r\n            <p className=\"text-sm text-gray-200\">{daysSinceText}</p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, pattern, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{jobTitle}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.price || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? job.recurrencePattern : 'One-time'}</p>\r\n            <p className=\"text-gray-400\">Last Service Date: {lastServiceDate ? lastServiceDate.toLocaleDateString() : 'N/A'}</p>\r\n            <p className=\"text-gray-400\">Days Since Last Service: {daysSinceText}</p>\r\n            <p className=\"text-gray-400\">\r\n              Status: {job.isDue ? 'Due for Service' : 'Not Due Yet'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };  \r\n  \r\n  const handleCompleteRoute = async (routeIndex) => {\r\n    const route = routes[selectedDay][routeIndex];\r\n  \r\n    // Collect all job IDs from the route\r\n    const jobIds = Object.values(route.jobs).flat().map(job => job._id);\r\n  \r\n    if (jobIds.length === 0) {\r\n      setError('No jobs to complete in this route.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      await handleCompleteJob(jobIds);\r\n    } catch (error) {\r\n      console.error('Error completing route jobs:', error);\r\n      setError(`Failed to complete route jobs: ${error.message}`);\r\n    }\r\n  };  \r\n  \r\n  const renderDroppableArea = (id, route, isJobPool = false) => {\r\n    const routeIndex = parseInt(id.split('-')[1], 10);\r\n  \r\n    return (\r\n      <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n        {!isJobPool && (\r\n          <div className=\"mb-4\">\r\n            <select\r\n              className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n              onChange={(e) => assignRoute(routeIndex, e.target.value)}\r\n              value={\r\n                route.employee ? `employee-${route.employee._id}` :\r\n                route.crew ? `crew-${route.crew._id}` :\r\n                ''\r\n              }\r\n              disabled={assigningRoutes[routeIndex]}\r\n            >\r\n              <option value=\"\">Assign to...</option>\r\n              <optgroup label=\"Employees\">\r\n                {employees.map((employee) => (\r\n                  <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                ))}\r\n              </optgroup>\r\n              <optgroup label=\"Crews\">\r\n                {crews.map((crew) => (\r\n                  <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                ))}\r\n              </optgroup>\r\n            </select>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Render jobs by recurrence pattern, including one-time jobs */}\r\n        {['oneTime', 'weekly', 'biWeekly', 'monthly'].map(pattern => (\r\n          <div key={pattern}>\r\n            <h3 className=\"text-lg font-semibold text-white capitalize\">\r\n              {pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'}\r\n            </h3>\r\n            <Droppable droppableId={`${id}-${pattern}`}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"space-y-2 mt-2\"\r\n                >\r\n                  {route.jobs[pattern].length > 0 ? (\r\n                    route.jobs[pattern].map((job, index) => (\r\n                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            {renderJobCard(job, true, routeIndex, pattern, index)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-gray-400\">No {pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly')} jobs</p>\r\n                  )}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }  \r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n  \r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n  \r\n        {/* Success and Error Messages */}\r\n        {successMessage && (\r\n          <div className=\"bg-green-500 text-white p-4 rounded-lg mb-4\">\r\n            {successMessage}\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div className=\"bg-red-500 text-white p-4 rounded-lg mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n  \r\n        {/* Navigation for selecting days */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n  \r\n        {/* Buttons to cycle routes and add new routes */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={() => setShowRouteNameModal(true)}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\">\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n  \r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {/* Render Routes */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => {\r\n                // Calculate total revenue for weekly jobs\r\n                const weeklyJobs = route.jobs['weekly'] || [];\r\n                const totalWeeklyRevenue = weeklyJobs.reduce((sum, job) => {\r\n                  const jobCost = parseFloat(job.cost || job.price || 0);\r\n                  return sum + (isNaN(jobCost) ? 0 : jobCost);\r\n                }, 0);\r\n  \r\n                // Calculate total revenue for bi-weekly jobs\r\n                const biWeeklyJobs = route.jobs['biWeekly'] || [];\r\n                const totalBiWeeklyRevenue = biWeeklyJobs.reduce((sum, job) => {\r\n                  const jobCost = parseFloat(job.cost || job.price || 0);\r\n                  return sum + (isNaN(jobCost) ? 0 : jobCost);\r\n                }, 0);\r\n  \r\n                // Total revenue from weekly and bi-weekly jobs\r\n                const totalWeeklyAndBiWeeklyRevenue = totalWeeklyRevenue + totalBiWeeklyRevenue;\r\n  \r\n                // Check if the route is expanded\r\n                const isExpanded = expandedRoutes[route.index];\r\n  \r\n                return (\r\n                  <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <button\r\n                          onClick={() => toggleRouteExpansion(route.index)}\r\n                          className=\"text-white mr-2 bg-blue-500 p-2 rounded-md flex items-center hover:bg-blue-600\"\r\n                        >\r\n                          {isExpanded ? (\r\n                            <>\r\n                              <ChevronUpIcon className=\"w-6 h-6\" />\r\n                              <span className=\"ml-1\">Collapse</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <ChevronDownIcon className=\"w-6 h-6\" />\r\n                              <span className=\"ml-1\">Expand</span>\r\n                            </>\r\n                          )}\r\n                        </button>\r\n                        <h2 className=\"text-xl font-semibold ml-2\">{route.name || `Route ${route.index + 1}`}</h2>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => deleteRoute(route.index)}\r\n                        className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                      >\r\n                        <TrashIcon className=\"w-5 h-5\" />\r\n                      </button>\r\n                    </div>\r\n  \r\n                    {/* Assignment Select Box moved back below the header */}\r\n                    <div className=\"mb-4\">\r\n                      <select\r\n                        className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                        onChange={(e) => assignRoute(route.index, e.target.value)}\r\n                        value={\r\n                          route.employee ? `employee-${route.employee._id}` :\r\n                          route.crew ? `crew-${route.crew._id}` :\r\n                          ''\r\n                        }\r\n                        disabled={assigningRoutes[route.index]}\r\n                      >\r\n                        <option value=\"\">Assign to...</option>\r\n                        <optgroup label=\"Employees\">\r\n                          {employees.map((employee) => (\r\n                            <option key={employee._id} value={`employee-${employee._id}`}>{employee.name}</option>\r\n                          ))}\r\n                        </optgroup>\r\n                        <optgroup label=\"Crews\">\r\n                          {crews.map((crew) => (\r\n                            <option key={crew._id} value={`crew-${crew._id}`}>{crew.name}</option>\r\n                          ))}\r\n                        </optgroup>\r\n                      </select>\r\n                    </div>\r\n  \r\n                    {/* Render jobs only if the route is expanded */}\r\n                    {isExpanded && (\r\n                      <>\r\n                        {/* Render jobs by recurrence pattern */}\r\n                        {['oneTime', 'weekly', 'biWeekly', 'monthly'].map((pattern) => (\r\n                          <div key={pattern}>\r\n                            <h3 className=\"text-lg font-semibold text-white capitalize\">\r\n                              {pattern === 'oneTime' ? 'One-Time Jobs' : pattern.replace('biWeekly', 'Bi-weekly') + ' Jobs'}\r\n                            </h3>\r\n                            <Droppable droppableId={`route-${route.index}-${pattern}`}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.droppableProps}\r\n                                  className=\"space-y-2 mt-2\"\r\n                                >\r\n                                  {route.jobs[pattern] && route.jobs[pattern].length > 0 ? (\r\n                                    route.jobs[pattern].map((job, index) => (\r\n                                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                                        {(provided) => (\r\n                                          <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                          >\r\n                                            {renderJobCard(job, true, route.index, pattern, index)}\r\n                                          </div>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    ))\r\n                                  ) : (\r\n                                    <p className=\"text-gray-400\">\r\n                                      No {pattern === 'oneTime' ? 'one-time' : pattern.replace('biWeekly', 'bi-weekly')} jobs\r\n                                    </p>\r\n                                  )}\r\n                                  {provided.placeholder}\r\n                                </div>\r\n                              )}\r\n                            </Droppable>\r\n                          </div>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n  \r\n                    {/* Complete Route Button and Revenue at the bottom of each route */}\r\n                    <div className=\"mt-4 flex justify-between items-center\">\r\n                      <div className=\"text-white\">\r\n                        <p>\r\n                          WR: {totalWeeklyRevenue.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n                        </p>\r\n                        <p>\r\n                          WBR: {totalWeeklyAndBiWeeklyRevenue.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n                        </p>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => handleCompleteRoute(route.index)}\r\n                        className=\"bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-600 transition\"\r\n                      >\r\n                        Complete Route\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n  \r\n          {/* Job Pool */}\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <div className=\"flex space-x-4\">\r\n                  <button\r\n                    onClick={() => setSelectedJobs([])}\r\n                    className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                  >\r\n                    Clear Selection\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleCompleteJob(selectedJobs)}\r\n                    className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition\"\r\n                  >\r\n                    Complete Selected Jobs\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">\r\n              Click on jobs to select multiple, then drag to a route or complete.\r\n            </p>\r\n  \r\n            {/* Job Color Legend */}\r\n            <div className=\"mt-2 p-2 bg-gray-800 rounded-lg text-white\">\r\n              <h3 className=\"font-bold mb-2\">Job Color Legend</h3>\r\n              <ul className=\"flex space-x-8\">\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-teal-600 mr-2\" /> Bi-weekly job\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly job\r\n                </li>\r\n              </ul>\r\n            </div>\r\n  \r\n            {/* Updated Job Pool Rendering */}\r\n            <Droppable droppableId=\"jobPool-0\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\"\r\n                >\r\n                  {jobPool.length > 0 ? (\r\n                    jobPool.map((job, index) => (\r\n                      <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            {renderJobCard(job)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-white text-center\">No jobs available</p>\r\n                  )}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n  \r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Confirmation Dialog for Completing Selected Jobs */}\r\n        {confirmCompleteJobsDialog.isOpen && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Confirm Job Completion</h3>\r\n              <p className=\"mt-4\">\r\n                You have selected {confirmCompleteJobsDialog.inactiveJobIds.length} inactive job(s).\r\n                Are you sure you want to complete them?\r\n              </p>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() =>\r\n                    setConfirmCompleteJobsDialog({ isOpen: false, activeJobIds: [], inactiveJobIds: [] })\r\n                  }\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={async () => {\r\n                    // Proceed with completing all jobs\r\n                    await completeJobs([\r\n                      ...confirmCompleteJobsDialog.activeJobIds,\r\n                      ...confirmCompleteJobsDialog.inactiveJobIds,\r\n                    ]);\r\n                    setConfirmCompleteJobsDialog({ isOpen: false, activeJobIds: [], inactiveJobIds: [] });\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Confirmation Dialog for Completing a Route */}\r\n        {confirmDialog.isOpen && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Confirm Route Completion</h3>\r\n              <p className=\"mt-4\">\r\n                Are you sure you want to complete all jobs in this route? This includes inactive jobs.\r\n              </p>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() => setConfirmDialog({ isOpen: false, routeIndex: null })}\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={async () => {\r\n                    await handleCompleteRoute(confirmDialog.routeIndex);\r\n                    setConfirmDialog({ isOpen: false, routeIndex: null }); // Close after confirming\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Modal for Adding Route Name */}\r\n        {showRouteNameModal && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div className=\"bg-gray-800 p-6 rounded-lg text-white shadow-lg\">\r\n              <h3 className=\"text-xl font-semibold\">Create New Route</h3>\r\n              <div className=\"mt-4\">\r\n                <label className=\"block text-sm font-medium mb-1\">Route Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                  value={newRouteName}\r\n                  onChange={(e) => setNewRouteName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mt-6 flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowRouteNameModal(false);\r\n                    setNewRouteName('');\r\n                  }}\r\n                  className=\"px-4 py-2 bg-gray-600 rounded-md hover:bg-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    addNewRoute(newRouteName);\r\n                    setShowRouteNameModal(false);\r\n                    setNewRouteName('');\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600\"\r\n                >\r\n                  Create\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n  \r\n      </main>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}