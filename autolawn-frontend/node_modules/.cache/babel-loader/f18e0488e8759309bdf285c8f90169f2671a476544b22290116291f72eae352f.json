{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport Header from '../../components/Header';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedFullCalendar = /*#__PURE__*/memo(FullCalendar);\n_c = MemoizedFullCalendar;\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const [newRouteName, setNewRouteName] = useState('');\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData);\n      setRoutes(routesData);\n      generateEvents(jobsData, routesData);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const generateEvents = useCallback((jobsData, routesData) => {\n    const jobEvents = jobsData.map(job => ({\n      id: job._id,\n      title: job.title,\n      start: job.scheduledDate,\n      end: job.scheduledEndDate,\n      color: '#4CAF50',\n      extendedProps: {\n        type: 'job',\n        jobId: job._id\n      }\n    })).filter(event => event.start && event.end);\n    const routeEvents = routesData.map(route => ({\n      id: route._id,\n      title: route.name,\n      start: route.scheduledDate,\n      end: route.scheduledEndDate,\n      color: '#2196F3',\n      extendedProps: {\n        type: 'route',\n        routeId: route._id\n      }\n    })).filter(event => event.start && event.end);\n    setEvents([...jobEvents, ...routeEvents]);\n  }, []);\n  const handleAddRoute = async () => {\n    if (!newRouteName.trim()) {\n      setError('Please enter a route name');\n      return;\n    }\n    try {\n      const newRoute = await saveRoute({\n        name: newRouteName,\n        jobs: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setNewRouteName('');\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n\n      // Move jobs back to unassigned pool\n      const updatedJobs = jobs.map(job => job.route === routeId ? {\n        ...job,\n        route: null\n      } : job);\n      setJobs(updatedJobs);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n\n      // Update events\n      setEvents(prevEvents => prevEvents.filter(event => !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    try {\n      if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n        const routeId = destination.droppableId.split('-')[1];\n        await moveJobToRoute(draggableId, routeId);\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n        const routeId = source.droppableId.split('-')[1];\n        await moveJobToPool(draggableId, routeId);\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n        const sourceRouteId = source.droppableId.split('-')[1];\n        const destRouteId = destination.droppableId.split('-')[1];\n        await moveJobBetweenRoutes(draggableId, sourceRouteId, destRouteId);\n      }\n    } catch (error) {\n      console.error('Error moving job:', error);\n      setError('Failed to move job. Please try again.');\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      const updatedJob = await updateJob(jobId, {\n        route: routeId\n      });\n      const updatedRoute = await updateRoute(routeId, {\n        $push: {\n          jobs: jobId\n        }\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\n\n      // Remove job from scheduling pool\n      setEvents(prevEvents => prevEvents.filter(event => event.extendedProps.jobId !== jobId));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to add job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          jobs: jobId\n        }\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\n\n      // Add job back to scheduling pool\n      const jobEvent = {\n        id: updatedJob._id,\n        title: updatedJob.title,\n        start: updatedJob.scheduledDate,\n        end: updatedJob.scheduledEndDate,\n        color: '#4CAF50',\n        extendedProps: {\n          type: 'job',\n          jobId: updatedJob._id\n        }\n      };\n      setEvents(prevEvents => [...prevEvents, jobEvent]);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      const updatedJob = await updateJob(jobId, {\n        route: destRouteId\n      });\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          jobs: jobId\n        }\n      });\n      await updateRoute(destRouteId, {\n        $push: {\n          jobs: jobId\n        }\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n      setRoutes(prevRoutes => prevRoutes.map(route => {\n        if (route._id === sourceRouteId) {\n          return {\n            ...route,\n            jobs: route.jobs.filter(id => id !== jobId)\n          };\n        } else if (route._id === destRouteId) {\n          return {\n            ...route,\n            jobs: [...route.jobs, jobId]\n          };\n        }\n        return route;\n      }));\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEventDrop = async info => {\n    const {\n      event,\n      oldEvent\n    } = info;\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n      } else if (event.extendedProps.type === 'route') {\n        await updateRoute(event.id, {\n          scheduledDate: event.start,\n          scheduledEndDate: event.end\n        });\n      }\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleEventReceive = info => {\n    const droppedEvent = info.event;\n    const eventData = JSON.parse(info.draggedEl.dataset.event);\n    if (eventData.type === 'job') {\n      handleJobSchedule(eventData.jobId, droppedEvent.start, droppedEvent.end);\n    } else if (eventData.type === 'route') {\n      handleRouteSchedule(eventData.routeId, droppedEvent.start, droppedEvent.end);\n    }\n  };\n  const handleJobSchedule = async (jobId, start, end) => {\n    try {\n      const updatedJob = await updateJob(jobId, {\n        scheduledDate: start,\n        scheduledEndDate: end\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\n      setEvents(prevEvents => [...prevEvents, {\n        id: updatedJob._id,\n        title: updatedJob.title,\n        start: updatedJob.scheduledDate,\n        end: updatedJob.scheduledEndDate,\n        color: '#4CAF50',\n        extendedProps: {\n          type: 'job',\n          jobId: updatedJob._id\n        }\n      }]);\n      setSuccessMessage('Job scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling job:', error);\n      setError('Failed to schedule job. Please try again.');\n    }\n  };\n  const handleRouteSchedule = async (routeId, start, end) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        scheduledDate: start,\n        scheduledEndDate: end\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\n      setEvents(prevEvents => [...prevEvents, {\n        id: updatedRoute._id,\n        title: updatedRoute.name,\n        start: updatedRoute.scheduledDate,\n        end: updatedRoute.scheduledEndDate,\n        color: '#2196F3',\n        extendedProps: {\n          type: 'route',\n          routeId: updatedRoute._id\n        }\n      }]);\n      setSuccessMessage('Route scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling route:', error);\n      setError('Failed to schedule route. Please try again.');\n    }\n  };\n  const handleStartTimeSubmit = async startTime => {\n    setShowStartTimeModal(false);\n    const event = pendingEvent;\n    if (!event) return;\n    const startDate = new Date(event.start);\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\n\n    try {\n      if (event.extendedProps.type === 'job') {\n        await updateJob(event.id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n      } else if (event.extendedProps.type === 'route') {\n        await updateRoute(event.id, {\n          scheduledDate: startDate,\n          scheduledEndDate: endDate\n        });\n      }\n      setEvents(prevEvents => [...prevEvents, {\n        ...event,\n        start: startDate,\n        end: endDate\n      }]);\n      setSuccessMessage('Event scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling event:', error);\n      setError('Failed to schedule event. Please try again.');\n    }\n    setPendingEvent(null);\n  };\n  const renderRoutesList = () => /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `route-${route._id}`,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: `bg-gray-800 p-4 rounded-lg ${snapshot.isDraggingOver ? 'border-2 border-blue-500' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2 text-white\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), route.jobs.map((jobId, index) => {\n            const job = jobs.find(j => j._id === jobId);\n            if (!job) return null;\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: job._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"bg-gray-700 p-2 mb-2 rounded shadow text-white\",\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 25\n              }, this)\n            }, job._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this);\n          }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRoute(route._id),\n            className: \"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm hover:bg-red-700\",\n            children: \"Delete Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)\n      }, route._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"jobPool\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: `mt-6 bg-gray-800 p-4 rounded-lg ${snapshot.isDraggingOver ? 'border-2 border-green-500' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Unassigned Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), jobs.filter(job => !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"bg-gray-700 p-2 mb-2 rounded shadow text-white\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 19\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n  const renderCalendarView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:col-span-3\",\n      children: /*#__PURE__*/_jsxDEV(MemoizedFullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"dayGridMonth\",\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        editable: true,\n        droppable: true,\n        events: events,\n        eventDrop: handleEventDrop,\n        eventReceive: handleEventReceive,\n        eventClick: handleEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-lg mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Job Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), jobs.filter(job => !job.route).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\",\n          \"data-event\": JSON.stringify({\n            id: job._id,\n            title: job.title,\n            duration: '01:00',\n            type: 'job',\n            jobId: job._id\n          }),\n          children: job.title\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2 text-white\",\n          children: \"Route Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), routes.filter(route => !route.scheduledDate).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\",\n          \"data-event\": JSON.stringify({\n            id: route._id,\n            title: route.name,\n            duration: '02:00',\n            type: 'route',\n            routeId: route._id\n          }),\n          children: route.name\n        }, route._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n  const handleEventClick = info => {\n    setSelectedEvent(info.event);\n  };\n  const handleEventUpdate = async updatedEvent => {\n    try {\n      if (updatedEvent.extendedProps.type === 'job') {\n        const updatedJob = await updateJob(updatedEvent.id, {\n          title: updatedEvent.title,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === updatedJob._id ? updatedJob : job));\n      } else if (updatedEvent.extendedProps.type === 'route') {\n        const updatedRoute = await updateRoute(updatedEvent.id, {\n          name: updatedEvent.title,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === updatedRoute._id ? updatedRoute : route));\n      }\n      setEvents(prevEvents => prevEvents.map(event => event.id === updatedEvent.id ? {\n        ...event,\n        title: updatedEvent.title,\n        start: updatedEvent.start,\n        end: updatedEvent.end\n      } : event));\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n    }\n  };\n  const handleRemoveEvent = async eventToRemove => {\n    try {\n      if (eventToRemove.extendedProps.type === 'job') {\n        const updatedJob = await updateJob(eventToRemove.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setJobs(prevJobs => prevJobs.map(job => job._id === updatedJob._id ? updatedJob : job));\n      } else if (eventToRemove.extendedProps.type === 'route') {\n        const updatedRoute = await updateRoute(eventToRemove.id, {\n          scheduledDate: null,\n          scheduledEndDate: null\n        });\n        setRoutes(prevRoutes => prevRoutes.map(route => route._id === updatedRoute._id ? updatedRoute : route));\n      }\n      setEvents(prevEvents => prevEvents.filter(event => event.id !== eventToRemove.id));\n      setSuccessMessage('Event removed successfully!');\n    } catch (error) {\n      console.error('Error removing event:', error);\n      setError('Failed to remove event. Please try again.');\n    }\n  };\n  const renderMapView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[600px]\",\n    children: /*#__PURE__*/_jsxDEV(CustomerMap, {\n      routes: routes,\n      jobs: jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 518,\n    columnNumber: 5\n  }, this);\n  const renderTimelineView = () => {\n    const routesPerRow = 3;\n    const rowCount = Math.ceil(routes.length / routesPerRow);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: [...Array(rowCount)].map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: routes.slice(rowIndex * routesPerRow, (rowIndex + 1) * routesPerRow).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-xl mb-2 text-white\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-bold mb-4\",\n            children: [\"Total Revenue: $\", calculateRouteTotalRevenue(route).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: route.jobs.map(jobId => {\n              var _job$customer, _job$customer2, _job$customer2$addres, _job$customer3, _job$customer3$addres;\n              const job = jobs.find(j => j._id === jobId);\n              if (!job) return null;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-700 p-2 rounded text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold\",\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Address: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : (_job$customer2$addres = _job$customer2.address) === null || _job$customer2$addres === void 0 ? void 0 : _job$customer2$addres.street, \", \", (_job$customer3 = job.customer) === null || _job$customer3 === void 0 ? void 0 : (_job$customer3$addres = _job$customer3.address) === null || _job$customer3$addres === void 0 ? void 0 : _job$customer3$addres.city]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", job.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Revenue: $\", job.price || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Estimated Duration: \", job.estimatedDuration || 60, \" minutes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 25\n                }, this)]\n              }, job._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 17\n          }, this)]\n        }, route._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateRouteTotalRevenue = route => {\n    return route.jobs.reduce((total, jobId) => {\n      const job = jobs.find(j => j._id === jobId);\n      return total + ((job === null || job === void 0 ? void 0 : job.price) || 0);\n    }, 0);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 569,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold mb-6\",\n            children: \"Route Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newRouteName,\n              onChange: e => setNewRouteName(e.target.value),\n              placeholder: \"Enter route name\",\n              className: \"mr-2 p-2 bg-gray-700 text-white rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddRoute,\n              className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n              children: \"Add New Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'calendar', 'map', 'timeline'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-blue-600 text-white' : 'text-blue-300 hover:text-blue-100'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 shadow overflow-hidden sm:rounded-lg p-6\",\n            children: [activeTab === 'routes' && renderRoutesList(), activeTab === 'calendar' && renderCalendarView(), activeTab === 'map' && renderMapView(), activeTab === 'timeline' && renderTimelineView()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n        event: selectedEvent,\n        onClose: () => setSelectedEvent(null),\n        onSave: handleEventUpdate,\n        onRemove: handleRemoveEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), showStartTimeModal && /*#__PURE__*/_jsxDEV(StartTimeModal, {\n        onClose: () => {\n          setShowStartTimeModal(false);\n          setPendingEvent(null);\n        },\n        onSubmit: handleStartTimeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"fcIMs1gBrgJ1cupJUOhTM2FEMh8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BuildRoutes;\nconst EventModal = ({\n  event,\n  onClose,\n  onSave,\n  onRemove\n}) => {\n  _s2();\n  const [title, setTitle] = useState(event.title);\n  const [start, setStart] = useState(event.start);\n  const [end, setEnd] = useState(event.end);\n  const handleSave = () => {\n    onSave({\n      ...event,\n      title,\n      start,\n      end\n    });\n    onClose();\n  };\n  const handleRemove = () => {\n    onRemove(event);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Edit Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: start ? start.toISOString().slice(0, 16) : '',\n        onChange: e => setStart(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: end ? end.toISOString().slice(0, 16) : '',\n        onChange: e => setEnd(new Date(e.target.value)),\n        className: \"w-full mb-2 p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemove,\n          className: \"px-4 py-2 bg-red-500 text-white rounded\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this);\n};\n_s2(EventModal, \"CTsn2gzyjKjBOhpaDR6ztBr709w=\");\n_c3 = EventModal;\nconst StartTimeModal = ({\n  onClose,\n  onSubmit\n}) => {\n  _s3();\n  const [startTime, setStartTime] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const [hours, minutes] = startTime.split(':');\n    const dateTime = new Date();\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    onSubmit(dateTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Set Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          className: \"w-full mb-4 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"mr-2 px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Set Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 711,\n    columnNumber: 5\n  }, this);\n};\n_s3(StartTimeModal, \"oNJ3KK/FuVmn7XQQd1o1dE13LZ8=\");\n_c4 = StartTimeModal;\nexport default BuildRoutes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MemoizedFullCalendar\");\n$RefreshReg$(_c2, \"BuildRoutes\");\n$RefreshReg$(_c3, \"EventModal\");\n$RefreshReg$(_c4, \"StartTimeModal\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","Header","ErrorBoundary","jsxDEV","_jsxDEV","MemoizedFullCalendar","_c","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","showStartTimeModal","setShowStartTimeModal","pendingEvent","setPendingEvent","newRouteName","setNewRouteName","navigate","fetchData","jobsData","routesData","Promise","all","generateEvents","err","console","jobEvents","map","job","id","_id","title","start","scheduledDate","end","scheduledEndDate","color","extendedProps","type","jobId","filter","event","routeEvents","route","name","routeId","handleAddRoute","trim","newRoute","prevRoutes","handleDeleteRoute","updatedJobs","prevEvents","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","updatedJob","updatedRoute","$push","prevJobs","$pull","jobEvent","handleEventDrop","info","oldEvent","revert","handleEventReceive","droppedEvent","eventData","JSON","parse","draggedEl","dataset","handleJobSchedule","handleRouteSchedule","handleStartTimeSubmit","startTime","startDate","Date","setHours","getHours","getMinutes","endDate","getTime","renderRoutesList","children","className","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fileName","_jsxFileName","lineNumber","columnNumber","index","find","j","draggableProps","dragHandleProps","placeholder","onClick","renderCalendarView","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","eventClick","handleEventClick","stringify","duration","handleEventUpdate","updatedEvent","handleRemoveEvent","eventToRemove","renderMapView","renderTimelineView","routesPerRow","rowCount","Math","ceil","length","Array","_","rowIndex","slice","calculateRouteTotalRevenue","toFixed","_job$customer","_job$customer2","_job$customer2$addres","_job$customer3","_job$customer3$addres","customer","address","street","city","status","price","estimatedDuration","toLocaleString","reduce","total","role","value","onChange","e","target","tab","charAt","toUpperCase","EventModal","onClose","onSave","onRemove","StartTimeModal","onSubmit","_c2","_s2","setTitle","setStart","setEnd","handleSave","handleRemove","toISOString","_c3","_s3","setStartTime","handleSubmit","preventDefault","hours","minutes","dateTime","parseInt","required","_c4","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { \r\n  fetchJobs, \r\n  fetchRoutes, \r\n  saveRoute, \r\n  deleteRoute, \r\n  updateJob, \r\n  updateRoute\r\n} from './api';\r\nimport Header from '../../components/Header';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\n\r\nconst MemoizedFullCalendar = memo(FullCalendar);\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showStartTimeModal, setShowStartTimeModal] = useState(false);\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const [newRouteName, setNewRouteName] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData);\r\n      setRoutes(routesData);\r\n      generateEvents(jobsData, routesData);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const generateEvents = useCallback((jobsData, routesData) => {\r\n    const jobEvents = jobsData.map(job => ({\r\n      id: job._id,\r\n      title: job.title,\r\n      start: job.scheduledDate,\r\n      end: job.scheduledEndDate,\r\n      color: '#4CAF50',\r\n      extendedProps: { type: 'job', jobId: job._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    const routeEvents = routesData.map(route => ({\r\n      id: route._id,\r\n      title: route.name,\r\n      start: route.scheduledDate,\r\n      end: route.scheduledEndDate,\r\n      color: '#2196F3',\r\n      extendedProps: { type: 'route', routeId: route._id }\r\n    })).filter(event => event.start && event.end);\r\n\r\n    setEvents([...jobEvents, ...routeEvents]);\r\n  }, []);\r\n\r\n  const handleAddRoute = async () => {\r\n    if (!newRouteName.trim()) {\r\n      setError('Please enter a route name');\r\n      return;\r\n    }\r\n    try {\r\n      const newRoute = await saveRoute({ name: newRouteName, jobs: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setNewRouteName('');\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      \r\n      // Move jobs back to unassigned pool\r\n      const updatedJobs = jobs.map(job => \r\n        job.route === routeId ? { ...job, route: null } : job\r\n      );\r\n      \r\n      setJobs(updatedJobs);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      \r\n      // Update events\r\n      setEvents(prevEvents => prevEvents.filter(event => \r\n        !(event.extendedProps.type === 'route' && event.extendedProps.routeId === routeId)\r\n      ));\r\n\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return;\r\n\r\n    try {\r\n      if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n        const routeId = destination.droppableId.split('-')[1];\r\n        await moveJobToRoute(draggableId, routeId);\r\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n        const routeId = source.droppableId.split('-')[1];\r\n        await moveJobToPool(draggableId, routeId);\r\n      } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n        const sourceRouteId = source.droppableId.split('-')[1];\r\n        const destRouteId = destination.droppableId.split('-')[1];\r\n        await moveJobBetweenRoutes(draggableId, sourceRouteId, destRouteId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error moving job:', error);\r\n      setError('Failed to move job. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      const updatedJob = await updateJob(jobId, { route: routeId });\r\n      const updatedRoute = await updateRoute(routeId, { $push: { jobs: jobId } });\r\n      \r\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\r\n      \r\n      // Remove job from scheduling pool\r\n      setEvents(prevEvents => prevEvents.filter(event => event.extendedProps.jobId !== jobId));\r\n      \r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to add job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { jobs: jobId } });\r\n      \r\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\r\n      \r\n      // Add job back to scheduling pool\r\n      const jobEvent = {\r\n        id: updatedJob._id,\r\n        title: updatedJob.title,\r\n        start: updatedJob.scheduledDate,\r\n        end: updatedJob.scheduledEndDate,\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'job', jobId: updatedJob._id }\r\n      };\r\n      setEvents(prevEvents => [...prevEvents, jobEvent]);\r\n      \r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      const updatedJob = await updateJob(jobId, { route: destRouteId });\r\n      await updateRoute(sourceRouteId, { $pull: { jobs: jobId } });\r\n      await updateRoute(destRouteId, { $push: { jobs: jobId } });\r\n      \r\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n      setRoutes(prevRoutes => prevRoutes.map(route => {\r\n        if (route._id === sourceRouteId) {\r\n          return { ...route, jobs: route.jobs.filter(id => id !== jobId) };\r\n        } else if (route._id === destRouteId) {\r\n          return { ...route, jobs: [...route.jobs, jobId] };\r\n        }\r\n        return route;\r\n      }));\r\n      \r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event, oldEvent } = info;\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, {\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n      } else if (event.extendedProps.type === 'route') {\r\n        await updateRoute(event.id, {\r\n          scheduledDate: event.start,\r\n          scheduledEndDate: event.end\r\n        });\r\n      }\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = (info) => {\r\n    const droppedEvent = info.event;\r\n    const eventData = JSON.parse(info.draggedEl.dataset.event);\r\n    \r\n    if (eventData.type === 'job') {\r\n      handleJobSchedule(eventData.jobId, droppedEvent.start, droppedEvent.end);\r\n    } else if (eventData.type === 'route') {\r\n      handleRouteSchedule(eventData.routeId, droppedEvent.start, droppedEvent.end);\r\n    }\r\n  };\r\n\r\n  const handleJobSchedule = async (jobId, start, end) => {\r\n    try {\r\n      const updatedJob = await updateJob(jobId, { scheduledDate: start, scheduledEndDate: end });\r\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? updatedJob : job));\r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: updatedJob._id,\r\n        title: updatedJob.title,\r\n        start: updatedJob.scheduledDate,\r\n        end: updatedJob.scheduledEndDate,\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'job', jobId: updatedJob._id }\r\n      }]);\r\n      setSuccessMessage('Job scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling job:', error);\r\n      setError('Failed to schedule job. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleRouteSchedule = async (routeId, start, end) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { scheduledDate: start, scheduledEndDate: end });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? updatedRoute : route));\r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: updatedRoute._id,\r\n        title: updatedRoute.name,\r\n        start: updatedRoute.scheduledDate,\r\n        end: updatedRoute.scheduledEndDate,\r\n        color: '#2196F3',\r\n        extendedProps: { type: 'route', routeId: updatedRoute._id }\r\n      }]);\r\n      setSuccessMessage('Route scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling route:', error);\r\n      setError('Failed to schedule route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleStartTimeSubmit = async (startTime) => {\r\n    setShowStartTimeModal(false);\r\n    const event = pendingEvent;\r\n    if (!event) return;\r\n\r\n    const startDate = new Date(event.start);\r\n    startDate.setHours(startTime.getHours(), startTime.getMinutes());\r\n    const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour for duration\r\n\r\n    try {\r\n      if (event.extendedProps.type === 'job') {\r\n        await updateJob(event.id, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n      } else if (event.extendedProps.type === 'route') {\r\n        await updateRoute(event.id, {\r\n          scheduledDate: startDate,\r\n          scheduledEndDate: endDate\r\n        });\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, { ...event, start: startDate, end: endDate }]);\r\n      setSuccessMessage('Event scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling event:', error);\r\n      setError('Failed to schedule event. Please try again.');\r\n    }\r\n\r\n    setPendingEvent(null);\r\n  };\r\n\r\n  const renderRoutesList = () => (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {routes.map(route => (\r\n          <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className={`bg-gray-800 p-4 rounded-lg ${snapshot.isDraggingOver ? 'border-2 border-blue-500' : ''}`}\r\n              >\r\n                <h3 className=\"font-semibold mb-2 text-white\">{route.name}</h3>\r\n                {route.jobs.map((jobId, index) => {\r\n                  const job = jobs.find(j => j._id === jobId);\r\n                  if (!job) return null;\r\n                  return (\r\n                    <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"bg-gray-700 p-2 mb-2 rounded shadow text-white\"\r\n                        >\r\n                          {job.title}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n                <button onClick={() => handleDeleteRoute(route._id)} className=\"mt-2 bg-red-600 text-white px-2 py-1 rounded text-sm hover:bg-red-700\">\r\n                  Delete Route\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n      <Droppable droppableId=\"jobPool\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={`mt-6 bg-gray-800 p-4 rounded-lg ${snapshot.isDraggingOver ? 'border-2 border-green-500' : ''}`}\r\n          >\r\n            <h3 className=\"font-semibold mb-2 text-white\">Unassigned Jobs</h3>\r\n            {jobs.filter(job => !job.route).map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className=\"bg-gray-700 p-2 mb-2 rounded shadow text-white\"\r\n                  >\r\n                    {job.title}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n\r\n  const renderCalendarView = () => (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n      <div className=\"md:col-span-3\">\r\n        <MemoizedFullCalendar\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          headerToolbar={{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n          }}\r\n          editable={true}\r\n          droppable={true}\r\n          events={events}\r\n          eventDrop={handleEventDrop}\r\n          eventReceive={handleEventReceive}\r\n          eventClick={handleEventClick}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"bg-gray-800 p-4 rounded-lg mb-4\">\r\n          <h3 className=\"font-semibold mb-2 text-white\">Job Pool</h3>\r\n          {jobs.filter(job => !job.route).map(job => (\r\n            <div\r\n              key={job._id}\r\n              className=\"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\"\r\n              data-event={JSON.stringify({\r\n                id: job._id,\r\n                title: job.title,\r\n                duration: '01:00',\r\n                type: 'job',\r\n                jobId: job._id\r\n              })}\r\n            >\r\n              {job.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n          <h3 className=\"font-semibold mb-2 text-white\">Route Pool</h3>\r\n          {routes.filter(route => !route.scheduledDate).map(route => (\r\n            <div\r\n              key={route._id}\r\n              className=\"fc-event bg-gray-700 p-2 mb-2 rounded shadow text-white cursor-move\"\r\n              data-event={JSON.stringify({\r\n                id: route._id,\r\n                title: route.name,\r\n                duration: '02:00',\r\n                type: 'route',\r\n                routeId: route._id\r\n              })}\r\n            >\r\n              {route.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleEventClick = (info) => {\r\n    setSelectedEvent(info.event);\r\n  };\r\n  const handleEventUpdate = async (updatedEvent) => {\r\n    try {\r\n      if (updatedEvent.extendedProps.type === 'job') {\r\n        const updatedJob = await updateJob(updatedEvent.id, {\r\n          title: updatedEvent.title,\r\n          scheduledDate: updatedEvent.start,\r\n          scheduledEndDate: updatedEvent.end\r\n        });\r\n\r\n        setJobs(prevJobs => \r\n          prevJobs.map(job => job._id === updatedJob._id ? updatedJob : job)\r\n        );\r\n      } else if (updatedEvent.extendedProps.type === 'route') {\r\n        const updatedRoute = await updateRoute(updatedEvent.id, {\r\n          name: updatedEvent.title,\r\n          scheduledDate: updatedEvent.start,\r\n          scheduledEndDate: updatedEvent.end\r\n        });\r\n\r\n        setRoutes(prevRoutes => \r\n          prevRoutes.map(route => route._id === updatedRoute._id ? updatedRoute : route)\r\n        );\r\n      }\r\n\r\n      setEvents(prevEvents => \r\n        prevEvents.map(event => \r\n          event.id === updatedEvent.id \r\n            ? { \r\n                ...event, \r\n                title: updatedEvent.title, \r\n                start: updatedEvent.start, \r\n                end: updatedEvent.end \r\n              } \r\n            : event\r\n        )\r\n      );\r\n\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveEvent = async (eventToRemove) => {\r\n    try {\r\n      if (eventToRemove.extendedProps.type === 'job') {\r\n        const updatedJob = await updateJob(eventToRemove.id, {\r\n          scheduledDate: null,\r\n          scheduledEndDate: null\r\n        });\r\n\r\n        setJobs(prevJobs => \r\n          prevJobs.map(job => job._id === updatedJob._id ? updatedJob : job)\r\n        );\r\n      } else if (eventToRemove.extendedProps.type === 'route') {\r\n        const updatedRoute = await updateRoute(eventToRemove.id, {\r\n          scheduledDate: null,\r\n          scheduledEndDate: null\r\n        });\r\n\r\n        setRoutes(prevRoutes => \r\n          prevRoutes.map(route => route._id === updatedRoute._id ? updatedRoute : route)\r\n        );\r\n      }\r\n\r\n      setEvents(prevEvents => \r\n        prevEvents.filter(event => event.id !== eventToRemove.id)\r\n      );\r\n\r\n      setSuccessMessage('Event removed successfully!');\r\n    } catch (error) {\r\n      console.error('Error removing event:', error);\r\n      setError('Failed to remove event. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderMapView = () => (\r\n    <div className=\"h-[600px]\">\r\n      <CustomerMap routes={routes} jobs={jobs} />\r\n    </div>\r\n  );\r\n\r\n  const renderTimelineView = () => {\r\n    const routesPerRow = 3;\r\n    const rowCount = Math.ceil(routes.length / routesPerRow);\r\n    \r\n    return (\r\n      <div className=\"space-y-8\">\r\n        {[...Array(rowCount)].map((_, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {routes.slice(rowIndex * routesPerRow, (rowIndex + 1) * routesPerRow).map(route => (\r\n              <div key={route._id} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                <h3 className=\"font-semibold text-xl mb-2 text-white\">{route.name}</h3>\r\n                <p className=\"text-green-400 font-bold mb-4\">\r\n                  Total Revenue: ${calculateRouteTotalRevenue(route).toFixed(2)}\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  {route.jobs.map(jobId => {\r\n                    const job = jobs.find(j => j._id === jobId);\r\n                    if (!job) return null;\r\n                    return (\r\n                      <div key={job._id} className=\"bg-gray-700 p-2 rounded text-white\">\r\n                        <p className=\"font-semibold\">{job.title}</p>\r\n                        <p>Customer: {job.customer?.name}</p>\r\n                        <p>Address: {job.customer?.address?.street}, {job.customer?.address?.city}</p>\r\n                        <p>Status: {job.status}</p>\r\n                        <p>Revenue: ${job.price || 0}</p>\r\n                        <p>Estimated Duration: {job.estimatedDuration || 60} minutes</p>\r\n                        <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const calculateRouteTotalRevenue = (route) => {\r\n    return route.jobs.reduce((total, jobId) => {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      return total + (job?.price || 0);\r\n    }, 0);\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gray-900 text-white\">\r\n        <Header />\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"px-4 py-6 sm:px-0\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n\r\n            {successMessage && (\r\n              <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-6 flex items-center\">\r\n              <input\r\n                type=\"text\"\r\n                value={newRouteName}\r\n                onChange={(e) => setNewRouteName(e.target.value)}\r\n                placeholder=\"Enter route name\"\r\n                className=\"mr-2 p-2 bg-gray-700 text-white rounded\"\r\n              />\r\n              <button\r\n                onClick={handleAddRoute}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                Add New Route\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'calendar', 'map', 'timeline'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-blue-600 text-white'\r\n                        : 'text-blue-300 hover:text-blue-100'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-800 shadow overflow-hidden sm:rounded-lg p-6\">\r\n              {activeTab === 'routes' && renderRoutesList()}\r\n              {activeTab === 'calendar' && renderCalendarView()}\r\n              {activeTab === 'map' && renderMapView()}\r\n              {activeTab === 'timeline' && renderTimelineView()}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {selectedEvent && (\r\n          <EventModal\r\n            event={selectedEvent}\r\n            onClose={() => setSelectedEvent(null)}\r\n            onSave={handleEventUpdate}\r\n            onRemove={handleRemoveEvent}\r\n          />\r\n        )}\r\n        {showStartTimeModal && (\r\n          <StartTimeModal\r\n            onClose={() => {\r\n              setShowStartTimeModal(false);\r\n              setPendingEvent(null);\r\n            }}\r\n            onSubmit={handleStartTimeSubmit}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst EventModal = ({ event, onClose, onSave, onRemove }) => {\r\n  const [title, setTitle] = useState(event.title);\r\n  const [start, setStart] = useState(event.start);\r\n  const [end, setEnd] = useState(event.end);\r\n\r\n  const handleSave = () => {\r\n    onSave({ ...event, title, start, end });\r\n    onClose();\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    onRemove(event);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Edit Event</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={start ? start.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setStart(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={end ? end.toISOString().slice(0, 16) : ''}\r\n          onChange={(e) => setEnd(new Date(e.target.value))}\r\n          className=\"w-full mb-2 p-2 border rounded\"\r\n        />\r\n        <div className=\"flex justify-end\">\r\n          <button onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n          <button onClick={handleSave} className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\">Save</button>\r\n          <button onClick={handleRemove} className=\"px-4 py-2 bg-red-500 text-white rounded\">Remove</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StartTimeModal = ({ onClose, onSubmit }) => {\r\n  const [startTime, setStartTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const [hours, minutes] = startTime.split(':');\r\n    const dateTime = new Date();\r\n    dateTime.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n    onSubmit(dateTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Set Start Time</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            className=\"w-full mb-4 p-2 border rounded\"\r\n            required\r\n          />\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"button\" onClick={onClose} className=\"mr-2 px-4 py-2 bg-gray-200 rounded\">Cancel</button>\r\n            <button type=\"submit\" className=\"px-4 py-2 bg-blue-500 text-white rounded\">Set Time</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}