{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\Scheduling.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveSchedule } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scheduling = ({\n  routes,\n  setSuccessMessage\n}) => {\n  _s();\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'weekly',\n    interval: 1,\n    daysOfWeek: []\n  });\n  const handleRouteSelect = routeId => {\n    const route = routes.find(route => route._id === routeId);\n    setSelectedRoute(route);\n  };\n  const handleRecurringOptionChange = (option, value) => {\n    setRecurringOptions(prev => ({\n      ...prev,\n      [option]: value\n    }));\n  };\n  const handleSaveSchedule = async () => {\n    if (!selectedRoute) return;\n    try {\n      await saveSchedule(selectedRoute._id, recurringOptions);\n      setSuccessMessage('Schedule saved successfully!');\n    } catch (error) {\n      console.error('Error saving schedule:', error);\n      setSuccessMessage('Failed to save schedule. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scheduling-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Scheduling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: routes.map(route => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleRouteSelect(route._id),\n            className: `cursor-pointer p-2 ${(selectedRoute === null || selectedRoute === void 0 ? void 0 : selectedRoute._id) === route._id ? 'bg-blue-100' : ''}`,\n            children: route.name\n          }, route._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Recurring Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), selectedRoute && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: recurringOptions.frequency,\n            onChange: e => handleRecurringOptionChange('frequency', e.target.value),\n            className: \"w-full p-2 mb-2 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weekly\",\n              children: \"Weekly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"biweekly\",\n              children: \"Bi-weekly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: recurringOptions.interval,\n            onChange: e => handleRecurringOptionChange('interval', parseInt(e.target.value)),\n            className: \"w-full p-2 mb-2 rounded\",\n            placeholder: \"Interval\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: recurringOptions.daysOfWeek.includes(index),\n                onChange: e => {\n                  const newDays = e.target.checked ? [...recurringOptions.daysOfWeek, index] : recurringOptions.daysOfWeek.filter(d => d !== index);\n                  handleRecurringOptionChange('daysOfWeek', newDays);\n                },\n                className: \"form-checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveSchedule,\n            className: \"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n            children: \"Save Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Scheduling, \"McnLlBLlpvn/8Q/0pMKqPqIQWjM=\");\n_c = Scheduling;\nexport default Scheduling;\nvar _c;\n$RefreshReg$(_c, \"Scheduling\");","map":{"version":3,"names":["React","useState","saveSchedule","jsxDEV","_jsxDEV","Scheduling","routes","setSuccessMessage","_s","selectedRoute","setSelectedRoute","recurringOptions","setRecurringOptions","frequency","interval","daysOfWeek","handleRouteSelect","routeId","route","find","_id","handleRecurringOptionChange","option","value","prev","handleSaveSchedule","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","onChange","e","target","type","parseInt","placeholder","day","index","checked","includes","newDays","filter","d","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/Scheduling.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { saveSchedule } from './api';\r\n\r\nconst Scheduling = ({ routes, setSuccessMessage }) => {\r\n  const [selectedRoute, setSelectedRoute] = useState(null);\r\n  const [recurringOptions, setRecurringOptions] = useState({\r\n    frequency: 'weekly',\r\n    interval: 1,\r\n    daysOfWeek: [],\r\n  });\r\n\r\n  const handleRouteSelect = (routeId) => {\r\n    const route = routes.find(route => route._id === routeId);\r\n    setSelectedRoute(route);\r\n  };\r\n\r\n  const handleRecurringOptionChange = (option, value) => {\r\n    setRecurringOptions(prev => ({ ...prev, [option]: value }));\r\n  };\r\n\r\n  const handleSaveSchedule = async () => {\r\n    if (!selectedRoute) return;\r\n\r\n    try {\r\n      await saveSchedule(selectedRoute._id, recurringOptions);\r\n      setSuccessMessage('Schedule saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving schedule:', error);\r\n      setSuccessMessage('Failed to save schedule. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scheduling-container\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Scheduling</h2>\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold mb-2\">Routes</h3>\r\n          <ul>\r\n            {routes.map(route => (\r\n              <li \r\n                key={route._id} \r\n                onClick={() => handleRouteSelect(route._id)}\r\n                className={`cursor-pointer p-2 ${selectedRoute?._id === route._id ? 'bg-blue-100' : ''}`}\r\n              >\r\n                {route.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold mb-2\">Recurring Schedule</h3>\r\n          {selectedRoute && (\r\n            <div>\r\n              <select \r\n                value={recurringOptions.frequency} \r\n                onChange={(e) => handleRecurringOptionChange('frequency', e.target.value)}\r\n                className=\"w-full p-2 mb-2 rounded\"\r\n              >\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"biweekly\">Bi-weekly</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n              </select>\r\n              <input \r\n                type=\"number\" \r\n                value={recurringOptions.interval}\r\n                onChange={(e) => handleRecurringOptionChange('interval', parseInt(e.target.value))}\r\n                className=\"w-full p-2 mb-2 rounded\"\r\n                placeholder=\"Interval\"\r\n              />\r\n              <div className=\"mb-2\">\r\n                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => (\r\n                  <label key={day} className=\"inline-flex items-center mr-2\">\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={recurringOptions.daysOfWeek.includes(index)}\r\n                      onChange={(e) => {\r\n                        const newDays = e.target.checked\r\n                          ? [...recurringOptions.daysOfWeek, index]\r\n                          : recurringOptions.daysOfWeek.filter(d => d !== index);\r\n                        handleRecurringOptionChange('daysOfWeek', newDays);\r\n                      }}\r\n                      className=\"form-checkbox\"\r\n                    />\r\n                    <span className=\"ml-1\">{day}</span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n              <button onClick={handleSaveSchedule} className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\">\r\n                Save Schedule\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scheduling;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}