{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, optimizeRoute, updateCalendarEvent, updateJob } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const draggableElems = document.querySelectorAll('.fc-event');\n    draggableElems.forEach(elem => {\n      new FullCalendar.Draggable(elem, {\n        eventData: function () {\n          return JSON.parse(elem.getAttribute('data-event'));\n        }\n      });\n    });\n  }, [jobs]);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      console.log('Fetched jobs:', jobsData);\n      console.log('Fetched routes:', routesData);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n      generateEvents(routesData || []);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateEvents = routesData => {\n    if (!Array.isArray(routesData)) {\n      console.error('routesData is not an array:', routesData);\n      return;\n    }\n    const generatedEvents = routesData.flatMap(route => {\n      if (!route || !Array.isArray(route.customers)) {\n        console.error('Invalid route or customers array:', route);\n        return [];\n      }\n      return route.customers.map(customer => {\n        if (!customer) {\n          console.error('Invalid customer:', customer);\n          return null;\n        }\n        return {\n          id: customer._id,\n          title: `${route.name}: ${customer.name}`,\n          start: customer.scheduledDate || new Date(),\n          end: customer.scheduledEndDate || new Date(new Date().getTime() + 60 * 60 * 1000),\n          color: '#4CAF50',\n          extendedProps: {\n            type: 'customer',\n            routeId: route._id,\n            customerId: customer._id\n          }\n        };\n      }).filter(Boolean); // Remove any null events\n    });\n    console.log('Generated events:', generatedEvents); // Add this line for debugging\n    setEvents(generatedEvents);\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    const job = jobs.find(j => j._id === jobId);\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n    setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n      ...route,\n      customers: [...route.customers, job]\n    } : route));\n    await updateJobRoute(jobId, routeId);\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await saveRoute({\n        ...routes.find(r => r._id === routeId),\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleEventReceive = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event received:', event); // Add this line for debugging\n    const jobId = event.id;\n    const startDate = event.start;\n    try {\n      await updateJob(jobId, {\n        scheduledDate: startDate\n      });\n      setJobs(prevJobs => prevJobs.map(job => job._id === jobId ? {\n        ...job,\n        scheduledDate: startDate\n      } : job));\n      setEvents(prevEvents => [...prevEvents, {\n        id: jobId,\n        title: event.title,\n        start: startDate,\n        end: new Date(startDate.getTime() + 60 * 60 * 1000),\n        color: '#4CAF50',\n        extendedProps: {\n          type: 'job',\n          jobId\n        }\n      }]);\n      setSuccessMessage('Job scheduled successfully!');\n    } catch (error) {\n      console.error('Error scheduling job:', error);\n      setError('Failed to schedule job. Please try again.');\n      info.revert();\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    const route = routes.find(r => r._id === routeId);\n    const job = route.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? {\n      ...r,\n      customers: r.customers.filter(j => j._id !== jobId)\n    } : r));\n    setJobs(prevJobs => [...prevJobs, job]);\n    await updateJobRoute(jobId, null);\n    await saveRoute(route);\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\n    const job = sourceRoute.customers.find(j => j._id === jobId);\n    setRoutes(prevRoutes => prevRoutes.map(route => {\n      if (route._id === sourceRouteId) {\n        return {\n          ...route,\n          customers: route.customers.filter(j => j._id !== jobId)\n        };\n      }\n      if (route._id === destRouteId) {\n        return {\n          ...route,\n          customers: [...route.customers, job]\n        };\n      }\n      return route;\n    }));\n    await updateJobRoute(jobId, destRouteId);\n    await saveRoute(sourceRoute);\n    await saveRoute(routes.find(r => r._id === destRouteId));\n  };\n  const updateJobRoute = async (jobId, routeId) => {\n    try {\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setSuccessMessage('Job updated successfully!');\n    } catch (error) {\n      console.error('Error updating job route:', error);\n      setError('Failed to update job route. Please try again.');\n    }\n  };\n  const handleOptimizeRoute = async routeId => {\n    try {\n      const optimizedRoute = await optimizeRoute(routeId);\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\n      setSuccessMessage('Route optimized successfully!');\n    } catch (error) {\n      console.error('Error optimizing route:', error);\n      setError('Failed to optimize route. Please try again.');\n    }\n  };\n  const handleEventDrop = async info => {\n    const {\n      event\n    } = info;\n    console.log('Event dropped:', event); // Add this line for debugging\n    try {\n      const updatedEvent = await updateCalendarEvent({\n        id: event.id,\n        start: event.start,\n        end: event.end\n      });\n      setEvents(prevEvents => prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e));\n      const {\n        routeId,\n        customerId\n      } = event.extendedProps;\n      const updatedRoutes = routes.map(route => {\n        if (route._id === routeId) {\n          return {\n            ...route,\n            customers: route.customers.map(customer => customer._id === customerId ? {\n              ...customer,\n              scheduledDate: event.start,\n              scheduledEndDate: event.end\n            } : customer)\n          };\n        }\n        return route;\n      });\n      setRoutes(updatedRoutes);\n      await saveRoute(updatedRoutes.find(r => r._id === routeId));\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n      info.revert();\n    }\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes([...routes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(routes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setActiveTab(e.target.value),\n              className: \"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"routes\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"jobs\",\n                children: \"Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"calendar\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"map\",\n                children: \"Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'jobs', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleOptimizeRoute(route._id),\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Optimize\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow fc-event\",\n                      \"data-event\": JSON.stringify({\n                        id: job._id,\n                        title: job.title,\n                        duration: '01:00'\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 393,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), activeTab === 'jobs' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobs-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: jobs.map(job => {\n                var _job$customer2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold\",\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: job.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Status: \", job.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Customer: \", (_job$customer2 = job.customer) === null || _job$customer2 === void 0 ? void 0 : _job$customer2.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Scheduled: \", job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this)]\n                }, job._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"dayGridMonth\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              editable: true,\n              droppable: true,\n              events: events,\n              eventDrop: handleEventDrop,\n              eventReceive: handleEventReceive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route,\n                onOptimizeRoute: () => handleOptimizeRoute(route._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"BkCL07uututLKsvMbubnTsipT/g=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","optimizeRoute","updateCalendarEvent","updateJob","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","events","setEvents","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","fetchData","draggableElems","document","querySelectorAll","forEach","elem","eventData","JSON","parse","getAttribute","jobsData","routesData","Promise","all","console","log","generateEvents","err","Array","isArray","generatedEvents","flatMap","route","customers","map","customer","id","_id","title","name","start","scheduledDate","Date","end","scheduledEndDate","getTime","color","extendedProps","type","routeId","customerId","filter","Boolean","onDragEnd","result","source","destination","droppableId","startsWith","jobId","draggableId","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","job","find","j","prevJobs","prevRoutes","updateJobRoute","handleEditRouteName","newName","updatedRoute","r","handleEventReceive","info","event","startDate","prevEvents","revert","sourceRoute","handleOptimizeRoute","optimizedRoute","handleEventDrop","updatedEvent","e","updatedRoutes","handleAddRoute","newRoute","length","handleDeleteRoute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onChange","target","value","tab","onClick","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","index","draggableProps","dragHandleProps","placeholder","_job$customer","stringify","duration","description","status","toLocaleString","_job$customer2","plugins","initialView","headerToolbar","left","center","right","editable","droppable","eventDrop","eventReceive","onOptimizeRoute","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, optimizeRoute, updateCalendarEvent, updateJob } from './api';\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const draggableElems = document.querySelectorAll('.fc-event');\r\n    draggableElems.forEach(elem => {\r\n      new FullCalendar.Draggable(elem, {\r\n        eventData: function() {\r\n          return JSON.parse(elem.getAttribute('data-event'));\r\n        }\r\n      });\r\n    });\r\n  }, [jobs]);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      console.log('Fetched jobs:', jobsData);\r\n      console.log('Fetched routes:', routesData);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n      generateEvents(routesData || []);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateEvents = (routesData) => {\r\n    if (!Array.isArray(routesData)) {\r\n      console.error('routesData is not an array:', routesData);\r\n      return;\r\n    }\r\n    \r\n    const generatedEvents = routesData.flatMap(route => {\r\n      if (!route || !Array.isArray(route.customers)) {\r\n        console.error('Invalid route or customers array:', route);\r\n        return [];\r\n      }\r\n      \r\n      return route.customers.map(customer => {\r\n        if (!customer) {\r\n          console.error('Invalid customer:', customer);\r\n          return null;\r\n        }\r\n        \r\n        return {\r\n          id: customer._id,\r\n          title: `${route.name}: ${customer.name}`,\r\n          start: customer.scheduledDate || new Date(),\r\n          end: customer.scheduledEndDate || new Date(new Date().getTime() + 60*60*1000),\r\n          color: '#4CAF50',\r\n          extendedProps: { type: 'customer', routeId: route._id, customerId: customer._id }\r\n        };\r\n      }).filter(Boolean); // Remove any null events\r\n    });\r\n    \r\n    console.log('Generated events:', generatedEvents); // Add this line for debugging\r\n    setEvents(generatedEvents);\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    const job = jobs.find(j => j._id === jobId);\r\n    setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n    setRoutes(prevRoutes => prevRoutes.map(route => \r\n      route._id === routeId \r\n        ? { ...route, customers: [...route.customers, job] }\r\n        : route\r\n    ));\r\n    await updateJobRoute(jobId, routeId);\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await saveRoute({ ...routes.find(r => r._id === routeId), name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventReceive = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event received:', event); // Add this line for debugging\r\n    const jobId = event.id;\r\n    const startDate = event.start;\r\n  \r\n    try {\r\n      await updateJob(jobId, { scheduledDate: startDate });\r\n      setJobs(prevJobs => prevJobs.map(job => \r\n        job._id === jobId ? { ...job, scheduledDate: startDate } : job\r\n      ));\r\n      setEvents(prevEvents => [...prevEvents, {\r\n        id: jobId,\r\n        title: event.title,\r\n        start: startDate,\r\n        end: new Date(startDate.getTime() + 60 * 60 * 1000),\r\n        color: '#4CAF50',\r\n        extendedProps: { type: 'job', jobId }\r\n      }]);\r\n      setSuccessMessage('Job scheduled successfully!');\r\n    } catch (error) {\r\n      console.error('Error scheduling job:', error);\r\n      setError('Failed to schedule job. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n  \r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    const route = routes.find(r => r._id === routeId);\r\n    const job = route.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(r => \r\n      r._id === routeId \r\n        ? { ...r, customers: r.customers.filter(j => j._id !== jobId) }\r\n        : r\r\n    ));\r\n    setJobs(prevJobs => [...prevJobs, job]);\r\n    await updateJobRoute(jobId, null);\r\n    await saveRoute(route);\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    const sourceRoute = routes.find(r => r._id === sourceRouteId);\r\n    const job = sourceRoute.customers.find(j => j._id === jobId);\r\n    setRoutes(prevRoutes => prevRoutes.map(route => {\r\n      if (route._id === sourceRouteId) {\r\n        return { ...route, customers: route.customers.filter(j => j._id !== jobId) };\r\n      }\r\n      if (route._id === destRouteId) {\r\n        return { ...route, customers: [...route.customers, job] };\r\n      }\r\n      return route;\r\n    }));\r\n    await updateJobRoute(jobId, destRouteId);\r\n    await saveRoute(sourceRoute);\r\n    await saveRoute(routes.find(r => r._id === destRouteId));\r\n  };\r\n\r\n  const updateJobRoute = async (jobId, routeId) => {\r\n    try {\r\n      await updateJob(jobId, { route: routeId });\r\n      setSuccessMessage('Job updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating job route:', error);\r\n      setError('Failed to update job route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleOptimizeRoute = async (routeId) => {\r\n    try {\r\n      const optimizedRoute = await optimizeRoute(routeId);\r\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\r\n      setSuccessMessage('Route optimized successfully!');\r\n    } catch (error) {\r\n      console.error('Error optimizing route:', error);\r\n      setError('Failed to optimize route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventDrop = async (info) => {\r\n    const { event } = info;\r\n    console.log('Event dropped:', event); // Add this line for debugging\r\n    try {\r\n      const updatedEvent = await updateCalendarEvent({\r\n        id: event.id,\r\n        start: event.start,\r\n        end: event.end,\r\n      });\r\n      setEvents(prevEvents => \r\n        prevEvents.map(e => e.id === updatedEvent.id ? updatedEvent : e)\r\n      );\r\n      const { routeId, customerId } = event.extendedProps;\r\n      const updatedRoutes = routes.map(route => {\r\n        if (route._id === routeId) {\r\n          return {\r\n            ...route,\r\n            customers: route.customers.map(customer => \r\n              customer._id === customerId \r\n                ? { ...customer, scheduledDate: event.start, scheduledEndDate: event.end }\r\n                : customer\r\n            )\r\n          };\r\n        }\r\n        return route;\r\n      });\r\n      setRoutes(updatedRoutes);\r\n      await saveRoute(updatedRoutes.find(r => r._id === routeId));\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n      info.revert();\r\n    }\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes([...routes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(routes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6\">\r\n            <div className=\"sm:hidden\">\r\n              <select\r\n                onChange={(e) => setActiveTab(e.target.value)}\r\n                className=\"block w-full bg-background text-text border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50 rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"routes\">Routes</option>\r\n                <option value=\"jobs\">Jobs</option>\r\n                <option value=\"calendar\">Calendar</option>\r\n                <option value=\"map\">Map</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'jobs', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => handleOptimizeRoute(route._id)}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Optimize\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow fc-event\"\r\n                              data-event={JSON.stringify({\r\n                                id: job._id,\r\n                                title: job.title,\r\n                                duration: '01:00'\r\n                              })}\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                              <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n\r\n            {activeTab === 'jobs' && (\r\n              <div className=\"jobs-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Jobs</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {jobs.map(job => (\r\n                    <div key={job._id} className=\"bg-gray-100 p-4 rounded-lg text-black\">\r\n                      <h3 className=\"font-semibold\">{job.title}</h3>\r\n                      <p>{job.description}</p>\r\n                      <p>Status: {job.status}</p>\r\n                      <p>Customer: {job.customer?.name}</p>\r\n                      <p>Scheduled: {job.scheduledDate ? new Date(job.scheduledDate).toLocaleString() : 'Not scheduled'}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'calendar' && (\r\n              <div className=\"calendar-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Schedule</h2>\r\n                <FullCalendar\r\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                headerToolbar={{\r\n                  left: 'prev,next today',\r\n                  center: 'title',\r\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                }}\r\n                editable={true}\r\n                droppable={true}\r\n                events={events}\r\n                eventDrop={handleEventDrop}\r\n                eventReceive={handleEventReceive}\r\n              />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                      onOptimizeRoute={() => handleOptimizeRoute(route._id)}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtH,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMoC,QAAQ,GAAG/B,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACdoC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACd,MAAMqC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC;IAC7DF,cAAc,CAACG,OAAO,CAACC,IAAI,IAAI;MAC7B,IAAIpC,YAAY,CAACF,SAAS,CAACsC,IAAI,EAAE;QAC/BC,SAAS,EAAE,SAAAA,CAAA,EAAW;UACpB,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,YAAY,CAAC,YAAY,CAAC,CAAC;QACpD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxB,IAAI,CAAC,CAAC;EAEV,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAM,CAACc,QAAQ,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAACvC,SAAS,CAAC,CAAC,EAAEC,WAAW,CAAC,CAAC,CAAC,CAAC;MAC9EuC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAAC;MACtCI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,UAAU,CAAC;MAC1CzB,OAAO,CAACwB,QAAQ,IAAI,EAAE,CAAC;MACvBtB,SAAS,CAACuB,UAAU,IAAI,EAAE,CAAC;MAC3BK,cAAc,CAACL,UAAU,IAAI,EAAE,CAAC;IAClC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZH,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEsB,GAAG,CAAC;MAC1CrB,QAAQ,CAAC,sDAAsD,CAAC;IAClE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,cAAc,GAAIL,UAAU,IAAK;IACrC,IAAI,CAACO,KAAK,CAACC,OAAO,CAACR,UAAU,CAAC,EAAE;MAC9BG,OAAO,CAACnB,KAAK,CAAC,6BAA6B,EAAEgB,UAAU,CAAC;MACxD;IACF;IAEA,MAAMS,eAAe,GAAGT,UAAU,CAACU,OAAO,CAACC,KAAK,IAAI;MAClD,IAAI,CAACA,KAAK,IAAI,CAACJ,KAAK,CAACC,OAAO,CAACG,KAAK,CAACC,SAAS,CAAC,EAAE;QAC7CT,OAAO,CAACnB,KAAK,CAAC,mCAAmC,EAAE2B,KAAK,CAAC;QACzD,OAAO,EAAE;MACX;MAEA,OAAOA,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,QAAQ,IAAI;QACrC,IAAI,CAACA,QAAQ,EAAE;UACbX,OAAO,CAACnB,KAAK,CAAC,mBAAmB,EAAE8B,QAAQ,CAAC;UAC5C,OAAO,IAAI;QACb;QAEA,OAAO;UACLC,EAAE,EAAED,QAAQ,CAACE,GAAG;UAChBC,KAAK,EAAE,GAAGN,KAAK,CAACO,IAAI,KAAKJ,QAAQ,CAACI,IAAI,EAAE;UACxCC,KAAK,EAAEL,QAAQ,CAACM,aAAa,IAAI,IAAIC,IAAI,CAAC,CAAC;UAC3CC,GAAG,EAAER,QAAQ,CAACS,gBAAgB,IAAI,IAAIF,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC;UAC7EC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;YAAEC,IAAI,EAAE,UAAU;YAAEC,OAAO,EAAEjB,KAAK,CAACK,GAAG;YAAEa,UAAU,EAAEf,QAAQ,CAACE;UAAI;QAClF,CAAC;MACH,CAAC,CAAC,CAACc,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF5B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,eAAe,CAAC,CAAC,CAAC;IACnD9B,SAAS,CAAC8B,eAAe,CAAC;EAC5B,CAAC;EAED,MAAMuB,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IAEtC,IAAI,CAACE,WAAW,EAAE;IAElB,IAAID,MAAM,CAACE,WAAW,KAAK,SAAS,IAAID,WAAW,CAACC,WAAW,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MACpF,MAAMC,KAAK,GAAGL,MAAM,CAACM,WAAW;MAChC,MAAMX,OAAO,GAAGO,WAAW,CAACC,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrD,MAAMC,cAAc,CAACH,KAAK,EAAEV,OAAO,CAAC;IACtC,CAAC,MAAM,IAAIM,MAAM,CAACE,WAAW,CAACC,UAAU,CAAC,QAAQ,CAAC,IAAIF,WAAW,CAACC,WAAW,KAAK,SAAS,EAAE;MAC3F,MAAME,KAAK,GAAGL,MAAM,CAACM,WAAW;MAChC,MAAMX,OAAO,GAAGM,MAAM,CAACE,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChD,MAAME,aAAa,CAACJ,KAAK,EAAEV,OAAO,CAAC;IACrC,CAAC,MAAM,IAAIM,MAAM,CAACE,WAAW,CAACC,UAAU,CAAC,QAAQ,CAAC,IAAIF,WAAW,CAACC,WAAW,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MAClG,MAAMC,KAAK,GAAGL,MAAM,CAACM,WAAW;MAChC,MAAMI,aAAa,GAAGT,MAAM,CAACE,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,MAAMI,WAAW,GAAGT,WAAW,CAACC,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzD,MAAMK,oBAAoB,CAACP,KAAK,EAAEK,aAAa,EAAEC,WAAW,CAAC;IAC/D;EACF,CAAC;EAED,MAAMH,cAAc,GAAG,MAAAA,CAAOH,KAAK,EAAEV,OAAO,KAAK;IAC/C,MAAMkB,GAAG,GAAGxE,IAAI,CAACyE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK,CAAC;IAC3C/D,OAAO,CAAC0E,QAAQ,IAAIA,QAAQ,CAACnB,MAAM,CAACkB,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK,CAAC,CAAC;IAC1D7D,SAAS,CAACyE,UAAU,IAAIA,UAAU,CAACrC,GAAG,CAACF,KAAK,IAC1CA,KAAK,CAACK,GAAG,KAAKY,OAAO,GACjB;MAAE,GAAGjB,KAAK;MAAEC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAS,EAAEkC,GAAG;IAAE,CAAC,GAClDnC,KACN,CAAC,CAAC;IACF,MAAMwC,cAAc,CAACb,KAAK,EAAEV,OAAO,CAAC;EACtC,CAAC;EAED,MAAMwB,mBAAmB,GAAG,MAAAA,CAAOxB,OAAO,EAAEyB,OAAO,KAAK;IACtD,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMzF,SAAS,CAAC;QAAE,GAAGW,MAAM,CAACuE,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAKY,OAAO,CAAC;QAAEV,IAAI,EAAEmC;MAAQ,CAAC,CAAC;MAC/F5E,SAAS,CAACyE,UAAU,IAAIA,UAAU,CAACrC,GAAG,CAAC0C,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAKY,OAAO,GAAG0B,YAAY,GAAGC,CAAC,CAAC,CAAC;MAClFpE,iBAAiB,CAAC,kCAAkC,CAAC;IACvD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,gDAAgD,CAAC;IAC5D;EACF,CAAC;EAED,MAAMuE,kBAAkB,GAAG,MAAOC,IAAI,IAAK;IACzC,MAAM;MAAEC;IAAM,CAAC,GAAGD,IAAI;IACtBtD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEsD,KAAK,CAAC,CAAC,CAAC;IACvC,MAAMpB,KAAK,GAAGoB,KAAK,CAAC3C,EAAE;IACtB,MAAM4C,SAAS,GAAGD,KAAK,CAACvC,KAAK;IAE7B,IAAI;MACF,MAAMlD,SAAS,CAACqE,KAAK,EAAE;QAAElB,aAAa,EAAEuC;MAAU,CAAC,CAAC;MACpDpF,OAAO,CAAC0E,QAAQ,IAAIA,QAAQ,CAACpC,GAAG,CAACiC,GAAG,IAClCA,GAAG,CAAC9B,GAAG,KAAKsB,KAAK,GAAG;QAAE,GAAGQ,GAAG;QAAE1B,aAAa,EAAEuC;MAAU,CAAC,GAAGb,GAC7D,CAAC,CAAC;MACFnE,SAAS,CAACiF,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE;QACtC7C,EAAE,EAAEuB,KAAK;QACTrB,KAAK,EAAEyC,KAAK,CAACzC,KAAK;QAClBE,KAAK,EAAEwC,SAAS;QAChBrC,GAAG,EAAE,IAAID,IAAI,CAACsC,SAAS,CAACnC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACnDC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE;UAAEC,IAAI,EAAE,KAAK;UAAEW;QAAM;MACtC,CAAC,CAAC,CAAC;MACHnD,iBAAiB,CAAC,6BAA6B,CAAC;IAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,2CAA2C,CAAC;MACrDwE,IAAI,CAACI,MAAM,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMnB,aAAa,GAAG,MAAAA,CAAOJ,KAAK,EAAEV,OAAO,KAAK;IAC9C,MAAMjB,KAAK,GAAGnC,MAAM,CAACuE,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAKY,OAAO,CAAC;IACjD,MAAMkB,GAAG,GAAGnC,KAAK,CAACC,SAAS,CAACmC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK,CAAC;IACtD7D,SAAS,CAACyE,UAAU,IAAIA,UAAU,CAACrC,GAAG,CAAC0C,CAAC,IACtCA,CAAC,CAACvC,GAAG,KAAKY,OAAO,GACb;MAAE,GAAG2B,CAAC;MAAE3C,SAAS,EAAE2C,CAAC,CAAC3C,SAAS,CAACkB,MAAM,CAACkB,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK;IAAE,CAAC,GAC7DiB,CACN,CAAC,CAAC;IACFhF,OAAO,CAAC0E,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEH,GAAG,CAAC,CAAC;IACvC,MAAMK,cAAc,CAACb,KAAK,EAAE,IAAI,CAAC;IACjC,MAAMzE,SAAS,CAAC8C,KAAK,CAAC;EACxB,CAAC;EAED,MAAMkC,oBAAoB,GAAG,MAAAA,CAAOP,KAAK,EAAEK,aAAa,EAAEC,WAAW,KAAK;IACxE,MAAMkB,WAAW,GAAGtF,MAAM,CAACuE,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAK2B,aAAa,CAAC;IAC7D,MAAMG,GAAG,GAAGgB,WAAW,CAAClD,SAAS,CAACmC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK,CAAC;IAC5D7D,SAAS,CAACyE,UAAU,IAAIA,UAAU,CAACrC,GAAG,CAACF,KAAK,IAAI;MAC9C,IAAIA,KAAK,CAACK,GAAG,KAAK2B,aAAa,EAAE;QAC/B,OAAO;UAAE,GAAGhC,KAAK;UAAEC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACkB,MAAM,CAACkB,CAAC,IAAIA,CAAC,CAAChC,GAAG,KAAKsB,KAAK;QAAE,CAAC;MAC9E;MACA,IAAI3B,KAAK,CAACK,GAAG,KAAK4B,WAAW,EAAE;QAC7B,OAAO;UAAE,GAAGjC,KAAK;UAAEC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAS,EAAEkC,GAAG;QAAE,CAAC;MAC3D;MACA,OAAOnC,KAAK;IACd,CAAC,CAAC,CAAC;IACH,MAAMwC,cAAc,CAACb,KAAK,EAAEM,WAAW,CAAC;IACxC,MAAM/E,SAAS,CAACiG,WAAW,CAAC;IAC5B,MAAMjG,SAAS,CAACW,MAAM,CAACuE,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAK4B,WAAW,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMO,cAAc,GAAG,MAAAA,CAAOb,KAAK,EAAEV,OAAO,KAAK;IAC/C,IAAI;MACF,MAAM3D,SAAS,CAACqE,KAAK,EAAE;QAAE3B,KAAK,EAAEiB;MAAQ,CAAC,CAAC;MAC1CzC,iBAAiB,CAAC,2BAA2B,CAAC;IAChD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,+CAA+C,CAAC;IAC3D;EACF,CAAC;EAED,MAAM8E,mBAAmB,GAAG,MAAOnC,OAAO,IAAK;IAC7C,IAAI;MACF,MAAMoC,cAAc,GAAG,MAAMjG,aAAa,CAAC6D,OAAO,CAAC;MACnDnD,SAAS,CAACD,MAAM,CAACqC,GAAG,CAACF,KAAK,IAAIA,KAAK,CAACK,GAAG,KAAKY,OAAO,GAAGoC,cAAc,GAAGrD,KAAK,CAAC,CAAC;MAC9ExB,iBAAiB,CAAC,+BAA+B,CAAC;IACpD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,6CAA6C,CAAC;IACzD;EACF,CAAC;EAED,MAAMgF,eAAe,GAAG,MAAOR,IAAI,IAAK;IACtC,MAAM;MAAEC;IAAM,CAAC,GAAGD,IAAI;IACtBtD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEsD,KAAK,CAAC,CAAC,CAAC;IACtC,IAAI;MACF,MAAMQ,YAAY,GAAG,MAAMlG,mBAAmB,CAAC;QAC7C+C,EAAE,EAAE2C,KAAK,CAAC3C,EAAE;QACZI,KAAK,EAAEuC,KAAK,CAACvC,KAAK;QAClBG,GAAG,EAAEoC,KAAK,CAACpC;MACb,CAAC,CAAC;MACF3C,SAAS,CAACiF,UAAU,IAClBA,UAAU,CAAC/C,GAAG,CAACsD,CAAC,IAAIA,CAAC,CAACpD,EAAE,KAAKmD,YAAY,CAACnD,EAAE,GAAGmD,YAAY,GAAGC,CAAC,CACjE,CAAC;MACD,MAAM;QAAEvC,OAAO;QAAEC;MAAW,CAAC,GAAG6B,KAAK,CAAChC,aAAa;MACnD,MAAM0C,aAAa,GAAG5F,MAAM,CAACqC,GAAG,CAACF,KAAK,IAAI;QACxC,IAAIA,KAAK,CAACK,GAAG,KAAKY,OAAO,EAAE;UACzB,OAAO;YACL,GAAGjB,KAAK;YACRC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,QAAQ,IACrCA,QAAQ,CAACE,GAAG,KAAKa,UAAU,GACvB;cAAE,GAAGf,QAAQ;cAAEM,aAAa,EAAEsC,KAAK,CAACvC,KAAK;cAAEI,gBAAgB,EAAEmC,KAAK,CAACpC;YAAI,CAAC,GACxER,QACN;UACF,CAAC;QACH;QACA,OAAOH,KAAK;MACd,CAAC,CAAC;MACFlC,SAAS,CAAC2F,aAAa,CAAC;MACxB,MAAMvG,SAAS,CAACuG,aAAa,CAACrB,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACvC,GAAG,KAAKY,OAAO,CAAC,CAAC;MAC3DzC,iBAAiB,CAAC,6BAA6B,CAAC;IAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,2CAA2C,CAAC;MACrDwE,IAAI,CAACI,MAAM,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzG,SAAS,CAAC;QAAEqD,IAAI,EAAE,aAAa1C,MAAM,CAAC+F,MAAM,GAAG,CAAC,EAAE;QAAE3D,SAAS,EAAE;MAAG,CAAC,CAAC;MAC3FnC,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE8F,QAAQ,CAAC,CAAC;MAChCnF,iBAAiB,CAAC,+BAA+B,CAAC;IACpD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC;EAED,MAAMuF,iBAAiB,GAAG,MAAO5C,OAAO,IAAK;IAC3C,IAAI;MACF,MAAM9D,WAAW,CAAC8D,OAAO,CAAC;MAC1BnD,SAAS,CAACD,MAAM,CAACsD,MAAM,CAACnB,KAAK,IAAIA,KAAK,CAACK,GAAG,KAAKY,OAAO,CAAC,CAAC;MACxDzC,iBAAiB,CAAC,6BAA6B,CAAC;IAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,2CAA2C,CAAC;IACvD;EACF,CAAC;EAED,IAAIH,OAAO,EAAE,oBAAOX,OAAA;IAAKsG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtE,IAAI9F,KAAK,EAAE,oBAAOb,OAAA;IAAKsG,SAAS,EAAC,+BAA+B;IAAAC,QAAA,EAAE1F;EAAK;IAAA2F,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE9E,oBACE3G,OAAA;IAAKsG,SAAS,EAAC,mDAAmD;IAAAC,QAAA,eAChEvG,OAAA;MAAMsG,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACtDvG,OAAA;QAAKsG,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCvG,OAAA;UAAIsG,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAE5D5F,cAAc,iBACbf,OAAA;UAAKsG,SAAS,EAAC,kEAAkE;UAACM,IAAI,EAAC,OAAO;UAAAL,QAAA,eAC5FvG,OAAA;YAAAuG,QAAA,EAAIxF;UAAc;YAAAyF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CACN,eAED3G,OAAA;UAAKsG,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBvG,OAAA;YAAKsG,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBvG,OAAA;cACE6G,QAAQ,EAAGb,CAAC,IAAKtF,YAAY,CAACsF,CAAC,CAACc,MAAM,CAACC,KAAK,CAAE;cAC9CT,SAAS,EAAC,oJAAoJ;cAAAC,QAAA,gBAE9JvG,OAAA;gBAAQ+G,KAAK,EAAC,QAAQ;gBAAAR,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC3G,OAAA;gBAAQ+G,KAAK,EAAC,MAAM;gBAAAR,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC3G,OAAA;gBAAQ+G,KAAK,EAAC,UAAU;gBAAAR,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C3G,OAAA;gBAAQ+G,KAAK,EAAC,KAAK;gBAAAR,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN3G,OAAA;YAAKsG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BvG,OAAA;cAAKsG,SAAS,EAAC,gBAAgB;cAAC,cAAW,MAAM;cAAAC,QAAA,EAC9C,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC7D,GAAG,CAAEsE,GAAG,iBAC7ChH,OAAA;gBAEEiH,OAAO,EAAEA,CAAA,KAAMvG,YAAY,CAACsG,GAAG,CAAE;gBACjCV,SAAS,EAAE,GACT7F,SAAS,KAAKuG,GAAG,GACb,uBAAuB,GACvB,6CAA6C,2CACP;gBAAAT,QAAA,EAE3CS,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,GAAG,CAACI,KAAK,CAAC,CAAC;cAAC,GARtCJ,GAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASF,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN3G,OAAA;UAAKsG,SAAS,EAAC,qCAAqC;UAAAC,QAAA,GACjD9F,SAAS,KAAK,QAAQ,iBACrBT,OAAA,CAACjB,eAAe;YAAC8E,SAAS,EAAEA,SAAU;YAAA0C,QAAA,gBACpCvG,OAAA;cAAKsG,SAAS,EAAC,wCAAwC;cAAAC,QAAA,gBACrDvG,OAAA;gBAAIsG,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClD3G,OAAA;gBACEiH,OAAO,EAAEf,cAAe;gBACxBI,SAAS,EAAC,6DAA6D;gBAAAC,QAAA,EACxE;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN3G,OAAA;cAAKsG,SAAS,EAAC,sDAAsD;cAAAC,QAAA,EAClElG,MAAM,CAACqC,GAAG,CAACF,KAAK,iBACfxC,OAAA,CAAChB,SAAS;gBAAiBiF,WAAW,EAAE,SAASzB,KAAK,CAACK,GAAG,EAAG;gBAAA0D,QAAA,EACzDc,QAAQ,iBACRrH,OAAA;kBACEsH,GAAG,EAAED,QAAQ,CAACE,QAAS;kBAAA,GACnBF,QAAQ,CAACG,cAAc;kBAC3BlB,SAAS,EAAC,uCAAuC;kBAAAC,QAAA,gBAEjDvG,OAAA;oBAAKsG,SAAS,EAAC,wCAAwC;oBAAAC,QAAA,gBACrDvG,OAAA;sBAAIsG,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAE/D,KAAK,CAACO;oBAAI;sBAAAyD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC/C3G,OAAA;sBAAAuG,QAAA,gBACEvG,OAAA;wBACEiH,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAACpD,KAAK,CAACK,GAAG,CAAE;wBAC9CyD,SAAS,EAAC,2CAA2C;wBAAAC,QAAA,EACtD;sBAED;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACT3G,OAAA;wBACEiH,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAAC7D,KAAK,CAACK,GAAG,CAAE;wBAC5CyD,SAAS,EAAC,iCAAiC;wBAAAC,QAAA,EAC5C;sBAED;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EACLnE,KAAK,CAACC,SAAS,IAAID,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAE8E,KAAK,kBACtDzH,OAAA,CAACf,SAAS;oBAAoBmF,WAAW,EAAEzB,QAAQ,CAACE,GAAI;oBAAC4E,KAAK,EAAEA,KAAM;oBAAAlB,QAAA,EAClEc,QAAQ,iBACRrH,OAAA;sBACEsH,GAAG,EAAED,QAAQ,CAACE,QAAS;sBAAA,GACnBF,QAAQ,CAACK,cAAc;sBAAA,GACvBL,QAAQ,CAACM,eAAe;sBAC5BrB,SAAS,EAAC,kCAAkC;sBAAAC,QAAA,EAE3C5D,QAAQ,CAACI;oBAAI;sBAAAyD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX;kBACN,GAVahE,QAAQ,CAACE,GAAG;oBAAA2D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAWjB,CACZ,CAAC,EACDU,QAAQ,CAACO,WAAW;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB;cACN,GAxCanE,KAAK,CAACK,GAAG;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAyCd,CACZ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN3G,OAAA,CAAChB,SAAS;cAACiF,WAAW,EAAC,SAAS;cAAAsC,QAAA,EAC5Bc,QAAQ,iBACRrH,OAAA;gBACEsH,GAAG,EAAED,QAAQ,CAACE,QAAS;gBAAA,GACnBF,QAAQ,CAACG,cAAc;gBAC3BlB,SAAS,EAAC,4CAA4C;gBAAAC,QAAA,gBAEtDvG,OAAA;kBAAIsG,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EACtDxG,IAAI,CAACuC,GAAG,CAAC,CAACiC,GAAG,EAAE8C,KAAK,kBACnBzH,OAAA,CAACf,SAAS;kBAAemF,WAAW,EAAEO,GAAG,CAAC9B,GAAI;kBAAC4E,KAAK,EAAEA,KAAM;kBAAAlB,QAAA,EACxDc,QAAQ;oBAAA,IAAAQ,aAAA;oBAAA,oBACR7H,OAAA;sBACEsH,GAAG,EAAED,QAAQ,CAACE,QAAS;sBAAA,GACnBF,QAAQ,CAACK,cAAc;sBAAA,GACvBL,QAAQ,CAACM,eAAe;sBAC5BrB,SAAS,EAAC,2CAA2C;sBACrD,cAAY7E,IAAI,CAACqG,SAAS,CAAC;wBACzBlF,EAAE,EAAE+B,GAAG,CAAC9B,GAAG;wBACXC,KAAK,EAAE6B,GAAG,CAAC7B,KAAK;wBAChBiF,QAAQ,EAAE;sBACZ,CAAC,CAAE;sBAAAxB,QAAA,gBAEHvG,OAAA;wBAAIsG,SAAS,EAAC,eAAe;wBAAAC,QAAA,EAAE5B,GAAG,CAAC7B;sBAAK;wBAAA0D,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAC9C3G,OAAA;wBAAAuG,QAAA,EAAI5B,GAAG,CAACqD;sBAAW;wBAAAxB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACxB3G,OAAA;wBAAAuG,QAAA,GAAG,UAAQ,EAAC5B,GAAG,CAACsD,MAAM;sBAAA;wBAAAzB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eAC3B3G,OAAA;wBAAAuG,QAAA,GAAG,YAAU,GAAAsB,aAAA,GAAClD,GAAG,CAAChC,QAAQ,cAAAkF,aAAA,uBAAZA,aAAA,CAAc9E,IAAI;sBAAA;wBAAAyD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACrC3G,OAAA;wBAAAuG,QAAA,GAAG,aAAW,EAAC5B,GAAG,CAAC1B,aAAa,GAAG,IAAIC,IAAI,CAACyB,GAAG,CAAC1B,aAAa,CAAC,CAACiF,cAAc,CAAC,CAAC,GAAG,eAAe;sBAAA;wBAAA1B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnG,CAAC;kBAAA;gBACP,GAnBahC,GAAG,CAAC9B,GAAG;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAoBZ,CACZ,CAAC,EACDU,QAAQ,CAACO,WAAW;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAClB,EAEAlG,SAAS,KAAK,MAAM,iBACnBT,OAAA;YAAKsG,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BvG,OAAA;cAAIsG,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrD3G,OAAA;cAAKsG,SAAS,EAAC,sDAAsD;cAAAC,QAAA,EAClEpG,IAAI,CAACuC,GAAG,CAACiC,GAAG;gBAAA,IAAAwD,cAAA;gBAAA,oBACXnI,OAAA;kBAAmBsG,SAAS,EAAC,uCAAuC;kBAAAC,QAAA,gBAClEvG,OAAA;oBAAIsG,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAE5B,GAAG,CAAC7B;kBAAK;oBAAA0D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC9C3G,OAAA;oBAAAuG,QAAA,EAAI5B,GAAG,CAACqD;kBAAW;oBAAAxB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACxB3G,OAAA;oBAAAuG,QAAA,GAAG,UAAQ,EAAC5B,GAAG,CAACsD,MAAM;kBAAA;oBAAAzB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC3B3G,OAAA;oBAAAuG,QAAA,GAAG,YAAU,GAAA4B,cAAA,GAACxD,GAAG,CAAChC,QAAQ,cAAAwF,cAAA,uBAAZA,cAAA,CAAcpF,IAAI;kBAAA;oBAAAyD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrC3G,OAAA;oBAAAuG,QAAA,GAAG,aAAW,EAAC5B,GAAG,CAAC1B,aAAa,GAAG,IAAIC,IAAI,CAACyB,GAAG,CAAC1B,aAAa,CAAC,CAACiF,cAAc,CAAC,CAAC,GAAG,eAAe;kBAAA;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA,GAL9FhC,GAAG,CAAC9B,GAAG;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMZ,CAAC;cAAA,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAEAlG,SAAS,KAAK,UAAU,iBACvBT,OAAA;YAAKsG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCvG,OAAA;cAAIsG,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzD3G,OAAA,CAACb,YAAY;cACbiJ,OAAO,EAAE,CAAChJ,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;cAC5D+I,WAAW,EAAC,cAAc;cAC1BC,aAAa,EAAE;gBACbC,IAAI,EAAE,iBAAiB;gBACvBC,MAAM,EAAE,OAAO;gBACfC,KAAK,EAAE;cACT,CAAE;cACFC,QAAQ,EAAE,IAAK;cACfC,SAAS,EAAE,IAAK;cAChBpI,MAAM,EAAEA,MAAO;cACfqI,SAAS,EAAE9C,eAAgB;cAC3B+C,YAAY,EAAExD;YAAmB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CACN,EAEAlG,SAAS,KAAK,KAAK,iBAClBT,OAAA;YAAKsG,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BvG,OAAA;cAAIsG,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC1DtG,MAAM,CAACqC,GAAG,CAACF,KAAK,iBACfxC,OAAA;cAAqBsG,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnCvG,OAAA;gBAAIsG,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,EAAE/D,KAAK,CAACO;cAAI;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5D3G,OAAA,CAACT,WAAW;gBACVkD,SAAS,EAAED,KAAK,CAACC,SAAU;gBAC3BD,KAAK,EAAEA,KAAM;gBACbsG,eAAe,EAAEA,CAAA,KAAMlD,mBAAmB,CAACpD,KAAK,CAACK,GAAG;cAAE;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC;YAAA,GANMnE,KAAK,CAACK,GAAG;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOd,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzG,EAAA,CAtcID,WAAW;EAAA,QAQEf,WAAW;AAAA;AAAA6J,EAAA,GARxB9I,WAAW;AAwcjB,eAAeA,WAAW;AAAC,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}