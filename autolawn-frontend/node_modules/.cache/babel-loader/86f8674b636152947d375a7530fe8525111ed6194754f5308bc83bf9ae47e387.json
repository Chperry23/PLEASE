{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/verify`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error('Token verification failed', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      setUser(user);\n      localStorage.setItem('token', token);\n      return user;\n    } catch (error) {\n      var _error$response;\n      console.error('Login failed', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      setUser(user);\n      localStorage.setItem('token', token);\n      return user;\n    } catch (error) {\n      var _error$response2;\n      console.error('Registration failed', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  };\n  const loginWithGoogle = () => {\n    window.location.href = `${API_URL}/auth/google`;\n  };\n  const handleLoginSuccess = token => {\n    localStorage.setItem('token', token);\n    verifyToken(token);\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      loginWithGoogle,\n      handleLoginSuccess,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","API_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","verifyToken","response","get","headers","Authorization","data","error","console","logout","login","email","password","post","setItem","_error$response","message","register","name","_error$response2","loginWithGoogle","window","location","href","handleLoginSuccess","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      verifyToken(token);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const verifyToken = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/auth/verify`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Token verification failed', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      const { user, token } = response.data;\r\n      setUser(user);\r\n      localStorage.setItem('token', token);\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Login failed', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`, { name, email, password });\r\n      const { user, token } = response.data;\r\n      setUser(user);\r\n      localStorage.setItem('token', token);\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Registration failed', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const loginWithGoogle = () => {\r\n    window.location.href = `${API_URL}/auth/google`;\r\n  };\r\n\r\n  const handleLoginSuccess = (token) => {\r\n    localStorage.setItem('token', token);\r\n    verifyToken(token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, loginWithGoogle, handleLoginSuccess, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}