{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners'; // Add spinner loader\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [crews, setCrews] = useState([]); // Add state for crews\n  const [employees, setEmployees] = useState([]); // Add state for employees\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedCrewsResponse, fetchedEmployeesResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available'), fetchWithAuth('/crews'),\n      // Fetch available crews\n      fetchWithAuth('/employees') // Fetch available employees\n      ]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      const fetchedJobs = fetchedJobsResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      setRoutes(validateRoutesStructure(fetchedRoutes));\n      setJobPool(fetchedJobs);\n      setCrews(fetchedCrews);\n      setEmployees(fetchedEmployees);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, crews, and employees. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n\n  // Function to save routes with crew or employee assignment\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => ({\n          index: route.index,\n          jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id),\n          crew: route.crew || null,\n          // Assign crew\n          assignedTo: route.assignedTo || null // Assign employee\n        }));\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      await initializeData(); // Reinitialize data after saving\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  }, [routes, initializeData]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n\n  // Handle the drag and drop functionality\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log(\"Drag operation cancelled or no destination found.\");\n      return;\n    }\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n\n      // Moving from job pool to a route\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        // Add jobs to the route\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n        });\n\n        // Remove moved jobs from job pool\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          // If no jobs were selected, remove the single dragged job from the pool\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n      }\n\n      // Moving between routes or within the same route\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        selectedJobs.forEach((jobId, index) => {\n          // Find job in the source route\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n\n          // Add job to destination route\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n          }\n        });\n      }\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n\n  // Add new route\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n\n  // Delete route\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n\n  // Remove job from route\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const clearSelectedJobs = () => {\n    setSelectedJobs([]);\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null;\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      recurring: 'bg-blue-600 hover:bg-blue-700'\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n      children: [jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 19\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJobs([]) // This will clear the selected jobs\n              ,\n              className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"YsLzVykKwmNnAyDgp4yMJEwfnUI=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","crews","setCrews","employees","setEmployees","visibleRoutesRange","setVisibleRoutesRange","start","end","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedCrewsResponse","fetchedEmployeesResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedCrews","fetchedEmployees","err","console","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","index","jobs","job","_id","crew","assignedTo","debouncedSaveRoutes","onDragEnd","result","source","destination","log","prevRoutes","sourceId","droppableId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","selectedJobs","length","filter","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","setSelectedJobs","addNewRoute","newRouteState","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","handleJobSelection","prevSelectedJobs","id","clearSelectedJobs","toggleJobExpansion","setExpandedJobs","prev","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","Math","min","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","expandedJobs","customerName","customer","name","isSelected","jobColors","oneTime","recurring","jobStyle","backgroundColor","isRecurring","border","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';  // Add spinner loader\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [crews, setCrews] = useState([]);  // Add state for crews\r\n  const [employees, setEmployees] = useState([]);  // Add state for employees\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedCrewsResponse, fetchedEmployeesResponse] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n        fetchWithAuth('/crews'),  // Fetch available crews\r\n        fetchWithAuth('/employees')  // Fetch available employees\r\n      ]);\r\n\r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      const fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n\r\n      setRoutes(validateRoutesStructure(fetchedRoutes));\r\n      setJobPool(fetchedJobs);\r\n      setCrews(fetchedCrews);\r\n      setEmployees(fetchedEmployees);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, crews, and employees. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  // Function to save routes with crew or employee assignment\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)),\r\n          crew: route.crew || null,  // Assign crew\r\n          assignedTo: route.assignedTo || null,  // Assign employee\r\n        }));\r\n        return acc;\r\n      }, {});\r\n\r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      await initializeData();  // Reinitialize data after saving\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes, initializeData]);\r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  // Handle the drag and drop functionality\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      console.log(\"Drag operation cancelled or no destination found.\");\r\n      return;\r\n    }\r\n  \r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n  \r\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n        const selectedJobsToMove = selectedJobs.length > 0 \r\n          ? jobPool.filter(job => selectedJobs.includes(job._id)) \r\n          : [jobPool[source.index]];  // Only the single dragged job\r\n  \r\n        // Add jobs to the route\r\n        selectedJobsToMove.forEach((job, index) => {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\r\n        });\r\n  \r\n        // Remove moved jobs from job pool\r\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\r\n        if (selectedJobs.length === 0) {\r\n          // If no jobs were selected, remove the single dragged job from the pool\r\n          updatedJobPool.splice(source.index, 1);\r\n        }\r\n        setJobPool(updatedJobPool);\r\n      }\r\n  \r\n      // Moving between routes or within the same route\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        selectedJobs.forEach((jobId, index) => {\r\n          // Find job in the source route\r\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\r\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\r\n  \r\n          // Add job to destination route\r\n          if (removedJob) {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\r\n          }\r\n        });\r\n      }\r\n  \r\n      setSelectedJobs([]); // Clear selected jobs after moving\r\n      return updatedRoutes;\r\n    });\r\n\r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\r\n\r\n  // Add new route\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [\r\n        ...routes[selectedDay],\r\n        { index: routes[selectedDay].length, jobs: [] },\r\n      ],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n\r\n  // Delete route\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n        \r\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n        \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n        \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);\r\n\r\n  // Remove job from route\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs\r\n      });\r\n  \r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n  \r\n  const clearSelectedJobs = () => {\r\n    setSelectedJobs([]);\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs(prev => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    if (!job) return null;\r\n\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const isSelected = selectedJobs.includes(job._id);\r\n\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700',\r\n      recurring: 'bg-blue-600 hover:bg-blue-700'\r\n    };\r\n\r\n    const jobStyle = {\r\n      backgroundColor: job.isRecurring ? jobColors.recurring : jobColors.oneTime,\r\n      border: isSelected ? '2px solid yellow' : 'none',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => (\r\n    <Droppable droppableId={id}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white text-center\">No jobs available</p>\r\n          )}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <button\r\n                  onClick={() => setSelectedJobs([])}  // This will clear the selected jobs\r\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                >\r\n                  Clear Selection\r\n                </button>            \r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">Click on jobs to select multiple, then drag to a route.</p>\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {/* Loading Spinner when saving */}\r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}