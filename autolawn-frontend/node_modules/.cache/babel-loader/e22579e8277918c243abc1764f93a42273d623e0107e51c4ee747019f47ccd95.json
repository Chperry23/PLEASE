{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth, debounceSaveToLocalStorage } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  useEffect(() => {\n    const initializeData = async () => {\n      setLoading(true);\n      try {\n        const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available')]);\n        console.log('Fetched Routes Response:', fetchedRoutesResponse);\n        console.log('Fetched Jobs Response:', fetchedJobsResponse);\n        const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n        const fetchedJobs = fetchedJobsResponse || [];\n        const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n        setRoutes(validatedRoutes);\n        setJobPool(fetchedJobs.filter(job => !Object.values(validatedRoutes).flat().some(route => route.jobs.some(routeJob => routeJob._id === job._id))));\n        console.log('Routes after fetch:', validatedRoutes);\n        console.log('Job Pool after fetch:', fetchedJobs);\n      } catch (err) {\n        var _err$response;\n        console.error('Error fetching data:', err);\n        console.error('Error details:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n        setError('Failed to load routes and jobs. Please refresh the page.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeData();\n  }, []);\n  useEffect(() => {\n    debounceSaveToLocalStorage(routes, jobPool);\n  }, [routes, jobPool]);\n  const saveRoutes = async () => {\n    try {\n      console.log('Routes to be saved:', routes);\n      const response = await fetchWithAuth('/routes', 'PUT', {\n        routes\n      });\n      console.log('All routes saved successfully', response);\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    }\n  };\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [routes]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceId = source.droppableId.split('-');\n    const destId = destination.droppableId.split('-');\n    const sourceListType = sourceId[0];\n    const sourceRouteIndex = parseInt(sourceId[1], 10);\n    const destListType = destId[0];\n    const destRouteIndex = parseInt(destId[1], 10);\n    let updatedRoutes = {\n      ...routes\n    };\n    let updatedJobPool = [...jobPool];\n    let movedJob;\n    if (sourceListType === 'jobPool') {\n      movedJob = updatedJobPool[source.index];\n      updatedJobPool.splice(source.index, 1);\n      if (destListType === 'jobPool') {\n        updatedJobPool.splice(destination.index, 0, movedJob);\n      } else {\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n      }\n    } else {\n      movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\n      updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\n      if (destListType === 'jobPool') {\n        updatedJobPool.splice(destination.index, 0, movedJob);\n      } else {\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\n      }\n    }\n    setRoutes(updatedRoutes);\n    setJobPool(updatedJobPool);\n    debouncedSaveRoutes();\n  };\n  const addNewRoute = () => {\n    setRoutes(prevRoutes => {\n      const newRoute = {\n        index: prevRoutes[selectedDay].length,\n        jobs: []\n      };\n      return {\n        ...prevRoutes,\n        [selectedDay]: [...prevRoutes[selectedDay], newRoute]\n      };\n    });\n  };\n  const deleteRoute = routeIndex => {\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n\n      // Move jobs from deleted route back to job pool\n      setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n\n      // Reindex remaining routes\n      updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n        ...route,\n        index: idx\n      }));\n      return updatedRoutes;\n    });\n  };\n  const removeJobFromRoute = (routeIndex, jobIndex) => {\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n      setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n      return updatedRoutes;\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    const isExpanded = expandedJobs[job._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-700 rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeJobFromRoute(routeIndex, jobIndex),\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleJobExpansion(job._id),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.recurringStatus === 'Active' ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: id,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n      children: [jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: job._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Job Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"ls/dV6K1gtAsq0uCPFhgiONrSF0=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","debounceSaveToLocalStorage","Header","debounce","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","initializeData","fetchedRoutesResponse","fetchedJobsResponse","Promise","all","console","log","fetchedRoutes","fetchedJobs","validatedRoutes","filter","job","Object","values","flat","some","route","jobs","routeJob","_id","err","_err$response","response","data","saveRoutes","debouncedSaveRoutes","onDragEnd","result","source","destination","sourceId","droppableId","split","destId","sourceListType","sourceRouteIndex","parseInt","destListType","destRouteIndex","updatedRoutes","updatedJobPool","movedJob","index","splice","addNewRoute","prevRoutes","newRoute","length","deleteRoute","routeIndex","deletedRoute","prevJobPool","map","idx","removeJobFromRoute","jobIndex","removedJob","cycleVisibleRoutes","direction","prevRange","totalRoutes","newStart","newEnd","Math","min","changeSelectedDay","prevDay","currentIndex","indexOf","newIndex","toggleJobExpansion","jobId","prev","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","className","children","customer","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","location","address","cost","recurringStatus","renderDroppableArea","id","isJobPool","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","window","reload","slice","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n  debounceSaveToLocalStorage,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const [fetchedRoutesResponse, fetchedJobsResponse] = await Promise.all([\r\n          fetchWithAuth('/routes'),\r\n          fetchWithAuth('/routes/jobs/available'),\r\n        ]);\r\n    \r\n        console.log('Fetched Routes Response:', fetchedRoutesResponse);\r\n        console.log('Fetched Jobs Response:', fetchedJobsResponse);\r\n    \r\n        const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n        const fetchedJobs = fetchedJobsResponse || [];\r\n    \r\n        const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n    \r\n        setRoutes(validatedRoutes);\r\n        setJobPool(fetchedJobs.filter(job => \r\n          !Object.values(validatedRoutes).flat().some(route => \r\n            route.jobs.some(routeJob => routeJob._id === job._id)\r\n          )\r\n        ));\r\n    \r\n        console.log('Routes after fetch:', validatedRoutes);\r\n        console.log('Job Pool after fetch:', fetchedJobs);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        console.error('Error details:', err.response?.data);\r\n        setError('Failed to load routes and jobs. Please refresh the page.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    debounceSaveToLocalStorage(routes, jobPool);\r\n  }, [routes, jobPool]);\r\n\r\n  const saveRoutes = async () => {\r\n    try {\r\n      console.log('Routes to be saved:', routes);\r\n      const response = await fetchWithAuth('/routes', 'PUT', { routes });\r\n      console.log('All routes saved successfully', response);\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [routes]);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceId = source.droppableId.split('-');\r\n    const destId = destination.droppableId.split('-');\r\n\r\n    const sourceListType = sourceId[0];\r\n    const sourceRouteIndex = parseInt(sourceId[1], 10);\r\n\r\n    const destListType = destId[0];\r\n    const destRouteIndex = parseInt(destId[1], 10);\r\n\r\n    let updatedRoutes = { ...routes };\r\n    let updatedJobPool = [...jobPool];\r\n\r\n    let movedJob;\r\n\r\n    if (sourceListType === 'jobPool') {\r\n      movedJob = updatedJobPool[source.index];\r\n      updatedJobPool.splice(source.index, 1);\r\n\r\n      if (destListType === 'jobPool') {\r\n        updatedJobPool.splice(destination.index, 0, movedJob);\r\n      } else {\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n      }\r\n    } else {\r\n      movedJob = updatedRoutes[selectedDay][sourceRouteIndex].jobs[source.index];\r\n      updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(source.index, 1);\r\n\r\n      if (destListType === 'jobPool') {\r\n        updatedJobPool.splice(destination.index, 0, movedJob);\r\n      } else {\r\n        updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, movedJob);\r\n      }\r\n    }\r\n\r\n    setRoutes(updatedRoutes);\r\n    setJobPool(updatedJobPool);\r\n    debouncedSaveRoutes();\r\n  };\r\n\r\n  const addNewRoute = () => {\r\n    setRoutes((prevRoutes) => {\r\n      const newRoute = {\r\n        index: prevRoutes[selectedDay].length,\r\n        jobs: [],\r\n      };\r\n      return {\r\n        ...prevRoutes,\r\n        [selectedDay]: [...prevRoutes[selectedDay], newRoute],\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteRoute = (routeIndex) => {\r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n      \r\n      // Move jobs from deleted route back to job pool\r\n      setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n      \r\n      // Reindex remaining routes\r\n      updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n        ...route,\r\n        index: idx,\r\n      }));\r\n      \r\n      return updatedRoutes;\r\n    });\r\n  };\r\n\r\n  const removeJobFromRoute = (routeIndex, jobIndex) => {\r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n      setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n      return updatedRoutes;\r\n    });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs(prev => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    const isExpanded = expandedJobs[job._id];\r\n\r\n    return (\r\n      <div className=\"p-2 bg-gray-700 rounded-md shadow-md\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{job.customer?.name || 'No Customer'}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={() => removeJobFromRoute(routeIndex, jobIndex)}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={() => toggleJobExpansion(job._id)}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.recurringStatus === 'Active' ? 'Recurring' : 'One-time'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => (\r\n    <Droppable droppableId={id}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`}\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job, index) => (\r\n              <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {renderJobCard(job, !isJobPool, parseInt(id.split('-')[1], 10), index)}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white text-center\">No jobs available</p>\r\n          )}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Job Pool</h2>\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}