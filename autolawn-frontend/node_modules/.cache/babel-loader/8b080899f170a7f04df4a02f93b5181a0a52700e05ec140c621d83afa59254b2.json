{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport CalendarView from './CalendarView';\nimport CustomerMap from '../../components/CustomerMap';\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\nimport EventModal from './EventModal'; // Make sure to create this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [activeTab, setActiveTab] = useState('routes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const navigate = useNavigate();\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\n      setJobs(jobsData || []);\n      setRoutes(routesData || []);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please try refreshing the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const routeId = destination.droppableId.split('-')[1];\n      await moveJobToRoute(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\n      const jobId = result.draggableId;\n      const routeId = source.droppableId.split('-')[1];\n      await moveJobToPool(jobId, routeId);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      const jobId = result.draggableId;\n      const sourceRouteId = source.droppableId.split('-')[1];\n      const destRouteId = destination.droppableId.split('-')[1];\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\n    }\n  };\n  const moveJobToRoute = async (jobId, routeId) => {\n    try {\n      const job = jobs.find(j => j._id === jobId);\n      const updatedRoute = await updateRoute(routeId, {\n        $push: {\n          customers: job._id\n        }\n      });\n      await updateJob(jobId, {\n        route: routeId\n      });\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Job added to route successfully!');\n    } catch (error) {\n      console.error('Error moving job to route:', error);\n      setError('Failed to move job to route. Please try again.');\n    }\n  };\n  const moveJobToPool = async (jobId, routeId) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedJob = await updateJob(jobId, {\n        route: null\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\n      setSuccessMessage('Job removed from route successfully!');\n    } catch (error) {\n      console.error('Error moving job to pool:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\n    try {\n      await updateRoute(sourceRouteId, {\n        $pull: {\n          customers: jobId\n        }\n      });\n      const updatedDestRoute = await updateRoute(destRouteId, {\n        $push: {\n          customers: jobId\n        }\n      });\n      await updateJob(jobId, {\n        route: destRouteId\n      });\n      setRoutes(prevRoutes => prevRoutes.map(route => {\n        if (route._id === sourceRouteId) return {\n          ...route,\n          customers: route.customers.filter(c => c._id !== jobId)\n        };\n        if (route._id === destRouteId) return updatedDestRoute;\n        return route;\n      }));\n      setSuccessMessage('Job moved between routes successfully!');\n    } catch (error) {\n      console.error('Error moving job between routes:', error);\n      setError('Failed to move job between routes. Please try again.');\n    }\n  };\n  const handleEditRouteName = async (routeId, newName) => {\n    try {\n      const updatedRoute = await updateRoute(routeId, {\n        name: newName\n      });\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\n      setSuccessMessage('Route name updated successfully!');\n    } catch (error) {\n      console.error('Error updating route name:', error);\n      setError('Failed to update route name. Please try again.');\n    }\n  };\n  const handleMapView = routeId => {\n    navigate(`/route-map/${routeId}`);\n  };\n  const handleAddRoute = async () => {\n    try {\n      const newRoute = await saveRoute({\n        name: `New Route ${routes.length + 1}`,\n        customers: []\n      });\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\n      setSuccessMessage('New route added successfully!');\n    } catch (error) {\n      console.error('Error adding new route:', error);\n      setError('Failed to add new route. Please try again.');\n    }\n  };\n  const handleDeleteRoute = async routeId => {\n    try {\n      await deleteRoute(routeId);\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  };\n  const handleEventUpdate = updatedEvent => {\n    if (updatedEvent.extendedProps.type === 'job') {\n      setJobs(prevJobs => prevJobs.map(job => job._id === updatedEvent.id ? {\n        ...job,\n        scheduledDate: updatedEvent.start,\n        scheduledEndDate: updatedEvent.end\n      } : job));\n    } else if (updatedEvent.extendedProps.type === 'route') {\n      const [routeId, customerId] = updatedEvent.id.split('-');\n      setRoutes(prevRoutes => prevRoutes.map(route => route._id === routeId ? {\n        ...route,\n        customers: route.customers.map(customer => customer._id === customerId ? {\n          ...customer,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        } : customer)\n      } : route));\n    }\n  };\n  const handleEventClick = info => {\n    setSelectedEvent(info.event);\n  };\n  const handleEventSave = async updatedEvent => {\n    try {\n      if (updatedEvent.extendedProps.type === 'job') {\n        await updateJob(updatedEvent.id, {\n          title: updatedEvent.title,\n          scheduledDate: updatedEvent.start,\n          scheduledEndDate: updatedEvent.end\n        });\n      } else if (updatedEvent.extendedProps.type === 'route') {\n        const [routeId, customerId] = updatedEvent.id.split('-');\n        await updateRoute(routeId, {\n          customers: [{\n            customer: customerId,\n            scheduledDate: updatedEvent.start,\n            scheduledEndDate: updatedEvent.end\n          }]\n        });\n      }\n      handleEventUpdate(updatedEvent);\n      setSuccessMessage('Event updated successfully!');\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setError('Failed to update event. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes min-h-screen bg-background text-text\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-6 sm:px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Route Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4\",\n              \"aria-label\": \"Tabs\",\n              children: ['routes', 'calendar', 'map'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(tab),\n                className: `${activeTab === tab ? 'bg-primary text-white' : 'text-text hover:text-white hover:bg-primary'} px-3 py-2 font-medium text-sm rounded-md`,\n                children: tab.charAt(0).toUpperCase() + tab.slice(1)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-surface p-6 rounded-lg shadow-lg\",\n          children: [activeTab === 'routes' && /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-semibold\",\n                children: \"Routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddRoute,\n                className: \"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\",\n                children: \"Add New Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: routes.map(route => /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `route-${route._id}`,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"bg-gray-100 p-4 rounded-lg text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: route.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const newName = prompt('Enter new route name:', route.name);\n                          if (newName) handleEditRouteName(route._id, newName);\n                        },\n                        className: \"text-primary hover:text-primary-dark mr-2\",\n                        children: \"Edit Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleMapView(route._id),\n                        className: \"text-blue-600 hover:text-blue-800 mr-2\",\n                        children: \"View Map\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteRoute(route._id),\n                        className: \"text-red-600 hover:text-red-800\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this), route.customers && route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: customer._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 33\n                    }, this)\n                  }, customer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this)\n              }, route._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"jobPool\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"mt-6 bg-gray-200 p-4 rounded-lg text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold mb-2\",\n                  children: \"Unassigned Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this), jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job._id,\n                  index: index,\n                  children: provided => {\n                    var _job$customer;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"bg-white p-2 mb-2 rounded shadow\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold\",\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: job.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Status: \", job.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Customer: \", (_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, job._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(CalendarView, {\n            routes: routes,\n            jobs: jobs,\n            onEventUpdate: handleEventUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold mb-4\",\n              children: \"Route Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold mb-2\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomerMap, {\n                customers: route.customers,\n                route: route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)]\n            }, route._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), selectedEvent && /*#__PURE__*/_jsxDEV(EventModal, {\n      event: selectedEvent,\n      onClose: () => setSelectedEvent(null),\n      onSave: handleEventSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"zfM+TY0Sn7wNceE4DaI2wDftTX4=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","DragDropContext","Droppable","Draggable","useNavigate","CalendarView","CustomerMap","fetchJobs","fetchRoutes","saveRoute","deleteRoute","updateJob","updateRoute","EventModal","jsxDEV","_jsxDEV","BuildRoutes","_s","jobs","setJobs","routes","setRoutes","activeTab","setActiveTab","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedEvent","setSelectedEvent","navigate","fetchData","jobsData","routesData","Promise","all","err","console","onDragEnd","result","source","destination","droppableId","startsWith","jobId","draggableId","routeId","split","moveJobToRoute","moveJobToPool","sourceRouteId","destRouteId","moveJobBetweenRoutes","job","find","j","_id","updatedRoute","$push","customers","route","prevJobs","filter","prevRoutes","map","r","$pull","updatedJob","updatedDestRoute","c","handleEditRouteName","newName","name","handleMapView","handleAddRoute","newRoute","length","handleDeleteRoute","handleEventUpdate","updatedEvent","extendedProps","type","id","scheduledDate","start","scheduledEndDate","end","customerId","customer","handleEventClick","info","event","handleEventSave","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","tab","onClick","charAt","toUpperCase","slice","provided","ref","innerRef","droppableProps","prompt","index","draggableProps","dragHandleProps","placeholder","_job$customer","description","status","onEventUpdate","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CalendarView from './CalendarView';\r\nimport CustomerMap from '../../components/CustomerMap';\r\nimport { fetchJobs, fetchRoutes, saveRoute, deleteRoute, updateJob, updateRoute } from './api';\r\nimport EventModal from './EventModal'; // Make sure to create this component\r\n\r\nconst BuildRoutes = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('routes');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [jobsData, routesData] = await Promise.all([fetchJobs(), fetchRoutes()]);\r\n      setJobs(jobsData || []);\r\n      setRoutes(routesData || []);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load data. Please try refreshing the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'jobPool' && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const routeId = destination.droppableId.split('-')[1];\r\n      await moveJobToRoute(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'jobPool') {\r\n      const jobId = result.draggableId;\r\n      const routeId = source.droppableId.split('-')[1];\r\n      await moveJobToPool(jobId, routeId);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      const jobId = result.draggableId;\r\n      const sourceRouteId = source.droppableId.split('-')[1];\r\n      const destRouteId = destination.droppableId.split('-')[1];\r\n      await moveJobBetweenRoutes(jobId, sourceRouteId, destRouteId);\r\n    }\r\n  };\r\n\r\n  const moveJobToRoute = async (jobId, routeId) => {\r\n    try {\r\n      const job = jobs.find(j => j._id === jobId);\r\n      const updatedRoute = await updateRoute(routeId, { $push: { customers: job._id } });\r\n      await updateJob(jobId, { route: routeId });\r\n      setJobs(prevJobs => prevJobs.filter(j => j._id !== jobId));\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Job added to route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to route:', error);\r\n      setError('Failed to move job to route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobToPool = async (jobId, routeId) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { $pull: { customers: jobId } });\r\n      const updatedJob = await updateJob(jobId, { route: null });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setJobs(prevJobs => [...prevJobs, updatedJob]);\r\n      setSuccessMessage('Job removed from route successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job to pool:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const moveJobBetweenRoutes = async (jobId, sourceRouteId, destRouteId) => {\r\n    try {\r\n      await updateRoute(sourceRouteId, { $pull: { customers: jobId } });\r\n      const updatedDestRoute = await updateRoute(destRouteId, { $push: { customers: jobId } });\r\n      await updateJob(jobId, { route: destRouteId });\r\n      setRoutes(prevRoutes => prevRoutes.map(route => {\r\n        if (route._id === sourceRouteId) return { ...route, customers: route.customers.filter(c => c._id !== jobId) };\r\n        if (route._id === destRouteId) return updatedDestRoute;\r\n        return route;\r\n      }));\r\n      setSuccessMessage('Job moved between routes successfully!');\r\n    } catch (error) {\r\n      console.error('Error moving job between routes:', error);\r\n      setError('Failed to move job between routes. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditRouteName = async (routeId, newName) => {\r\n    try {\r\n      const updatedRoute = await updateRoute(routeId, { name: newName });\r\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === routeId ? updatedRoute : r));\r\n      setSuccessMessage('Route name updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating route name:', error);\r\n      setError('Failed to update route name. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMapView = (routeId) => {\r\n    navigate(`/route-map/${routeId}`);\r\n  };\r\n\r\n  const handleAddRoute = async () => {\r\n    try {\r\n      const newRoute = await saveRoute({ name: `New Route ${routes.length + 1}`, customers: [] });\r\n      setRoutes(prevRoutes => [...prevRoutes, newRoute]);\r\n      setSuccessMessage('New route added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding new route:', error);\r\n      setError('Failed to add new route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeId) => {\r\n    try {\r\n      await deleteRoute(routeId);\r\n      setRoutes(prevRoutes => prevRoutes.filter(route => route._id !== routeId));\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEventUpdate = (updatedEvent) => {\r\n    if (updatedEvent.extendedProps.type === 'job') {\r\n      setJobs(prevJobs => prevJobs.map(job => \r\n        job._id === updatedEvent.id ? { ...job, scheduledDate: updatedEvent.start, scheduledEndDate: updatedEvent.end } : job\r\n      ));\r\n    } else if (updatedEvent.extendedProps.type === 'route') {\r\n      const [routeId, customerId] = updatedEvent.id.split('-');\r\n      setRoutes(prevRoutes => prevRoutes.map(route => \r\n        route._id === routeId ? {\r\n          ...route,\r\n          customers: route.customers.map(customer => \r\n            customer._id === customerId \r\n              ? { ...customer, scheduledDate: updatedEvent.start, scheduledEndDate: updatedEvent.end }\r\n              : customer\r\n          )\r\n        } : route\r\n      ));\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    setSelectedEvent(info.event);\r\n  };\r\n\r\n  const handleEventSave = async (updatedEvent) => {\r\n    try {\r\n      if (updatedEvent.extendedProps.type === 'job') {\r\n        await updateJob(updatedEvent.id, {\r\n          title: updatedEvent.title,\r\n          scheduledDate: updatedEvent.start,\r\n          scheduledEndDate: updatedEvent.end\r\n        });\r\n      } else if (updatedEvent.extendedProps.type === 'route') {\r\n        const [routeId, customerId] = updatedEvent.id.split('-');\r\n        await updateRoute(routeId, {\r\n          customers: [{ \r\n            customer: customerId, \r\n            scheduledDate: updatedEvent.start, \r\n            scheduledEndDate: updatedEvent.end \r\n          }]\r\n        });\r\n      }\r\n      handleEventUpdate(updatedEvent);\r\n      setSuccessMessage('Event updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating event:', error);\r\n      setError('Failed to update event. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-8\">Loading...</div>;\r\n  if (error) return <div className=\"text-center mt-8 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes min-h-screen bg-background text-text\">\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Route Management</h1>\r\n          \r\n          {successMessage && (\r\n            <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\" role=\"alert\">\r\n              <p>{successMessage}</p>\r\n            </div>\r\n          )}\r\n  \r\n          <div className=\"mb-6\">\r\n            <div className=\"hidden sm:block\">\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {['routes', 'calendar', 'map'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab)}\r\n                    className={`${\r\n                      activeTab === tab\r\n                        ? 'bg-primary text-white'\r\n                        : 'text-text hover:text-white hover:bg-primary'\r\n                    } px-3 py-2 font-medium text-sm rounded-md`}\r\n                  >\r\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"bg-surface p-6 rounded-lg shadow-lg\">\r\n            {activeTab === 'routes' && (\r\n              <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-2xl font-semibold\">Routes</h2>\r\n                  <button\r\n                    onClick={handleAddRoute}\r\n                    className=\"bg-primary text-white px-4 py-2 rounded hover:bg-opacity-90\"\r\n                  >\r\n                    Add New Route\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {routes.map(route => (\r\n                    <Droppable key={route._id} droppableId={`route-${route._id}`}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.droppableProps}\r\n                          className=\"bg-gray-100 p-4 rounded-lg text-black\"\r\n                        >\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <h3 className=\"font-semibold\">{route.name}</h3>\r\n                            <div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  const newName = prompt('Enter new route name:', route.name);\r\n                                  if (newName) handleEditRouteName(route._id, newName);\r\n                                }}\r\n                                className=\"text-primary hover:text-primary-dark mr-2\"\r\n                              >\r\n                                Edit Name\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMapView(route._id)}\r\n                                className=\"text-blue-600 hover:text-blue-800 mr-2\"\r\n                              >\r\n                                View Map\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteRoute(route._id)}\r\n                                className=\"text-red-600 hover:text-red-800\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          {route.customers && route.customers.map((customer, index) => (\r\n                            <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                              {(provided) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                  className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                                >\r\n                                  {customer.name}\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  ))}\r\n                </div>\r\n                <Droppable droppableId=\"jobPool\">\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mt-6 bg-gray-200 p-4 rounded-lg text-black\"\r\n                    >\r\n                      <h3 className=\"font-semibold mb-2\">Unassigned Jobs</h3>\r\n                      {jobs.filter(job => !job.scheduledDate && !job.route).map((job, index) => (\r\n                        <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                            >\r\n                              <h4 className=\"font-semibold\">{job.title}</h4>\r\n                              <p>{job.description}</p>\r\n                              <p>Status: {job.status}</p>\r\n                              <p>Customer: {job.customer?.name}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            )}\r\n  \r\n            {activeTab === 'calendar' && (\r\n              <CalendarView \r\n                routes={routes} \r\n                jobs={jobs}\r\n                onEventUpdate={handleEventUpdate}\r\n              />\r\n            )}\r\n  \r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Route Maps</h2>\r\n                {routes.map(route => (\r\n                  <div key={route._id} className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold mb-2\">{route.name}</h3>\r\n                    <CustomerMap \r\n                      customers={route.customers}\r\n                      route={route}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {selectedEvent && (\r\n        <EventModal\r\n          event={selectedEvent}\r\n          onClose={() => setSelectedEvent(null)}\r\n          onSave={handleEventSave}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}