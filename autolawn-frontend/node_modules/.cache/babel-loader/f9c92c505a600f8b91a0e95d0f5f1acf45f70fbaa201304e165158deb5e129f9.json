{"ast":null,"code":"// frontend/src/api/dashboardApi.js\n\nimport axios from 'axios';\n\n// Base URL for API requests\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// Function to retrieve headers with the Authorization token\nconst getHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\n// Fetch jobs\nexport const fetchJobs = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/jobs`, getHeaders());\n    return response.data.jobs; // Adjust based on backend response\n  } catch (error) {\n    var _error$response;\n    console.error('Error fetching jobs:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Fetch customers\nexport const fetchCustomers = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/customers`, getHeaders());\n    return response.data.customers; // Adjust based on backend response\n  } catch (error) {\n    var _error$response2;\n    console.error('Error fetching customers:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Fetch employees\nexport const fetchEmployees = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/employees`, getHeaders());\n    return response.data.employees; // Adjust based on backend response\n  } catch (error) {\n    var _error$response3;\n    console.error('Error fetching employees:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// Fetch analytics data based on time range\nexport const fetchAnalytics = async (timeRange, customRange = null) => {\n  try {\n    let params = {};\n    if (timeRange === 'custom') {\n      if (customRange && customRange.start && customRange.end) {\n        params = {\n          timeRange: 'custom',\n          startDate: customRange.start,\n          endDate: customRange.end\n        };\n      } else {\n        throw new Error('Custom range requires startDate and endDate');\n      }\n    } else {\n      // Assume timeRange is a number representing days\n      params = {\n        timeRange\n      };\n    }\n    const response = await axios.get(`${API_URL}/analytics`, {\n      ...getHeaders(),\n      params\n    });\n    return response.data.data; // Adjust based on backend response\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      console.error('Analytics endpoint not found:', error.response.data);\n      throw new Error('Analytics data not found. Please contact support.');\n    } else if (error.message === 'Custom range requires startDate and endDate') {\n      throw error;\n    } else {\n      var _error$response4;\n      console.error('Error fetching analytics:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      throw error;\n    }\n  }\n};\n\n// Fetch counts of customers, jobs, and employees\nexport const fetchAnalyticsCounts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/analytics/counts`, getHeaders());\n    if (response.data.success) {\n      return response.data.data;\n    } else {\n      throw new Error('Failed to fetch analytics counts');\n    }\n  } catch (error) {\n    var _error$response5;\n    console.error('Error fetching analytics counts:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_BASE_URL","getHeaders","token","localStorage","getItem","headers","Authorization","fetchJobs","response","get","data","jobs","error","_error$response","console","message","fetchCustomers","customers","_error$response2","fetchEmployees","employees","_error$response3","fetchAnalytics","timeRange","customRange","params","start","end","startDate","endDate","Error","status","_error$response4","fetchAnalyticsCounts","success","_error$response5"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/api/dashboardApi.js"],"sourcesContent":["// frontend/src/api/dashboardApi.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\n// Function to retrieve headers with the Authorization token\r\nconst getHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n};\r\n\r\n// Fetch jobs\r\nexport const fetchJobs = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/jobs`, getHeaders());\r\n    return response.data.jobs; // Adjust based on backend response\r\n  } catch (error) {\r\n    console.error('Error fetching jobs:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch customers\r\nexport const fetchCustomers = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/customers`, getHeaders());\r\n    return response.data.customers; // Adjust based on backend response\r\n  } catch (error) {\r\n    console.error('Error fetching customers:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch employees\r\nexport const fetchEmployees = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/employees`, getHeaders());\r\n    return response.data.employees; // Adjust based on backend response\r\n  } catch (error) {\r\n    console.error('Error fetching employees:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch analytics data based on time range\r\nexport const fetchAnalytics = async (timeRange, customRange = null) => {\r\n  try {\r\n    let params = {};\r\n\r\n    if (timeRange === 'custom') {\r\n      if (customRange && customRange.start && customRange.end) {\r\n        params = { timeRange: 'custom', startDate: customRange.start, endDate: customRange.end };\r\n      } else {\r\n        throw new Error('Custom range requires startDate and endDate');\r\n      }\r\n    } else {\r\n      // Assume timeRange is a number representing days\r\n      params = { timeRange };\r\n    }\r\n\r\n    const response = await axios.get(`${API_URL}/analytics`, {\r\n      ...getHeaders(),\r\n      params,\r\n    });\r\n\r\n    return response.data.data; // Adjust based on backend response\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      console.error('Analytics endpoint not found:', error.response.data);\r\n      throw new Error('Analytics data not found. Please contact support.');\r\n    } else if (error.message === 'Custom range requires startDate and endDate') {\r\n      throw error;\r\n    } else {\r\n      console.error('Error fetching analytics:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Fetch counts of customers, jobs, and employees\r\nexport const fetchAnalyticsCounts = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/analytics/counts`, getHeaders());\r\n    if (response.data.success) {\r\n      return response.data.data;\r\n    } else {\r\n      throw new Error('Failed to fetch analytics counts');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching analytics counts:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}