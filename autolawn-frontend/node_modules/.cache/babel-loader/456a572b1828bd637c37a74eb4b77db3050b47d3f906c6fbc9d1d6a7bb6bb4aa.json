{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\RouteBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Droppable, Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { saveRoute, deleteRoute } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteBuilder = ({\n  customers,\n  setCustomers,\n  routes,\n  setRoutes,\n  setSuccessMessage\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const customersPerPage = 10;\n  const filteredCustomers = customers.filter(customer => customer.name.toLowerCase().includes(searchTerm.toLowerCase()) || customer.address && `${customer.address.street} ${customer.address.city} ${customer.address.state} ${customer.address.zipCode}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastCustomer = currentPage * customersPerPage;\n  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;\n  const currentCustomers = filteredCustomers.slice(indexOfFirstCustomer, indexOfLastCustomer);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const addNewRoute = () => {\n    const newRouteName = `Route ${routes.length + 1}`;\n    if (!routes.some(route => route.name === newRouteName)) {\n      setRoutes(prevRoutes => [...prevRoutes, {\n        _id: Date.now().toString(),\n        name: newRouteName,\n        customers: []\n      }]);\n    } else {\n      setSuccessMessage('A route with this name already exists.');\n    }\n  };\n  const handleDeleteRoute = async routeIndex => {\n    try {\n      const routeToDelete = routes[routeIndex];\n      await deleteRoute(routeToDelete._id);\n      setRoutes(prevRoutes => {\n        const newRoutes = prevRoutes.filter((_, index) => index !== routeIndex);\n        return newRoutes.map((route, index) => ({\n          ...route,\n          name: `Route ${index + 1}`\n        }));\n      });\n      setSuccessMessage('Route deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setSuccessMessage('Failed to delete route. Please try again.');\n    }\n  };\n  const handleSaveRoute = async route => {\n    try {\n      const savedRoute = await saveRoute(route);\n      setRoutes(prevRoutes => prevRoutes.map(r => r._id === route._id ? {\n        ...savedRoute,\n        isSaved: true\n      } : r));\n      setSuccessMessage('Route saved successfully!');\n    } catch (error) {\n      console.error('Error saving route:', error);\n      setSuccessMessage('Failed to save route. Please try again.');\n    }\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === 'customersList' && destination.droppableId.startsWith('route-')) {\n      moveCustomerToRoute(source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'customersList') {\n      moveCustomerToPool(parseInt(source.droppableId.split('-')[1]), source.index);\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\n      moveCustomerBetweenRoutes(parseInt(source.droppableId.split('-')[1]), source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\n    }\n  };\n  const moveCustomerToRoute = (customerIndex, routeIndex, destinationIndex) => {\n    const customer = currentCustomers[customerIndex];\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      if (!newRoutes[routeIndex].customers.some(c => c._id === customer._id)) {\n        newRoutes[routeIndex].customers.splice(destinationIndex, 0, customer);\n        setCustomers(prevCustomers => prevCustomers.filter(c => c._id !== customer._id));\n      }\n      return newRoutes;\n    });\n  };\n  const moveCustomerToPool = (routeIndex, customerIndex) => {\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      const [customer] = newRoutes[routeIndex].customers.splice(customerIndex, 1);\n      setCustomers(prevCustomers => [...prevCustomers, customer]);\n      return newRoutes;\n    });\n  };\n  const moveCustomerBetweenRoutes = (sourceRouteIndex, sourceIndex, destRouteIndex, destIndex) => {\n    setRoutes(prevRoutes => {\n      const newRoutes = [...prevRoutes];\n      const [customer] = newRoutes[sourceRouteIndex].customers.splice(sourceIndex, 1);\n      if (!newRoutes[destRouteIndex].customers.some(c => c._id === customer._id)) {\n        newRoutes[destRouteIndex].customers.splice(destIndex, 0, customer);\n      }\n      return newRoutes;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routes-list col-span-2 text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl text-white font-semibold mb-2\",\n          children: \"Routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4 hover:bg-blue-600\",\n          children: \"Add New Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), routes.map((route, routeIndex) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `route-${routeIndex}`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"bg-gray-100 p-4 rounded mb-4 min-h-[150px]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSaveRoute(route),\n                  className: `px-2 py-1 rounded mr-2 ${route.isSaved ? 'bg-green-500 text-white' : 'bg-blue-500 text-white hover:bg-blue-600'}`,\n                  children: route.isSaved ? 'Saved' : 'Save'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteRoute(routeIndex),\n                  className: \"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), route.customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `${route._id}-${customer._id}`,\n              index: index,\n              children: provided => {\n                var _customer$address, _customer$address2, _customer$address3, _customer$address4;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"bg-white p-2 mb-2 rounded shadow text-gray-800\",\n                  children: [customer.name, \" - \", (_customer$address = customer.address) === null || _customer$address === void 0 ? void 0 : _customer$address.street, \", \", (_customer$address2 = customer.address) === null || _customer$address2 === void 0 ? void 0 : _customer$address2.city, \", \", (_customer$address3 = customer.address) === null || _customer$address3 === void 0 ? void 0 : _customer$address3.state, \" \", (_customer$address4 = customer.address) === null || _customer$address4 === void 0 ? void 0 : _customer$address4.zipCode]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this);\n              }\n            }, `${route._id}-${customer._id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)\n        }, route._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customers-list text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl text-white font-semibold mb-2\",\n          children: \"Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search customers...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"w-full p-2 mb-4 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"customersList\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"bg-gray-100 p-4 rounded min-h-[300px] max-h-[500px] overflow-auto\",\n            children: [currentCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: customer._id,\n              index: index,\n              children: provided => {\n                var _customer$address5, _customer$address6, _customer$address7, _customer$address8;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"bg-white p-2 mb-2 rounded shadow\",\n                  children: [customer.name, \" - \", (_customer$address5 = customer.address) === null || _customer$address5 === void 0 ? void 0 : _customer$address5.street, \", \", (_customer$address6 = customer.address) === null || _customer$address6 === void 0 ? void 0 : _customer$address6.city, \", \", (_customer$address7 = customer.address) === null || _customer$address7 === void 0 ? void 0 : _customer$address7.state, \" \", (_customer$address8 = customer.address) === null || _customer$address8 === void 0 ? void 0 : _customer$address8.zipCode]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this);\n              }\n            }, customer._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-4\",\n          children: Array.from({\n            length: Math.ceil(filteredCustomers.length / customersPerPage)\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(i + 1),\n            className: `mx-1 px-3 py-1 rounded ${currentPage === i + 1 ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n            children: i + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteBuilder, \"dGgBH5XEzYJTVyBHEFzq+fSbN2M=\");\n_c = RouteBuilder;\nexport default RouteBuilder;\nvar _c;\n$RefreshReg$(_c, \"RouteBuilder\");","map":{"version":3,"names":["React","useState","Droppable","Draggable","DragDropContext","saveRoute","deleteRoute","jsxDEV","_jsxDEV","RouteBuilder","customers","setCustomers","routes","setRoutes","setSuccessMessage","_s","searchTerm","setSearchTerm","currentPage","setCurrentPage","customersPerPage","filteredCustomers","filter","customer","name","toLowerCase","includes","address","street","city","state","zipCode","indexOfLastCustomer","indexOfFirstCustomer","currentCustomers","slice","paginate","pageNumber","addNewRoute","newRouteName","length","some","route","prevRoutes","_id","Date","now","toString","handleDeleteRoute","routeIndex","routeToDelete","newRoutes","_","index","map","error","console","handleSaveRoute","savedRoute","r","isSaved","onDragEnd","result","source","destination","droppableId","startsWith","moveCustomerToRoute","parseInt","split","moveCustomerToPool","moveCustomerBetweenRoutes","customerIndex","destinationIndex","c","splice","prevCustomers","sourceRouteIndex","sourceIndex","destRouteIndex","destIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","provided","droppableProps","ref","innerRef","draggableId","_customer$address","_customer$address2","_customer$address3","_customer$address4","draggableProps","dragHandleProps","placeholder","type","value","onChange","e","target","_customer$address5","_customer$address6","_customer$address7","_customer$address8","Array","from","Math","ceil","i","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/RouteBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Droppable, Draggable, DragDropContext } from 'react-beautiful-dnd';\r\nimport { saveRoute, deleteRoute } from './api';\r\n\r\nconst RouteBuilder = ({ customers, setCustomers, routes, setRoutes, setSuccessMessage }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const customersPerPage = 10;\r\n\r\n  const filteredCustomers = customers.filter(customer =>\r\n    customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (customer.address && `${customer.address.street} ${customer.address.city} ${customer.address.state} ${customer.address.zipCode}`\r\n      .toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  const indexOfLastCustomer = currentPage * customersPerPage;\r\n  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;\r\n  const currentCustomers = filteredCustomers.slice(indexOfFirstCustomer, indexOfLastCustomer);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const addNewRoute = () => {\r\n    const newRouteName = `Route ${routes.length + 1}`;\r\n    if (!routes.some(route => route.name === newRouteName)) {\r\n      setRoutes(prevRoutes => [...prevRoutes, { _id: Date.now().toString(), name: newRouteName, customers: [] }]);\r\n    } else {\r\n      setSuccessMessage('A route with this name already exists.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoute = async (routeIndex) => {\r\n    try {\r\n      const routeToDelete = routes[routeIndex];\r\n      await deleteRoute(routeToDelete._id);\r\n\r\n      setRoutes(prevRoutes => {\r\n        const newRoutes = prevRoutes.filter((_, index) => index !== routeIndex);\r\n        return newRoutes.map((route, index) => ({\r\n          ...route,\r\n          name: `Route ${index + 1}`\r\n        }));\r\n      });\r\n      setSuccessMessage('Route deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setSuccessMessage('Failed to delete route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSaveRoute = async (route) => {\r\n    try {\r\n      const savedRoute = await saveRoute(route);\r\n      setRoutes(prevRoutes => prevRoutes.map(r =>\r\n        r._id === route._id ? { ...savedRoute, isSaved: true } : r\r\n      ));\r\n      setSuccessMessage('Route saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving route:', error);\r\n      setSuccessMessage('Failed to save route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (source.droppableId === 'customersList' && destination.droppableId.startsWith('route-')) {\r\n      moveCustomerToRoute(source.index, parseInt(destination.droppableId.split('-')[1]), destination.index);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId === 'customersList') {\r\n      moveCustomerToPool(parseInt(source.droppableId.split('-')[1]), source.index);\r\n    } else if (source.droppableId.startsWith('route-') && destination.droppableId.startsWith('route-')) {\r\n      moveCustomerBetweenRoutes(\r\n        parseInt(source.droppableId.split('-')[1]),\r\n        source.index,\r\n        parseInt(destination.droppableId.split('-')[1]),\r\n        destination.index\r\n      );\r\n    }\r\n  };\r\n\r\n  const moveCustomerToRoute = (customerIndex, routeIndex, destinationIndex) => {\r\n    const customer = currentCustomers[customerIndex];\r\n    setRoutes(prevRoutes => {\r\n      const newRoutes = [...prevRoutes];\r\n      if (!newRoutes[routeIndex].customers.some(c => c._id === customer._id)) {\r\n        newRoutes[routeIndex].customers.splice(destinationIndex, 0, customer);\r\n        setCustomers(prevCustomers => prevCustomers.filter(c => c._id !== customer._id));\r\n      }\r\n      return newRoutes;\r\n    });\r\n  };\r\n\r\n  const moveCustomerToPool = (routeIndex, customerIndex) => {\r\n    setRoutes(prevRoutes => {\r\n      const newRoutes = [...prevRoutes];\r\n      const [customer] = newRoutes[routeIndex].customers.splice(customerIndex, 1);\r\n      setCustomers(prevCustomers => [...prevCustomers, customer]);\r\n      return newRoutes;\r\n    });\r\n  };\r\n\r\n  const moveCustomerBetweenRoutes = (sourceRouteIndex, sourceIndex, destRouteIndex, destIndex) => {\r\n    setRoutes(prevRoutes => {\r\n      const newRoutes = [...prevRoutes];\r\n      const [customer] = newRoutes[sourceRouteIndex].customers.splice(sourceIndex, 1);\r\n      if (!newRoutes[destRouteIndex].customers.some(c => c._id === customer._id)) {\r\n        newRoutes[destRouteIndex].customers.splice(destIndex, 0, customer);\r\n      }\r\n      return newRoutes;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        <div className=\"routes-list col-span-2 text-gray-800\">\r\n          <h2 className=\"text-xl text-white font-semibold mb-2\">Routes</h2>\r\n          <button onClick={addNewRoute} className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4 hover:bg-blue-600\">\r\n            Add New Route\r\n          </button>\r\n          {routes.map((route, routeIndex) => (\r\n            <Droppable key={route._id} droppableId={`route-${routeIndex}`}>\r\n              {(provided) => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef} className=\"bg-gray-100 p-4 rounded mb-4 min-h-[150px]\">\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h3 className=\"font-semibold\">{route.name}</h3>\r\n                    <div>\r\n                      <button\r\n                        onClick={() => handleSaveRoute(route)}\r\n                        className={`px-2 py-1 rounded mr-2 ${\r\n                          route.isSaved\r\n                            ? 'bg-green-500 text-white'\r\n                            : 'bg-blue-500 text-white hover:bg-blue-600'\r\n                        }`}\r\n                      >\r\n                        {route.isSaved ? 'Saved' : 'Save'}\r\n                      </button>\r\n                      <button onClick={() => handleDeleteRoute(routeIndex)} className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\">\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {route.customers.map((customer, index) => (\r\n                    <Draggable key={`${route._id}-${customer._id}`} draggableId={`${route._id}-${customer._id}`} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"bg-white p-2 mb-2 rounded shadow text-gray-800\"\r\n                        >\r\n                          {customer.name} - {customer.address?.street}, {customer.address?.city}, {customer.address?.state} {customer.address?.zipCode}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n        <div className=\"customers-list text-gray-800\">\r\n          <h2 className=\"text-xl text-white font-semibold mb-2\">Customers</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search customers...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"w-full p-2 mb-4 rounded\"\r\n          />\r\n          <Droppable droppableId=\"customersList\">\r\n            {(provided) => (\r\n              <ul {...provided.droppableProps} ref={provided.innerRef} className=\"bg-gray-100 p-4 rounded min-h-[300px] max-h-[500px] overflow-auto\">\r\n                {currentCustomers.map((customer, index) => (\r\n                  <Draggable key={customer._id} draggableId={customer._id} index={index}>\r\n                    {(provided) => (\r\n                      <li\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className=\"bg-white p-2 mb-2 rounded shadow\"\r\n                      >\r\n                        {customer.name} - {customer.address?.street}, {customer.address?.city}, {customer.address?.state} {customer.address?.zipCode}\r\n                      </li>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n          <div className=\"flex justify-center mt-4\">\r\n            {Array.from({ length: Math.ceil(filteredCustomers.length / customersPerPage) }, (_, i) => (\r\n              <button\r\n                key={i}\r\n                onClick={() => paginate(i + 1)}\r\n                className={`mx-1 px-3 py-1 rounded ${currentPage === i + 1 ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n              >\r\n                {i + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default RouteBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}