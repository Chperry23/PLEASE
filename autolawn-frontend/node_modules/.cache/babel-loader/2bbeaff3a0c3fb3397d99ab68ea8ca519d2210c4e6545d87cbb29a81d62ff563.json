{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchRoutes, createRoute, optimizeRoute } from '../api';\nimport RouteBuilder from './RouteBuilder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadRoutes();\n  }, []);\n  const loadRoutes = async () => {\n    try {\n      const routesData = await fetchRoutes();\n      setRoutes(routesData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to load routes');\n      setLoading(false);\n    }\n  };\n  const handleCreateRoute = async () => {\n    try {\n      const newRoute = await createRoute({\n        name: `Route ${routes.length + 1}`\n      });\n      setRoutes([...routes, newRoute]);\n    } catch (err) {\n      setError('Failed to create route');\n    }\n  };\n  const handleOptimizeRoute = async routeId => {\n    try {\n      const optimizedRoute = await optimizeRoute(routeId);\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\n    } catch (err) {\n      setError('Failed to optimize route');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-routes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Build and Manage Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateRoute,\n      children: \"Create New Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/route-manager'),\n      children: \"Go to Route Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: route.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptimizeRoute(route._id),\n        children: \"Optimize Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, route._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(RouteBuilder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"LNK249yB0e++Vy4VlqV4LEXKuyU=\", false, function () {\n  return [useNavigate];\n});\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","fetchRoutes","createRoute","optimizeRoute","RouteBuilder","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","loading","setLoading","error","setError","navigate","loadRoutes","routesData","err","handleCreateRoute","newRoute","name","length","handleOptimizeRoute","routeId","optimizedRoute","map","route","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchRoutes, createRoute, optimizeRoute } from '../api';\r\nimport RouteBuilder from './RouteBuilder';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadRoutes();\r\n  }, []);\r\n\r\n  const loadRoutes = async () => {\r\n    try {\r\n      const routesData = await fetchRoutes();\r\n      setRoutes(routesData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to load routes');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateRoute = async () => {\r\n    try {\r\n      const newRoute = await createRoute({ name: `Route ${routes.length + 1}` });\r\n      setRoutes([...routes, newRoute]);\r\n    } catch (err) {\r\n      setError('Failed to create route');\r\n    }\r\n  };\r\n\r\n  const handleOptimizeRoute = async (routeId) => {\r\n    try {\r\n      const optimizedRoute = await optimizeRoute(routeId);\r\n      setRoutes(routes.map(route => route._id === routeId ? optimizedRoute : route));\r\n    } catch (err) {\r\n      setError('Failed to optimize route');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"build-routes\">\r\n      <h1>Build and Manage Routes</h1>\r\n      <button onClick={handleCreateRoute}>Create New Route</button>\r\n      <button onClick={() => navigate('/route-manager')}>Go to Route Manager</button>\r\n      {routes.map(route => (\r\n        <div key={route._id}>\r\n          <h2>{route.name}</h2>\r\n          <button onClick={() => handleOptimizeRoute(route._id)}>Optimize Route</button>\r\n        </div>\r\n      ))}\r\n      <RouteBuilder />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}