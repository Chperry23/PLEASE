{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst getHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('token')}`\n});\nexport const fetchCustomers = async () => {\n  const response = await axios.get(`${API_BASE_URL}/customers`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchRoutes = async () => {\n  const response = await axios.get(`${API_BASE_URL}/routes`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const fetchJobs = async () => {\n  const response = await axios.get(`${API_BASE_URL}/jobs`, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const saveRoute = async route => {\n  const response = await axios.post(`${API_BASE_URL}/routes`, route, {\n    headers: getHeaders()\n  });\n  return response.data;\n};\nexport const deleteRoute = async routeId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/routes/${routeId}`, {\n      headers: getHeaders()\n    });\n  } catch (error) {\n    console.error('Error deleting route:', error);\n    throw error;\n  }\n};\nexport const fetchCalendarEvents = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/calendar-events`, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching calendar events:', error);\n    throw error;\n  }\n};\nexport const createCalendarEvent = async eventData => {\n  try {\n    console.log('Creating calendar event with data:', eventData);\n    const response = await axios.post(`${API_BASE_URL}/calendar-events`, eventData, {\n      headers: getHeaders()\n    });\n    console.log('Calendar event created successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error creating calendar event:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const updateCalendarEvent = async (eventId, eventData) => {\n  try {\n    console.log('Updating calendar event:', eventId, 'with data:', eventData);\n    const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventId}`, eventData, {\n      headers: getHeaders()\n    });\n    console.log('Calendar event updated successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error updating calendar event:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const deleteCalendarEvent = async eventId => {\n  try {\n    console.log('Deleting calendar event:', eventId);\n    const response = await axios.delete(`${API_BASE_URL}/calendar-events/${eventId}`, {\n      headers: getHeaders()\n    });\n    console.log('Calendar event deleted successfully');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Error deleting calendar event:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const saveSchedule = async (routeId, schedule) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, schedule, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error saving schedule:', error);\n    throw error;\n  }\n};\nexport const updateRoute = async (routeId, updatedData) => {\n  try {\n    console.log('Updating route:', routeId, 'with data:', updatedData);\n    console.log('Full URL:', `${API_BASE_URL}/routes/${routeId}`);\n    console.log('Headers:', getHeaders());\n    const response = await axios.put(`${API_BASE_URL}/routes/${routeId}`, updatedData, {\n      headers: getHeaders()\n    });\n    console.log('Route update response:', response.data);\n\n    // If the route has scheduled dates, update or create a calendar event\n    if (updatedData.scheduledDate && updatedData.scheduledEndDate) {\n      const eventData = {\n        title: updatedData.name,\n        start: updatedData.scheduledDate,\n        end: updatedData.scheduledEndDate,\n        extendedProps: {\n          type: 'route',\n          routeId: routeId\n        }\n      };\n      await createOrUpdateCalendarEvent(eventData);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('Error updating route:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    console.error('Full error object:', error);\n    throw error;\n  }\n};\nexport const updateJob = async (jobId, updatedData) => {\n  try {\n    console.log('Updating job:', jobId, 'with data:', updatedData);\n    const response = await axios.put(`${API_BASE_URL}/jobs/${jobId}`, updatedData, {\n      headers: getHeaders()\n    });\n    console.log('Job update response:', response.data);\n\n    // If the job has scheduled dates, update or create a calendar event\n    if (updatedData.scheduledDate && updatedData.scheduledEndDate) {\n      const eventData = {\n        title: updatedData.title,\n        start: updatedData.scheduledDate,\n        end: updatedData.scheduledEndDate,\n        extendedProps: {\n          type: 'job',\n          jobId: jobId\n        }\n      };\n      await createOrUpdateCalendarEvent(eventData);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error('Error updating job:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\nconst createOrUpdateCalendarEvent = async eventData => {\n  try {\n    const existingEvents = await fetchCalendarEvents();\n    const existingEvent = existingEvents.find(event => event.extendedProps.jobId === eventData.extendedProps.jobId || event.extendedProps.routeId === eventData.extendedProps.routeId);\n    if (existingEvent) {\n      await updateCalendarEvent(existingEvent._id, eventData);\n    } else {\n      await createCalendarEvent(eventData);\n    }\n  } catch (error) {\n    console.error('Error creating or updating calendar event:', error);\n    throw error;\n  }\n};\nexport const scheduleRoute = async (routeId, scheduleData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, scheduleData, {\n      headers: getHeaders()\n    });\n    console.log('Route schedule response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Error scheduling route:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const calculateRouteTotal = async routeId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/routes/${routeId}/total`, {\n      headers: getHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error calculating route total:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getHeaders","Authorization","localStorage","getItem","fetchCustomers","response","get","headers","data","fetchRoutes","fetchJobs","saveRoute","route","post","deleteRoute","routeId","delete","error","console","fetchCalendarEvents","createCalendarEvent","eventData","log","_error$response","message","updateCalendarEvent","eventId","put","_error$response2","deleteCalendarEvent","_error$response3","saveSchedule","schedule","updateRoute","updatedData","scheduledDate","scheduledEndDate","title","name","start","end","extendedProps","type","createOrUpdateCalendarEvent","_error$response4","updateJob","jobId","_error$response5","existingEvents","existingEvent","find","event","_id","scheduleRoute","scheduleData","_error$response6","calculateRouteTotal"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst getHeaders = () => ({ Authorization: `Bearer ${localStorage.getItem('token')}` });\r\n\r\nexport const fetchCustomers = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/customers`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchRoutes = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/routes`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchJobs = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/jobs`, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const saveRoute = async (route) => {\r\n  const response = await axios.post(`${API_BASE_URL}/routes`, route, { headers: getHeaders() });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteRoute = async (routeId) => {\r\n  try {\r\n    await axios.delete(`${API_BASE_URL}/routes/${routeId}`, { headers: getHeaders() });\r\n  } catch (error) {\r\n    console.error('Error deleting route:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCalendarEvents = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/calendar-events`, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching calendar events:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createCalendarEvent = async (eventData) => {\r\n  try {\r\n    console.log('Creating calendar event with data:', eventData);\r\n    const response = await axios.post(`${API_BASE_URL}/calendar-events`, eventData, { headers: getHeaders() });\r\n    console.log('Calendar event created successfully:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating calendar event:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateCalendarEvent = async (eventId, eventData) => {\r\n  try {\r\n    console.log('Updating calendar event:', eventId, 'with data:', eventData);\r\n    const response = await axios.put(`${API_BASE_URL}/calendar-events/${eventId}`, eventData, { headers: getHeaders() });\r\n    console.log('Calendar event updated successfully:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating calendar event:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteCalendarEvent = async (eventId) => {\r\n  try {\r\n    console.log('Deleting calendar event:', eventId);\r\n    const response = await axios.delete(`${API_BASE_URL}/calendar-events/${eventId}`, { headers: getHeaders() });\r\n    console.log('Calendar event deleted successfully');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error deleting calendar event:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveSchedule = async (routeId, schedule) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, schedule, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error saving schedule:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateRoute = async (routeId, updatedData) => {\r\n  try {\r\n    console.log('Updating route:', routeId, 'with data:', updatedData);\r\n    console.log('Full URL:', `${API_BASE_URL}/routes/${routeId}`);\r\n    console.log('Headers:', getHeaders());\r\n    const response = await axios.put(`${API_BASE_URL}/routes/${routeId}`, updatedData, { headers: getHeaders() });\r\n    console.log('Route update response:', response.data);\r\n    \r\n    // If the route has scheduled dates, update or create a calendar event\r\n    if (updatedData.scheduledDate && updatedData.scheduledEndDate) {\r\n      const eventData = {\r\n        title: updatedData.name,\r\n        start: updatedData.scheduledDate,\r\n        end: updatedData.scheduledEndDate,\r\n        extendedProps: { type: 'route', routeId: routeId }\r\n      };\r\n      await createOrUpdateCalendarEvent(eventData);\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating route:', error.response?.data || error.message);\r\n    console.error('Full error object:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateJob = async (jobId, updatedData) => {\r\n  try {\r\n    console.log('Updating job:', jobId, 'with data:', updatedData);\r\n    const response = await axios.put(`${API_BASE_URL}/jobs/${jobId}`, updatedData, { headers: getHeaders() });\r\n    console.log('Job update response:', response.data);\r\n    \r\n    // If the job has scheduled dates, update or create a calendar event\r\n    if (updatedData.scheduledDate && updatedData.scheduledEndDate) {\r\n      const eventData = {\r\n        title: updatedData.title,\r\n        start: updatedData.scheduledDate,\r\n        end: updatedData.scheduledEndDate,\r\n        extendedProps: { type: 'job', jobId: jobId }\r\n      };\r\n      await createOrUpdateCalendarEvent(eventData);\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating job:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createOrUpdateCalendarEvent = async (eventData) => {\r\n  try {\r\n    const existingEvents = await fetchCalendarEvents();\r\n    const existingEvent = existingEvents.find(event => \r\n      (event.extendedProps.jobId === eventData.extendedProps.jobId) ||\r\n      (event.extendedProps.routeId === eventData.extendedProps.routeId)\r\n    );\r\n\r\n    if (existingEvent) {\r\n      await updateCalendarEvent(existingEvent._id, eventData);\r\n    } else {\r\n      await createCalendarEvent(eventData);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error creating or updating calendar event:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const scheduleRoute = async (routeId, scheduleData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/routes/${routeId}/schedule`, scheduleData, { headers: getHeaders() });\r\n    console.log('Route schedule response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error scheduling route:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const calculateRouteTotal = async (routeId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/routes/${routeId}/total`, { headers: getHeaders() });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error calculating route total:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}