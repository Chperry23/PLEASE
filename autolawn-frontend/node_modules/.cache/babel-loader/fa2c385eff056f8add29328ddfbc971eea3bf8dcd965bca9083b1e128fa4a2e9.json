{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\pages\\\\BuildRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon, PlusIcon, TrashIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { API_BASE_URL, DAYS_OF_WEEK, defaultRoutes, validateRoutesStructure, fetchWithAuth } from '../components/utils';\nimport Header from '../components/Header';\nimport debounce from 'lodash/debounce';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildRoutes = () => {\n  _s();\n  const [routes, setRoutes] = useState(defaultRoutes);\n  const [jobPool, setJobPool] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({\n    start: 0,\n    end: 3\n  });\n  const [expandedJobs, setExpandedJobs] = useState({});\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [crews, setCrews] = useState([]);\n  const initializeData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [fetchedRoutesResponse, fetchedJobsResponse, fetchedEmployeesResponse, fetchedCrewsResponse] = await Promise.all([fetchWithAuth('/routes'), fetchWithAuth('/routes/jobs/available'), fetchWithAuth('/employees'), fetchWithAuth('/crews')]);\n      const fetchedRoutes = (fetchedRoutesResponse === null || fetchedRoutesResponse === void 0 ? void 0 : fetchedRoutesResponse.routes) || defaultRoutes;\n      let fetchedJobs = fetchedJobsResponse || [];\n      const fetchedEmployees = fetchedEmployeesResponse || [];\n      const fetchedCrews = fetchedCrewsResponse || [];\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\n\n      // Filter bi-weekly jobs based on last service date\n      const now = new Date();\n      fetchedJobs = fetchedJobs.filter(job => {\n        if (job.recurrencePattern === 'Bi-weekly' && job.lastServiceDate) {\n          const lastServiceDate = new Date(job.lastServiceDate);\n          const daysSinceLastService = (now - lastServiceDate) / (1000 * 60 * 60 * 24); // Days since last service\n          return daysSinceLastService > 7; // Only include jobs where last service was more than 7 days ago\n        }\n        return true;\n      });\n      setRoutes(validatedRoutes);\n      setJobPool(fetchedJobs);\n      setEmployees(fetchedEmployees);\n      setCrews(fetchedCrews);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\n    setSaving(true);\n    try {\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\n        acc[day] = dayRoutes.map(route => {\n          var _route$employee, _route$crew;\n          return {\n            index: route.index,\n            jobs: route.jobs.map(job => typeof job === 'string' ? job : job._id),\n            employee: (_route$employee = route.employee) === null || _route$employee === void 0 ? void 0 : _route$employee._id,\n            crew: (_route$crew = route.crew) === null || _route$crew === void 0 ? void 0 : _route$crew._id\n          };\n        });\n        return acc;\n      }, {});\n      await fetchWithAuth('/routes', 'PUT', {\n        routes: routesToSave\n      });\n      console.log('Routes saved successfully:', routesToSave);\n    } catch (err) {\n      console.error('Error saving routes:', err);\n      setError('Failed to save routes. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  }, [routes]);\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      console.log(\"Drag operation cancelled or no destination found.\");\n      return;\n    }\n    setRoutes(prevRoutes => {\n      const updatedRoutes = {\n        ...prevRoutes\n      };\n      const sourceId = source.droppableId.split('-');\n      const destId = destination.droppableId.split('-');\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\n\n      // Moving from job pool to a route\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\n        const selectedJobsToMove = selectedJobs.length > 0 ? jobPool.filter(job => selectedJobs.includes(job._id)) : [jobPool[source.index]]; // Only the single dragged job\n\n        // Add jobs to the route\n        selectedJobsToMove.forEach((job, index) => {\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\n        });\n\n        // Remove moved jobs from job pool\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\n        if (selectedJobs.length === 0) {\n          updatedJobPool.splice(source.index, 1);\n        }\n        setJobPool(updatedJobPool);\n      }\n\n      // Moving between routes or within the same route\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\n        selectedJobs.forEach((jobId, index) => {\n          // Find job in the source route\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\n\n          // Add job to destination route\n          if (removedJob) {\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\n          }\n        });\n      }\n      setSelectedJobs([]); // Clear selected jobs after moving\n      return updatedRoutes;\n    });\n    debouncedSaveRoutes();\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\n  const addNewRoute = useCallback(async () => {\n    const newRouteState = {\n      ...routes,\n      [selectedDay]: [...routes[selectedDay], {\n        index: routes[selectedDay].length,\n        jobs: []\n      }]\n    };\n    setRoutes(newRouteState);\n    await saveRoutes(newRouteState);\n  }, [routes, selectedDay, saveRoutes]);\n  const deleteRoute = useCallback(async routeIndex => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\n          ...route,\n          index: idx\n        }));\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\n    } catch (error) {\n      console.error('Error deleting route:', error);\n      setError('Failed to delete route. Please try again.');\n    }\n  }, [selectedDay, saveRoutes]);\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\n    try {\n      setRoutes(prevRoutes => {\n        const updatedRoutes = {\n          ...prevRoutes\n        };\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\n        return updatedRoutes;\n      });\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\n        index: routeIndex,\n        jobs: routes[selectedDay][routeIndex].jobs\n      });\n      await saveRoutes();\n    } catch (error) {\n      console.error('Error removing job from route:', error);\n      setError('Failed to remove job from route. Please try again.');\n    }\n  };\n  const handleJobSelection = job => {\n    setSelectedJobs(prevSelectedJobs => {\n      if (prevSelectedJobs.includes(job._id)) {\n        return prevSelectedJobs.filter(id => id !== job._id);\n      } else {\n        return [...prevSelectedJobs, job._id];\n      }\n    });\n  };\n  const toggleJobExpansion = jobId => {\n    setExpandedJobs(prev => ({\n      ...prev,\n      [jobId]: !prev[jobId]\n    }));\n  };\n  const changeSelectedDay = direction => {\n    setSelectedDay(prevDay => {\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\n      return DAYS_OF_WEEK[newIndex];\n    });\n    setVisibleRoutesRange({\n      start: 0,\n      end: 3\n    });\n  };\n  const cycleVisibleRoutes = direction => {\n    setVisibleRoutesRange(prevRange => {\n      const totalRoutes = routes[selectedDay].length;\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\n      const newEnd = Math.min(newStart + 3, totalRoutes);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\n    var _job$customer, _job$location;\n    if (!job) return null;\n    const isExpanded = expandedJobs[job._id];\n    const customerName = ((_job$customer = job.customer) === null || _job$customer === void 0 ? void 0 : _job$customer.name) || 'No Customer';\n    const isSelected = selectedJobs.includes(job._id);\n    const jobColors = {\n      oneTime: 'bg-green-600 hover:bg-green-700',\n      weekly: 'bg-blue-600 hover:bg-blue-700',\n      biWeekly: 'bg-yellow-600 hover:bg-yellow-700',\n      monthly: 'bg-purple-600 hover:bg-purple-700'\n    };\n    const jobStyle = {\n      backgroundColor: job.isRecurring ? job.recurrencePattern === 'Weekly' ? jobColors.weekly : job.recurrencePattern === 'Bi-weekly' ? jobColors.biWeekly : job.recurrencePattern === 'Monthly' ? jobColors.monthly : jobColors.recurring : jobColors.oneTime,\n      border: isSelected ? '2px solid yellow' : 'none'\n    };\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'No Service Date';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`,\n      style: {\n        border: jobStyle.border\n      },\n      onClick: () => handleJobSelection(job),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-white\",\n          children: customerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [isInRoute && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeJobFromRoute(routeIndex, jobIndex);\n            },\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleJobExpansion(job._id);\n            },\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: job.title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.address) || 'No Address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Revenue: $\", job.cost || 'No Price']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Type: \", job.isRecurring ? 'Recurring' : 'One-time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: [\"Last Service Date: \", lastServiceDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\n    const routeIndex = parseInt(id.split('-')[1], 10);\n    const route = routes[selectedDay][routeIndex];\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: `bg-gray-800 p-4 rounded-lg min-h-[200px] ${isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'}`,\n        children: [!isJobPool && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full p-2 bg-gray-700 text-white rounded\",\n            onChange: e => assignRoute(routeIndex, e.target.value),\n            value: route.employee ? `employee-${route.employee._id}` : route.crew ? `crew-${route.crew._id}` : '',\n            disabled: assigningRoutes[routeIndex],\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Assign to...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Employees\",\n              children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `employee-${employee._id}`,\n                children: employee.name\n              }, employee._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Crews\",\n              children: crews.map(crew => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `crew-${crew._id}`,\n                children: crew.name\n              }, crew._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), assigningRoutes[routeIndex] ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-400\",\n            children: \"Assigning...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-400\",\n            children: route.employee ? `Assigned to: ${route.employee.name}` : route.crew ? `Assigned to crew: ${route.crew.name}` : 'Not assigned'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this), jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: job._id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: renderJobCard(job, !isJobPool, routeIndex, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 21\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-center\",\n          children: \"No jobs available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  };\n  const renderLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 p-4 bg-gray-800 rounded-lg text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"Job Color Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-green-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), \" One-time job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-blue-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), \" Weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-yellow-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), \" Bi-weekly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-4 h-4 inline-block bg-purple-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), \" Monthly recurring job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\",\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSelectedDay(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(-1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewRoute,\n          className: \"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cycleVisibleRoutes(1),\n          className: \"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: routes[selectedDay].slice(visibleRoutesRange.start, visibleRoutesRange.end).map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: [\"Route \", route.index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteRoute(route.index),\n                className: \"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"w-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this), renderDroppableArea(`route-${route.index}`, route.jobs)]\n          }, route.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 flex justify-between items-center\",\n            children: [\"Job Pool\", selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJobs([]),\n              className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mb-2\",\n            children: \"Click on jobs to select multiple, then drag to a route.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), renderDroppableArea('jobPool-0', jobPool, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), renderLegend(), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#ffffff\",\n          loading: saving,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mt-4\",\n          children: \"Saving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildRoutes, \"LfuitYkxD3tPOfdr1Jcjeeni9h8=\");\n_c = BuildRoutes;\nexport default BuildRoutes;\nvar _c;\n$RefreshReg$(_c, \"BuildRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChevronLeftIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChevronDownIcon","ChevronUpIcon","DragDropContext","Droppable","Draggable","API_BASE_URL","DAYS_OF_WEEK","defaultRoutes","validateRoutesStructure","fetchWithAuth","Header","debounce","ClipLoader","jsxDEV","_jsxDEV","BuildRoutes","_s","routes","setRoutes","jobPool","setJobPool","selectedDay","setSelectedDay","loading","setLoading","saving","setSaving","error","setError","visibleRoutesRange","setVisibleRoutesRange","start","end","expandedJobs","setExpandedJobs","selectedJobs","setSelectedJobs","employees","setEmployees","crews","setCrews","initializeData","fetchedRoutesResponse","fetchedJobsResponse","fetchedEmployeesResponse","fetchedCrewsResponse","Promise","all","fetchedRoutes","fetchedJobs","fetchedEmployees","fetchedCrews","validatedRoutes","now","Date","filter","job","recurrencePattern","lastServiceDate","daysSinceLastService","err","console","saveRoutes","updatedRoutes","routesToSave","Object","entries","reduce","acc","day","dayRoutes","map","route","_route$employee","_route$crew","index","jobs","_id","employee","crew","log","debouncedSaveRoutes","onDragEnd","result","source","destination","prevRoutes","sourceId","droppableId","split","destId","sourceRouteIndex","parseInt","destRouteIndex","selectedJobsToMove","length","includes","forEach","splice","updatedJobPool","jobId","jobIndex","findIndex","removedJob","addNewRoute","newRouteState","deleteRoute","routeIndex","deletedRoute","prevJobPool","idx","removeJobFromRoute","handleJobSelection","prevSelectedJobs","id","toggleJobExpansion","prev","changeSelectedDay","direction","prevDay","currentIndex","indexOf","newIndex","cycleVisibleRoutes","prevRange","totalRoutes","newStart","newEnd","Math","min","renderJobCard","isInRoute","_job$customer","_job$location","isExpanded","customerName","customer","name","isSelected","jobColors","oneTime","weekly","biWeekly","monthly","jobStyle","backgroundColor","isRecurring","recurring","border","toLocaleDateString","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","title","location","address","cost","renderDroppableArea","isJobPool","provided","ref","innerRef","droppableProps","onChange","assignRoute","target","value","disabled","assigningRoutes","label","draggableId","draggableProps","dragHandleProps","placeholder","renderLegend","window","reload","slice","color","size","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/pages/BuildRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  API_BASE_URL,\r\n  DAYS_OF_WEEK,\r\n  defaultRoutes,\r\n  validateRoutesStructure,\r\n  fetchWithAuth,\r\n} from '../components/utils';\r\nimport Header from '../components/Header';\r\nimport debounce from 'lodash/debounce';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst BuildRoutes = () => {\r\n  const [routes, setRoutes] = useState(defaultRoutes);\r\n  const [jobPool, setJobPool] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [visibleRoutesRange, setVisibleRoutesRange] = useState({ start: 0, end: 3 });\r\n  const [expandedJobs, setExpandedJobs] = useState({});\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [crews, setCrews] = useState([]);\r\n\r\n  const initializeData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [\r\n        fetchedRoutesResponse,\r\n        fetchedJobsResponse,\r\n        fetchedEmployeesResponse,\r\n        fetchedCrewsResponse,\r\n      ] = await Promise.all([\r\n        fetchWithAuth('/routes'),\r\n        fetchWithAuth('/routes/jobs/available'),\r\n        fetchWithAuth('/employees'),\r\n        fetchWithAuth('/crews'),\r\n      ]);\r\n\r\n      const fetchedRoutes = fetchedRoutesResponse?.routes || defaultRoutes;\r\n      let fetchedJobs = fetchedJobsResponse || [];\r\n      const fetchedEmployees = fetchedEmployeesResponse || [];\r\n      const fetchedCrews = fetchedCrewsResponse || [];\r\n\r\n      const validatedRoutes = validateRoutesStructure(fetchedRoutes);\r\n\r\n      // Filter bi-weekly jobs based on last service date\r\n      const now = new Date();\r\n      fetchedJobs = fetchedJobs.filter((job) => {\r\n        if (job.recurrencePattern === 'Bi-weekly' && job.lastServiceDate) {\r\n          const lastServiceDate = new Date(job.lastServiceDate);\r\n          const daysSinceLastService = (now - lastServiceDate) / (1000 * 60 * 60 * 24); // Days since last service\r\n          return daysSinceLastService > 7; // Only include jobs where last service was more than 7 days ago\r\n        }\r\n        return true;\r\n      });\r\n\r\n      setRoutes(validatedRoutes);\r\n      setJobPool(fetchedJobs);\r\n      setEmployees(fetchedEmployees);\r\n      setCrews(fetchedCrews);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError('Failed to load routes, jobs, employees, and crews. Please refresh the page.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeData();\r\n  }, [initializeData]);\r\n\r\n  const saveRoutes = useCallback(async (updatedRoutes = routes) => {\r\n    setSaving(true);\r\n    try {\r\n      const routesToSave = Object.entries(updatedRoutes).reduce((acc, [day, dayRoutes]) => {\r\n        acc[day] = dayRoutes.map(route => ({\r\n          index: route.index,\r\n          jobs: route.jobs.map(job => (typeof job === 'string' ? job : job._id)),\r\n          employee: route.employee?._id,\r\n          crew: route.crew?._id,\r\n        }));\r\n        return acc;\r\n      }, {});\r\n  \r\n      await fetchWithAuth('/routes', 'PUT', { routes: routesToSave });\r\n      console.log('Routes saved successfully:', routesToSave);\r\n    } catch (err) {\r\n      console.error('Error saving routes:', err);\r\n      setError('Failed to save routes. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [routes]);\r\n\r\n  const debouncedSaveRoutes = useCallback(debounce(saveRoutes, 1000), [saveRoutes]);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    const { source, destination } = result;\r\n  \r\n    if (!destination) {\r\n      console.log(\"Drag operation cancelled or no destination found.\");\r\n      return;\r\n    }\r\n  \r\n    setRoutes((prevRoutes) => {\r\n      const updatedRoutes = { ...prevRoutes };\r\n      const sourceId = source.droppableId.split('-');\r\n      const destId = destination.droppableId.split('-');\r\n  \r\n      const sourceRouteIndex = sourceId[0] === 'route' ? parseInt(sourceId[1], 10) : null;\r\n      const destRouteIndex = destId[0] === 'route' ? parseInt(destId[1], 10) : null;\r\n  \r\n      // Moving from job pool to a route\r\n      if (source.droppableId === 'jobPool-0' && destRouteIndex !== null) {\r\n        const selectedJobsToMove = selectedJobs.length > 0 \r\n          ? jobPool.filter(job => selectedJobs.includes(job._id)) \r\n          : [jobPool[source.index]];  // Only the single dragged job\r\n  \r\n        // Add jobs to the route\r\n        selectedJobsToMove.forEach((job, index) => {\r\n          updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index + index, 0, job);\r\n        });\r\n  \r\n        // Remove moved jobs from job pool\r\n        const updatedJobPool = jobPool.filter(job => !selectedJobs.includes(job._id));\r\n        if (selectedJobs.length === 0) {\r\n          updatedJobPool.splice(source.index, 1);\r\n        }\r\n        setJobPool(updatedJobPool);\r\n      }\r\n  \r\n      // Moving between routes or within the same route\r\n      if (sourceRouteIndex !== null && destRouteIndex !== null) {\r\n        selectedJobs.forEach((jobId, index) => {\r\n          // Find job in the source route\r\n          const jobIndex = updatedRoutes[selectedDay][sourceRouteIndex].jobs.findIndex(job => job._id === jobId);\r\n          const [removedJob] = updatedRoutes[selectedDay][sourceRouteIndex].jobs.splice(jobIndex, 1);\r\n  \r\n          // Add job to destination route\r\n          if (removedJob) {\r\n            updatedRoutes[selectedDay][destRouteIndex].jobs.splice(destination.index, 0, removedJob);\r\n          }\r\n        });\r\n      }\r\n  \r\n      setSelectedJobs([]); // Clear selected jobs after moving\r\n      return updatedRoutes;\r\n    });\r\n\r\n    debouncedSaveRoutes();\r\n  }, [jobPool, selectedJobs, selectedDay, debouncedSaveRoutes]);\r\n\r\n  const addNewRoute = useCallback(async () => {\r\n    const newRouteState = {\r\n      ...routes,\r\n      [selectedDay]: [\r\n        ...routes[selectedDay],\r\n        { index: routes[selectedDay].length, jobs: [] },\r\n      ],\r\n    };\r\n    setRoutes(newRouteState);\r\n    await saveRoutes(newRouteState);\r\n  }, [routes, selectedDay, saveRoutes]);\r\n\r\n  const deleteRoute = useCallback(async (routeIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const deletedRoute = updatedRoutes[selectedDay].splice(routeIndex, 1)[0];\r\n        \r\n        setJobPool(prevJobPool => [...prevJobPool, ...deletedRoute.jobs]);\r\n        \r\n        updatedRoutes[selectedDay] = updatedRoutes[selectedDay].map((route, idx) => ({\r\n          ...route,\r\n          index: idx,\r\n        }));\r\n        \r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'DELETE');\r\n  \r\n      await saveRoutes(); // Ensure routes are saved to keep consistent state\r\n    } catch (error) {\r\n      console.error('Error deleting route:', error);\r\n      setError('Failed to delete route. Please try again.');\r\n    }\r\n  }, [selectedDay, saveRoutes]);\r\n\r\n  const removeJobFromRoute = async (routeIndex, jobIndex) => {\r\n    try {\r\n      setRoutes(prevRoutes => {\r\n        const updatedRoutes = { ...prevRoutes };\r\n        const removedJob = updatedRoutes[selectedDay][routeIndex].jobs.splice(jobIndex, 1)[0];\r\n        setJobPool(prevJobPool => [...prevJobPool, removedJob]);\r\n        return updatedRoutes;\r\n      });\r\n  \r\n      await fetchWithAuth(`/routes/${selectedDay}/${routeIndex}`, 'PUT', {\r\n        index: routeIndex,\r\n        jobs: routes[selectedDay][routeIndex].jobs\r\n      });\r\n  \r\n      await saveRoutes();\r\n    } catch (error) {\r\n      console.error('Error removing job from route:', error);\r\n      setError('Failed to remove job from route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleJobSelection = (job) => {\r\n    setSelectedJobs(prevSelectedJobs => {\r\n      if (prevSelectedJobs.includes(job._id)) {\r\n        return prevSelectedJobs.filter(id => id !== job._id);\r\n      } else {\r\n        return [...prevSelectedJobs, job._id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleJobExpansion = (jobId) => {\r\n    setExpandedJobs((prev) => ({ ...prev, [jobId]: !prev[jobId] }));\r\n  };\r\n\r\n  const changeSelectedDay = (direction) => {\r\n    setSelectedDay((prevDay) => {\r\n      const currentIndex = DAYS_OF_WEEK.indexOf(prevDay);\r\n      const newIndex = (currentIndex + direction + DAYS_OF_WEEK.length) % DAYS_OF_WEEK.length;\r\n      return DAYS_OF_WEEK[newIndex];\r\n    });\r\n    setVisibleRoutesRange({ start: 0, end: 3 });\r\n  };\r\n\r\n  const cycleVisibleRoutes = (direction) => {\r\n    setVisibleRoutesRange((prevRange) => {\r\n      const totalRoutes = routes[selectedDay].length;\r\n      const newStart = (prevRange.start + direction + totalRoutes) % totalRoutes;\r\n      const newEnd = Math.min(newStart + 3, totalRoutes);\r\n      return { start: newStart, end: newEnd };\r\n    });\r\n  };\r\n\r\n  const renderJobCard = (job, isInRoute = false, routeIndex, jobIndex) => {\r\n    if (!job) return null;\r\n\r\n    const isExpanded = expandedJobs[job._id];\r\n    const customerName = job.customer?.name || 'No Customer';\r\n    const isSelected = selectedJobs.includes(job._id);\r\n\r\n    const jobColors = {\r\n      oneTime: 'bg-green-600 hover:bg-green-700',\r\n      weekly: 'bg-blue-600 hover:bg-blue-700',\r\n      biWeekly: 'bg-yellow-600 hover:bg-yellow-700',\r\n      monthly: 'bg-purple-600 hover:bg-purple-700',\r\n    };\r\n    \r\n    const jobStyle = {\r\n      backgroundColor: job.isRecurring \r\n        ? job.recurrencePattern === 'Weekly'\r\n          ? jobColors.weekly\r\n          : job.recurrencePattern === 'Bi-weekly'\r\n          ? jobColors.biWeekly\r\n          : job.recurrencePattern === 'Monthly'\r\n          ? jobColors.monthly\r\n          : jobColors.recurring\r\n        : jobColors.oneTime,\r\n      border: isSelected ? '2px solid yellow' : 'none',\r\n    };\r\n\r\n    const lastServiceDate = job.lastServiceDate ? new Date(job.lastServiceDate).toLocaleDateString() : 'No Service Date';\r\n\r\n    return (\r\n      <div\r\n        className={`p-2 rounded-md shadow-md ${jobStyle.backgroundColor}`}\r\n        style={{ border: jobStyle.border }}\r\n        onClick={() => handleJobSelection(job)}\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"font-bold text-white\">{customerName}</p>\r\n          <div className=\"flex items-center\">\r\n            {isInRoute && (\r\n              <button\r\n                onClick={(e) => { e.stopPropagation(); removeJobFromRoute(routeIndex, jobIndex); }}\r\n                className=\"text-red-500 hover:text-red-700 mr-2\"\r\n              >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            )}\r\n            <button onClick={(e) => { e.stopPropagation(); toggleJobExpansion(job._id); }}>\r\n              {isExpanded ? <ChevronUpIcon className=\"h-5 w-5\" /> : <ChevronDownIcon className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"mt-2\">\r\n            <p className=\"text-gray-300\">{job.title || 'No Title'}</p>\r\n            <p className=\"text-gray-400\">{job.location?.address || 'No Address'}</p>\r\n            <p className=\"text-gray-400\">Revenue: ${job.cost || 'No Price'}</p>\r\n            <p className=\"text-gray-400\">Type: {job.isRecurring ? 'Recurring' : 'One-time'}</p>\r\n            <p className=\"text-gray-400\">Last Service Date: {lastServiceDate}</p> {/* New last service date */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDroppableArea = (id, jobs, isJobPool = false) => {\r\n    const routeIndex = parseInt(id.split('-')[1], 10);\r\n    const route = routes[selectedDay][routeIndex];\r\n  \r\n    return (\r\n      <Droppable droppableId={id}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={`bg-gray-800 p-4 rounded-lg min-h-[200px] ${\r\n              isJobPool ? 'grid grid-cols-3 gap-4' : 'space-y-2'\r\n            }`}\r\n          >\r\n            {!isJobPool && (\r\n              <div className=\"mb-4\">\r\n                <select\r\n                  className=\"w-full p-2 bg-gray-700 text-white rounded\"\r\n                  onChange={(e) => assignRoute(routeIndex, e.target.value)}\r\n                  value={\r\n                    route.employee\r\n                      ? `employee-${route.employee._id}`\r\n                      : route.crew\r\n                      ? `crew-${route.crew._id}`\r\n                      : ''\r\n                  }\r\n                  disabled={assigningRoutes[routeIndex]}\r\n                >\r\n                  <option value=\"\">Assign to...</option>\r\n                  <optgroup label=\"Employees\">\r\n                    {employees.map((employee) => (\r\n                      <option key={employee._id} value={`employee-${employee._id}`}>\r\n                        {employee.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Crews\">\r\n                    {crews.map((crew) => (\r\n                      <option key={crew._id} value={`crew-${crew._id}`}>\r\n                        {crew.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  </select>\r\n                  {assigningRoutes[routeIndex] ? (\r\n                    <p className=\"mt-2 text-sm text-gray-400\">Assigning...</p>\r\n                  ) : (\r\n                    <p className=\"mt-2 text-sm text-gray-400\">\r\n                      {route.employee\r\n                        ? `Assigned to: ${route.employee.name}`\r\n                        : route.crew\r\n                        ? `Assigned to crew: ${route.crew.name}`\r\n                        : 'Not assigned'}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            {jobs.length > 0 ? (\r\n              jobs.map((job, index) => (\r\n                <Draggable key={job._id} draggableId={job._id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      {renderJobCard(job, !isJobPool, routeIndex, index)}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-white text-center\">No jobs available</p>\r\n            )}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  };\r\n\r\n  const renderLegend = () => (\r\n    <div className=\"mt-4 p-4 bg-gray-800 rounded-lg text-white\">\r\n      <h3 className=\"font-bold mb-2\">Job Color Legend</h3>\r\n      <ul className=\"space-y-1\">\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-green-600 mr-2\" /> One-time job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-blue-600 mr-2\" /> Weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-yellow-600 mr-2\" /> Bi-weekly recurring job\r\n        </li>\r\n        <li className=\"flex items-center\">\r\n          <span className=\"w-4 h-4 inline-block bg-purple-600 mr-2\" /> Monthly recurring job\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <p className=\"text-white text-xl\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex flex-col items-center justify-center space-y-4\">\r\n        <p className=\"text-red-500 text-xl\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n        >\r\n          Refresh Page\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <Header />\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => changeSelectedDay(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold\">{selectedDay}</h1>\r\n          <button\r\n            onClick={() => changeSelectedDay(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(-1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <button\r\n            onClick={addNewRoute}\r\n            className=\"px-4 py-2 bg-green-500 rounded-md hover:bg-green-600 transition flex items-center space-x-2\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Add Route</span>\r\n          </button>\r\n          <button\r\n            onClick={() => cycleVisibleRoutes(1)}\r\n            className=\"p-2 bg-blue-500 rounded-md hover:bg-blue-600 transition\"\r\n          >\r\n            <ChevronRightIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {routes[selectedDay]\r\n              .slice(visibleRoutesRange.start, visibleRoutesRange.end)\r\n              .map((route) => (\r\n                <div key={route.index} className=\"bg-gray-800 p-4 rounded-lg shadow-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Route {route.index + 1}</h2>\r\n                    <button\r\n                      onClick={() => deleteRoute(route.index)}\r\n                      className=\"p-2 bg-red-500 rounded-md hover:bg-red-600 transition\"\r\n                    >\r\n                      <TrashIcon className=\"w-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                  {renderDroppableArea(`route-${route.index}`, route.jobs)}\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\r\n              Job Pool\r\n              {selectedJobs.length > 0 && (\r\n                <button\r\n                  onClick={() => setSelectedJobs([])}\r\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\r\n                >\r\n                  Clear Selection\r\n                </button>\r\n              )}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-400 mb-2\">\r\n              Click on jobs to select multiple, then drag to a route.\r\n            </p>\r\n            {renderDroppableArea('jobPool-0', jobPool, true)}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {/* Legend for the job colors */}\r\n        {renderLegend()}\r\n\r\n        {saving && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\r\n            <ClipLoader color=\"#ffffff\" loading={saving} size={50} />\r\n            <p className=\"text-white mt-4\">Saving...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildRoutes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}