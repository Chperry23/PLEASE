{"ast":null,"code":"// frontend/src/api/dashboardApi.js\n\nimport axios from 'axios';\n\n// Base URL for API requests; use environment variables for flexibility\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n/**\r\n * Function to retrieve headers with the Authorization token\r\n * @returns {Object} - Headers object containing the Bearer token\r\n */\nconst getHeaders = () => {\n  const token = localStorage.getItem('token');\n  console.log('Using token:', token); // Remove or comment out in production\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\n/**\r\n * Fetch counts of customers, jobs, and employees\r\n * @returns {Promise<Object>} - Returns an object containing the counts\r\n */\nexport const fetchCounts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/analytics/counts`, getHeaders());\n    if (response.data.success) {\n      return response.data.data;\n    } else {\n      throw new Error('Failed to fetch counts');\n    }\n  } catch (error) {\n    var _error$response;\n    console.error('Error fetching counts:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_BASE_URL","getHeaders","token","localStorage","getItem","console","log","headers","Authorization","fetchCounts","response","get","data","success","Error","error","_error$response","message"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/api/dashboardApi.js"],"sourcesContent":["// frontend/src/api/dashboardApi.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Base URL for API requests; use environment variables for flexibility\r\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\n/**\r\n * Function to retrieve headers with the Authorization token\r\n * @returns {Object} - Headers object containing the Bearer token\r\n */\r\nconst getHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Using token:', token); // Remove or comment out in production\r\n  return {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n};\r\n\r\n/**\r\n * Fetch counts of customers, jobs, and employees\r\n * @returns {Promise<Object>} - Returns an object containing the counts\r\n */\r\nexport const fetchCounts = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/analytics/counts`, getHeaders());\r\n    if (response.data.success) {\r\n      return response.data.data;\r\n    } else {\r\n      throw new Error('Failed to fetch counts');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching counts:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;;AAEjF;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,KAAK,CAAC,CAAC,CAAC;EACpC,OAAO;IACLK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,mBAAmB,EAAEI,UAAU,CAAC,CAAC,CAAC;IAC7E,IAAIS,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzB,OAAOH,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC3B,CAAC,MAAM;MACL,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdX,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,KAAIG,KAAK,CAACE,OAAO,CAAC;IAC9E,MAAMF,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}