{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTOLAWN\\\\autolawn-frontend\\\\src\\\\components\\\\ProfileTabs\\\\PlanDetails.js\",\n  _s = $RefreshSig$();\n// src/components/ProfileTabs/PlanDetails.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanDetails = () => {\n  _s();\n  const [plans, setPlans] = useState([]);\n  const [loadingPlanId, setLoadingPlanId] = useState(null);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  useEffect(() => {\n    const fetchPlans = async () => {\n      try {\n        const response = await axiosInstance.get('/api/payment/prices');\n        setPlans(response.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching plans:', error);\n        setMessage({\n          type: 'error',\n          text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch plans.'\n        });\n      }\n    };\n    fetchPlans();\n  }, []);\n  const handleSelectPlan = async planId => {\n    setLoadingPlanId(planId);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      var _plans$find;\n      const response = await axiosInstance.post('/api/payment/create-checkout-session', {\n        priceId: planId,\n        plan: (_plans$find = plans.find(p => p.id === planId)) === null || _plans$find === void 0 ? void 0 : _plans$find.nickname\n      });\n      const {\n        sessionId\n      } = response.data;\n\n      // Redirect to Stripe Checkout\n      const stripe = window.Stripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId\n      });\n      if (error) {\n        console.error('Stripe redirect error:', error);\n        setMessage({\n          type: 'error',\n          text: 'Failed to redirect to checkout.'\n        });\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error initiating checkout:', error);\n      setMessage({\n        type: 'error',\n        text: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to initiate checkout.'\n      });\n    } finally {\n      setLoadingPlanId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold\",\n      children: \"Available Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-2 rounded ${message.type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), plans.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No plans available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded-lg p-4 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold\",\n          children: plan.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          children: [\"$\", plan.unit_amount / 100, \" / \", plan.currency.toUpperCase(), \"/month\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: plan.product.description || 'No description provided.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-auto bg-primary text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-opacity-90\",\n          onClick: () => handleSelectPlan(plan.id),\n          disabled: loadingPlanId === plan.id,\n          children: loadingPlanId === plan.id ? 'Processing...' : 'Select Plan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, plan.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanDetails, \"/R1T/efhBa12doFTrA0hdoaXRNA=\");\n_c = PlanDetails;\nexport default PlanDetails;\nvar _c;\n$RefreshReg$(_c, \"PlanDetails\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jsxDEV","_jsxDEV","PlanDetails","_s","plans","setPlans","loadingPlanId","setLoadingPlanId","message","setMessage","type","text","fetchPlans","response","get","data","error","_error$response","_error$response$data","console","handleSelectPlan","planId","_plans$find","post","priceId","plan","find","p","id","nickname","sessionId","stripe","window","Stripe","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","redirectToCheckout","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","unit_amount","currency","toUpperCase","product","description","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/AUTOLAWN/autolawn-frontend/src/components/ProfileTabs/PlanDetails.js"],"sourcesContent":["// src/components/ProfileTabs/PlanDetails.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\n\r\nconst PlanDetails = () => {\r\n  const [plans, setPlans] = useState([]);\r\n  const [loadingPlanId, setLoadingPlanId] = useState(null);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchPlans = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/payment/prices');\r\n        setPlans(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching plans:', error);\r\n        setMessage({\r\n          type: 'error',\r\n          text: error.response?.data?.error || 'Failed to fetch plans.',\r\n        });\r\n      }\r\n    };\r\n    fetchPlans();\r\n  }, []);\r\n\r\n  const handleSelectPlan = async (planId) => {\r\n    setLoadingPlanId(planId);\r\n    setMessage({ type: '', text: '' });\r\n    try {\r\n      const response = await axiosInstance.post('/api/payment/create-checkout-session', {\r\n        priceId: planId,\r\n        plan: plans.find((p) => p.id === planId)?.nickname,\r\n      });\r\n\r\n      const { sessionId } = response.data;\r\n\r\n      // Redirect to Stripe Checkout\r\n      const stripe = window.Stripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\r\n      const { error } = await stripe.redirectToCheckout({ sessionId });\r\n\r\n      if (error) {\r\n        console.error('Stripe redirect error:', error);\r\n        setMessage({ type: 'error', text: 'Failed to redirect to checkout.' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initiating checkout:', error);\r\n      setMessage({\r\n        type: 'error',\r\n        text: error.response?.data?.error || 'Failed to initiate checkout.',\r\n      });\r\n    } finally {\r\n      setLoadingPlanId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-semibold\">Available Plans</h3>\r\n      {message.text && (\r\n        <div\r\n          className={`px-4 py-2 rounded ${\r\n            message.type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\r\n          }`}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n      {plans.length === 0 ? (\r\n        <p className=\"text-gray-500\">No plans available.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {plans.map((plan) => (\r\n            <div key={plan.id} className=\"border rounded-lg p-4 flex flex-col\">\r\n              <h4 className=\"text-lg font-semibold\">{plan.nickname}</h4>\r\n              <p className=\"text-2xl font-bold\">\r\n                ${plan.unit_amount / 100} / {plan.currency.toUpperCase()}/month\r\n              </p>\r\n              <p className=\"mt-2 text-gray-600\">{plan.product.description || 'No description provided.'}</p>\r\n              <button\r\n                className=\"mt-auto bg-primary text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-opacity-90\"\r\n                onClick={() => handleSelectPlan(plan.id)}\r\n                disabled={loadingPlanId === plan.id}\r\n              >\r\n                {loadingPlanId === plan.id ? 'Processing...' : 'Select Plan'}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}